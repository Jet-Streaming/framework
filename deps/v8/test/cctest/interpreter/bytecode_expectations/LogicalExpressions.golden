#
# Autogenerated by generate-bytecode-expectations.
#

---
pool type: number
execute: yes
wrap: yes

---
snippet: "
  var x = 0; return x || 3;
"
frame size: 1
parameter count: 1
bytecode array length: 9
bytecodes: [
  B(StackCheck),
  B(LdaZero),
  B(Star), R(0),
  B(JumpIfToBooleanTrue), U8(4),
  B(LdaSmi), U8(3),
  B(Return),
]
constant pool: [
]
handlers: [
]

---
snippet: "
  var x = 0; return (x == 1) || 3;
"
frame size: 2
parameter count: 1
bytecode array length: 15
bytecodes: [
  B(StackCheck),
  B(LdaZero),
  B(Star), R(0),
  B(Star), R(1),
  B(LdaSmi), U8(1),
  B(TestEqual), R(1),
  B(JumpIfTrue), U8(4),
  B(LdaSmi), U8(3),
  B(Return),
]
constant pool: [
]
handlers: [
]

---
snippet: "
  var x = 0; return x && 3;
"
frame size: 1
parameter count: 1
bytecode array length: 9
bytecodes: [
  B(StackCheck),
  B(LdaZero),
  B(Star), R(0),
  B(JumpIfToBooleanFalse), U8(4),
  B(LdaSmi), U8(3),
  B(Return),
]
constant pool: [
]
handlers: [
]

---
snippet: "
  var x = 0; return (x == 0) && 3;
"
frame size: 2
parameter count: 1
bytecode array length: 14
bytecodes: [
  B(StackCheck),
  B(LdaZero),
  B(Star), R(0),
  B(Star), R(1),
  B(LdaZero),
  B(TestEqual), R(1),
  B(JumpIfFalse), U8(4),
  B(LdaSmi), U8(3),
  B(Return),
]
constant pool: [
]
handlers: [
]

---
snippet: "
  var x = 0; return x || (1, 2, 3);
"
frame size: 1
parameter count: 1
bytecode array length: 9
bytecodes: [
  B(StackCheck),
  B(LdaZero),
  B(Star), R(0),
  B(JumpIfToBooleanTrue), U8(4),
  B(LdaSmi), U8(3),
  B(Return),
]
constant pool: [
]
handlers: [
]

---
snippet: "
  var a = 2, b = 3, c = 4; return a || (a, b, a, b, c = 5, 3);
"
frame size: 3
parameter count: 1
bytecode array length: 32
bytecodes: [
  B(StackCheck),
  B(LdaSmi), U8(2),
  B(Star), R(0),
  B(LdaSmi), U8(3),
  B(Star), R(1),
  B(LdaSmi), U8(4),
  B(Star), R(2),
  B(Ldar), R(0),
  B(JumpIfToBooleanTrue), U8(16),
  B(Ldar), R(0),
  B(Ldar), R(1),
  B(Ldar), R(0),
  B(Ldar), R(1),
  B(LdaSmi), U8(5),
  B(Star), R(2),
  B(LdaSmi), U8(3),
  B(Return),
]
constant pool: [
]
handlers: [
]

---
snippet: "
  var x = 1; var a = 2, b = 3; return x || (
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 3);
"
frame size: 3
parameter count: 1
bytecode array length: 276
bytecodes: [
  B(StackCheck),
  B(LdaSmi), U8(1),
  B(Star), R(0),
  B(LdaSmi), U8(2),
  B(Star), R(1),
  B(LdaSmi), U8(3),
  B(Star), R(2),
  B(Ldar), R(0),
  B(JumpIfToBooleanTrueConstant), U8(0),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(3),
  B(Return),
]
constant pool: [
  260,
]
handlers: [
]

---
snippet: "
  var x = 0; var a = 2, b = 3; return x && (
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 3);
"
frame size: 3
parameter count: 1
bytecode array length: 275
bytecodes: [
  B(StackCheck),
  B(LdaZero),
  B(Star), R(0),
  B(LdaSmi), U8(2),
  B(Star), R(1),
  B(LdaSmi), U8(3),
  B(Star), R(2),
  B(Ldar), R(0),
  B(JumpIfToBooleanFalseConstant), U8(0),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(3),
  B(Return),
]
constant pool: [
  260,
]
handlers: [
]

---
snippet: "
  var x = 1; var a = 2, b = 3; return (x > 3) || (
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 3);
"
frame size: 4
parameter count: 1
bytecode array length: 282
bytecodes: [
  B(StackCheck),
  B(LdaSmi), U8(1),
  B(Star), R(0),
  B(LdaSmi), U8(2),
  B(Star), R(1),
  B(LdaSmi), U8(3),
  B(Star), R(2),
  B(Ldar), R(0),
  B(Star), R(3),
  B(LdaSmi), U8(3),
  B(TestGreaterThan), R(3),
  B(JumpIfTrueConstant), U8(0),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(3),
  B(Return),
]
constant pool: [
  260,
]
handlers: [
]

---
snippet: "
  var x = 0; var a = 2, b = 3; return (x < 5) && (
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 
    a = 1, b = 2, 3);
"
frame size: 4
parameter count: 1
bytecode array length: 281
bytecodes: [
  B(StackCheck),
  B(LdaZero),
  B(Star), R(0),
  B(LdaSmi), U8(2),
  B(Star), R(1),
  B(LdaSmi), U8(3),
  B(Star), R(2),
  B(Ldar), R(0),
  B(Star), R(3),
  B(LdaSmi), U8(5),
  B(TestLessThan), R(3),
  B(JumpIfFalseConstant), U8(0),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(1),
  B(Star), R(1),
  B(LdaSmi), U8(2),
  B(Star), R(2),
  B(LdaSmi), U8(3),
  B(Return),
]
constant pool: [
  260,
]
handlers: [
]

---
snippet: "
  return 0 && 3;
"
frame size: 0
parameter count: 1
bytecode array length: 3
bytecodes: [
  B(StackCheck),
  B(LdaZero),
  B(Return),
]
constant pool: [
]
handlers: [
]

---
snippet: "
  return 1 || 3;
"
frame size: 0
parameter count: 1
bytecode array length: 4
bytecodes: [
  B(StackCheck),
  B(LdaSmi), U8(1),
  B(Return),
]
constant pool: [
]
handlers: [
]

---
snippet: "
  var x = 1; return x && 3 || 0, 1;
"
frame size: 1
parameter count: 1
bytecode array length: 15
bytecodes: [
  B(StackCheck),
  B(LdaSmi), U8(1),
  B(Star), R(0),
  B(JumpIfToBooleanFalse), U8(4),
  B(LdaSmi), U8(3),
  B(JumpIfToBooleanTrue), U8(3),
  B(LdaZero),
  B(LdaSmi), U8(1),
  B(Return),
]
constant pool: [
]
handlers: [
]

