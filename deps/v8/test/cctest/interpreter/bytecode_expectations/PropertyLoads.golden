#
# Autogenerated by generate-bytecode-expectations.
#

---
pool type: string
execute: yes
wrap: no
test function name: f

---
snippet: "
  function f(a) { return a.name; }
  f({name : \"test\"});
"
frame size: 1
parameter count: 2
bytecode array length: 10
bytecodes: [
  B(StackCheck),
  B(Ldar), R(arg0),
  B(Star), R(0),
  B(LoadIC), R(0), U8(0), U8(1),
  B(Return),
]
constant pool: [
  "name",
]
handlers: [
]

---
snippet: "
  function f(a) { return a[\"key\"]; }
  f({key : \"test\"});
"
frame size: 1
parameter count: 2
bytecode array length: 10
bytecodes: [
  B(StackCheck),
  B(Ldar), R(arg0),
  B(Star), R(0),
  B(LoadIC), R(0), U8(0), U8(1),
  B(Return),
]
constant pool: [
  "key",
]
handlers: [
]

---
snippet: "
  function f(a) { return a[100]; }
  f({100 : \"test\"});
"
frame size: 1
parameter count: 2
bytecode array length: 11
bytecodes: [
  B(StackCheck),
  B(Ldar), R(arg0),
  B(Star), R(0),
  B(LdaSmi), U8(100),
  B(KeyedLoadIC), R(0), U8(1),
  B(Return),
]
constant pool: [
]
handlers: [
]

---
snippet: "
  function f(a, b) { return a[b]; }
  f({arg : \"test\"}, \"arg\");
"
frame size: 1
parameter count: 3
bytecode array length: 11
bytecodes: [
  B(StackCheck),
  B(Ldar), R(arg0),
  B(Star), R(0),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(0), U8(1),
  B(Return),
]
constant pool: [
]
handlers: [
]

---
snippet: "
  function f(a) { var b = a.name; return a[-124]; }
  f({\"-124\" : \"test\", name : 123 })
"
frame size: 2
parameter count: 2
bytecode array length: 21
bytecodes: [
  B(StackCheck),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(1),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LdaSmi), U8(-124),
  B(KeyedLoadIC), R(1), U8(3),
  B(Return),
]
constant pool: [
  "name",
]
handlers: [
]

---
snippet: "
  function f(a) {
    var b;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    b = a.name;
    return a.name;
  }
  f({name : \"test\"})
"
frame size: 2
parameter count: 2
bytecode array length: 1294
bytecodes: [
  B(StackCheck),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(1),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(3),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(5),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(7),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(9),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(11),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(13),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(15),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(17),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(19),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(21),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(23),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(25),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(27),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(29),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(31),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(33),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(35),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(37),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(39),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(41),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(43),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(45),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(47),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(49),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(51),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(53),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(55),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(57),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(59),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(61),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(63),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(65),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(67),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(69),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(71),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(73),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(75),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(77),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(79),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(81),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(83),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(85),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(87),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(89),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(91),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(93),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(95),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(97),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(99),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(101),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(103),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(105),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(107),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(109),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(111),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(113),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(115),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(117),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(119),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(121),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(123),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(125),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(127),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(129),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(131),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(133),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(135),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(137),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(139),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(141),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(143),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(145),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(147),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(149),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(151),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(153),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(155),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(157),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(159),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(161),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(163),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(165),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(167),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(169),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(171),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(173),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(175),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(177),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(179),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(181),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(183),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(185),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(187),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(189),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(191),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(193),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(195),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(197),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(199),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(201),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(203),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(205),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(207),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(209),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(211),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(213),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(215),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(217),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(219),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(221),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(223),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(225),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(227),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(229),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(231),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(233),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(235),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(237),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(239),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(241),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(243),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(245),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(247),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(249),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(251),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(253),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(LoadIC), R(1), U8(0), U8(255),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Wide), B(LoadIC), R16(1), U16(0), U16(257),
  B(Return),
]
constant pool: [
  "name",
]
handlers: [
]

---
snippet: "
  function f(a, b) {
    var c;
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    c = a[b];
    return a[b];
  }
  f({name : \"test\"}, \"name\")
"
frame size: 2
parameter count: 3
bytecode array length: 1422
bytecodes: [
  B(StackCheck),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(1),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(3),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(5),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(7),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(9),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(11),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(13),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(15),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(17),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(19),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(21),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(23),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(25),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(27),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(29),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(31),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(33),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(35),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(37),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(39),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(41),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(43),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(45),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(47),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(49),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(51),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(53),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(55),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(57),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(59),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(61),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(63),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(65),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(67),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(69),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(71),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(73),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(75),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(77),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(79),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(81),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(83),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(85),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(87),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(89),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(91),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(93),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(95),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(97),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(99),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(101),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(103),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(105),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(107),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(109),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(111),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(113),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(115),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(117),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(119),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(121),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(123),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(125),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(127),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(129),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(131),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(133),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(135),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(137),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(139),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(141),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(143),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(145),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(147),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(149),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(151),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(153),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(155),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(157),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(159),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(161),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(163),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(165),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(167),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(169),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(171),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(173),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(175),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(177),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(179),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(181),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(183),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(185),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(187),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(189),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(191),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(193),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(195),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(197),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(199),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(201),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(203),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(205),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(207),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(209),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(211),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(213),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(215),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(217),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(219),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(221),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(223),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(225),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(227),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(229),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(231),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(233),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(235),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(237),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(239),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(241),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(243),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(245),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(247),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(249),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(251),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(253),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(KeyedLoadIC), R(1), U8(255),
  B(Star), R(0),
  B(Ldar), R(arg0),
  B(Star), R(1),
  B(Ldar), R(arg1),
  B(Wide), B(KeyedLoadIC), R16(1), U16(257),
  B(Return),
]
constant pool: [
]
handlers: [
]

