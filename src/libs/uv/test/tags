!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACCESS_ONCE	benchmark-async-pummel.c	29;"	d	file:
ARRAY_SIZE	task.h	68;"	d
ASSERT	task.h	94;"	d
BACKLOG	test-ipc.c	55;"	d	file:
BAD_ADDR_LIST	test-ip6-addr.c	110;"	d	file:
BAD_ADDR_LIST	test-ip6-addr.c	141;"	d	file:
BAD_PIPENAME	test-pipe-bind-error.c	29;"	d	file:
BAD_PIPENAME	test-pipe-bind-error.c	31;"	d	file:
BAD_PIPENAME	test-pipe-connect-error.c	29;"	d	file:
BAD_PIPENAME	test-pipe-connect-error.c	31;"	d	file:
BAD_PIPENAME	test-pipe-connect-prepare.c	30;"	d	file:
BAD_PIPENAME	test-pipe-connect-prepare.c	32;"	d	file:
BASE_PORT	benchmark-udp-pummel.c	33;"	d	file:
BENCHMARK_DECLARE	runner.h	72;"	d
BENCHMARK_ENTRY	runner.h	75;"	d
BENCHMARK_HELPER	runner.h	85;"	d
BENCHMARK_IMPL	benchmark-async-pummel.c	/^BENCHMARK_IMPL(async_pummel_1) {$/;"	f
BENCHMARK_IMPL	benchmark-async-pummel.c	/^BENCHMARK_IMPL(async_pummel_2) {$/;"	f
BENCHMARK_IMPL	benchmark-async-pummel.c	/^BENCHMARK_IMPL(async_pummel_4) {$/;"	f
BENCHMARK_IMPL	benchmark-async-pummel.c	/^BENCHMARK_IMPL(async_pummel_8) {$/;"	f
BENCHMARK_IMPL	benchmark-async.c	/^BENCHMARK_IMPL(async1) {$/;"	f
BENCHMARK_IMPL	benchmark-async.c	/^BENCHMARK_IMPL(async2) {$/;"	f
BENCHMARK_IMPL	benchmark-async.c	/^BENCHMARK_IMPL(async4) {$/;"	f
BENCHMARK_IMPL	benchmark-async.c	/^BENCHMARK_IMPL(async8) {$/;"	f
BENCHMARK_IMPL	benchmark-fs-stat.c	/^BENCHMARK_IMPL(fs_stat) {$/;"	f
BENCHMARK_IMPL	benchmark-getaddrinfo.c	/^BENCHMARK_IMPL(getaddrinfo) {$/;"	f
BENCHMARK_IMPL	benchmark-loop-count.c	/^BENCHMARK_IMPL(loop_count) {$/;"	f
BENCHMARK_IMPL	benchmark-loop-count.c	/^BENCHMARK_IMPL(loop_count_timed) {$/;"	f
BENCHMARK_IMPL	benchmark-million-async.c	/^BENCHMARK_IMPL(million_async) {$/;"	f
BENCHMARK_IMPL	benchmark-million-timers.c	/^BENCHMARK_IMPL(million_timers) {$/;"	f
BENCHMARK_IMPL	benchmark-multi-accept.c	/^BENCHMARK_IMPL(tcp_multi_accept2) {$/;"	f
BENCHMARK_IMPL	benchmark-multi-accept.c	/^BENCHMARK_IMPL(tcp_multi_accept4) {$/;"	f
BENCHMARK_IMPL	benchmark-multi-accept.c	/^BENCHMARK_IMPL(tcp_multi_accept8) {$/;"	f
BENCHMARK_IMPL	benchmark-ping-pongs.c	/^BENCHMARK_IMPL(ping_pongs) {$/;"	f
BENCHMARK_IMPL	benchmark-pound.c	/^BENCHMARK_IMPL(pipe_pound_100) {$/;"	f
BENCHMARK_IMPL	benchmark-pound.c	/^BENCHMARK_IMPL(pipe_pound_1000) {$/;"	f
BENCHMARK_IMPL	benchmark-pound.c	/^BENCHMARK_IMPL(tcp4_pound_100) {$/;"	f
BENCHMARK_IMPL	benchmark-pound.c	/^BENCHMARK_IMPL(tcp4_pound_1000) {$/;"	f
BENCHMARK_IMPL	benchmark-pump.c	/^BENCHMARK_IMPL(pipe_pump100_client) {$/;"	f
BENCHMARK_IMPL	benchmark-pump.c	/^BENCHMARK_IMPL(pipe_pump1_client) {$/;"	f
BENCHMARK_IMPL	benchmark-pump.c	/^BENCHMARK_IMPL(tcp_pump100_client) {$/;"	f
BENCHMARK_IMPL	benchmark-pump.c	/^BENCHMARK_IMPL(tcp_pump1_client) {$/;"	f
BENCHMARK_IMPL	benchmark-sizes.c	/^BENCHMARK_IMPL(sizes) {$/;"	f
BENCHMARK_IMPL	benchmark-spawn.c	/^BENCHMARK_IMPL(spawn) {$/;"	f
BENCHMARK_IMPL	benchmark-tcp-write-batch.c	/^BENCHMARK_IMPL(tcp_write_batch) {$/;"	f
BENCHMARK_IMPL	benchmark-thread.c	/^BENCHMARK_IMPL(thread_create) {$/;"	f
BENCHMARK_IMPL	task.h	120;"	d
BUFSIZE	test-ping-pong.c	33;"	d	file:
CHECK_HANDLE	test-udp-dgram-too-big.c	29;"	d	file:
CHECK_HANDLE	test-udp-ipv6.c	29;"	d	file:
CHECK_HANDLE	test-udp-multicast-interface.c	29;"	d	file:
CHECK_HANDLE	test-udp-multicast-interface6.c	29;"	d	file:
CHECK_HANDLE	test-udp-multicast-join.c	29;"	d	file:
CHECK_HANDLE	test-udp-multicast-join6.c	30;"	d	file:
CHECK_HANDLE	test-udp-multicast-ttl.c	29;"	d	file:
CHECK_HANDLE	test-udp-send-and-recv.c	29;"	d	file:
CHECK_HANDLE	test-udp-send-immediate.c	29;"	d	file:
CHECK_HANDLE	test-udp-send-unreachable.c	29;"	d	file:
CHECK_HANDLE	test-udp-try-send.c	39;"	d	file:
CHECK_REQ	test-udp-dgram-too-big.c	32;"	d	file:
CHECK_REQ	test-udp-ipv6.c	34;"	d	file:
CHUNKS_PER_WRITE	test-tcp-writealot.c	29;"	d	file:
CHUNK_SIZE	test-tcp-writealot.c	30;"	d	file:
CLOSE	test-signal.c	/^  enum { CLOSE, STOP } stop_or_close;$/;"	e	enum:signal_ctx::__anon22	file:
CONCURRENT_CALLS	benchmark-getaddrinfo.c	26;"	d	file:
CONCURRENT_COUNT	test-getaddrinfo.c	26;"	d	file:
CONN_COUNT	test-ipc.c	54;"	d	file:
DEBUG	benchmark-pound.c	31;"	d	file:
DEBUG	benchmark-pound.c	32;"	d	file:
DNSREC_LEN	dns-server.c	62;"	d	file:
DNSRsp	dns-server.c	/^static unsigned char DNSRsp[] = {$/;"	v	file:
DUPLEX	test-poll.c	/^  DUPLEX$/;"	e	enum:__anon16	file:
EXPECTED	benchmark-udp-pummel.c	29;"	d	file:
FATAL	task.h	80;"	d
FIXTURE	test-fs-poll.c	27;"	d	file:
GOOD_ADDR_LIST	test-ip6-addr.c	100;"	d	file:
GOOD_ADDR_LIST	test-ip6-addr.c	140;"	d	file:
HAVE_EPOLL	test-embed.c	40;"	d	file:
HAVE_KQUEUE	test-embed.c	34;"	d	file:
HAVE_KQUEUE	test-fs-event.c	34;"	d	file:
HELPER_DECLARE	runner.h	78;"	d
HELPER_ENTRY	runner.h	81;"	d
HELPER_IMPL	benchmark-pump.c	/^HELPER_IMPL(pipe_pump_server) {$/;"	f
HELPER_IMPL	benchmark-pump.c	/^HELPER_IMPL(tcp_pump_server) {$/;"	f
HELPER_IMPL	blackhole-server.c	/^HELPER_IMPL(tcp4_blackhole_server) {$/;"	f
HELPER_IMPL	dns-server.c	/^HELPER_IMPL(dns_server) {$/;"	f
HELPER_IMPL	echo-server.c	/^HELPER_IMPL(pipe_echo_server) {$/;"	f
HELPER_IMPL	echo-server.c	/^HELPER_IMPL(tcp4_echo_server) {$/;"	f
HELPER_IMPL	echo-server.c	/^HELPER_IMPL(tcp6_echo_server) {$/;"	f
HELPER_IMPL	echo-server.c	/^HELPER_IMPL(udp4_echo_server) {$/;"	f
HELPER_IMPL	task.h	124;"	d
IDLE_COUNT	test-loop-handles.c	73;"	d	file:
INIT_CANCEL_INFO	test-threadpool-cancel.c	25;"	d	file:
INVALID_FD	test-tcp-create-socket-early.c	28;"	d	file:
INVALID_FD	test-tcp-create-socket-early.c	30;"	d	file:
INVALID_FD	test-udp-create-socket-early.c	28;"	d	file:
INVALID_FD	test-udp-create-socket-early.c	30;"	d	file:
IPC_PIPE_NAME	benchmark-multi-accept.c	25;"	d	file:
ITERATIONS	test-loop-handles.c	74;"	d	file:
LEN_OFFSET	dns-server.c	64;"	d	file:
MAKE_VALGRIND_HAPPY	task.h	109;"	d
MAX_BYTES	test-tcp-try-write.c	29;"	d	file:
MAX_CONCURRENT_REQS	benchmark-fs-stat.c	30;"	d	file:
MAX_CONNS	benchmark-pound.c	26;"	d	file:
MAX_PROCESSES	runner.h	33;"	d
MAX_SIMULTANEOUS_CONNECTS	benchmark-pump.c	31;"	d	file:
MAX_WRITE_HANDLES	benchmark-pump.c	72;"	d	file:
MESSAGE	test-callback-stack.c	/^static const char MESSAGE[] = "Failure is for the weak. Everyone dies alone.";$/;"	v	file:
MILLISEC	test-hrtime.c	26;"	d	file:
MIN	test-poll.c	36;"	d	file:
MIN	test-poll.c	37;"	d	file:
N	benchmark-spawn.c	/^static int N = 1000;$/;"	v	file:
NANOSEC	benchmark-pound.c	28;"	d	file:
NANOSEC	benchmark-pound.c	29;"	d	file:
NANOSEC	test-hrtime.c	30;"	d	file:
NO_INLINE	test-poll-close-doesnt-corrupt-stack.c	31;"	d	file:
NO_INLINE	test-poll-close-doesnt-corrupt-stack.c	33;"	d	file:
NSIGNALS	test-signal.c	37;"	d	file:
NUM_ASYNC_REQS	benchmark-fs-stat.c	29;"	d	file:
NUM_CLIENTS	test-pipe-connect-multiple.c	32;"	d	file:
NUM_CLIENTS	test-poll.c	33;"	d	file:
NUM_CONNECTS	benchmark-multi-accept.c	26;"	d	file:
NUM_LOOP_CREATING_THREADS	test-signal-multiple-loops.c	44;"	d	file:
NUM_PINGS	benchmark-async-pummel.c	28;"	d	file:
NUM_PINGS	benchmark-async.c	28;"	d	file:
NUM_PINGS	test-ping-pong.c	30;"	d	file:
NUM_SIGNAL_HANDLING_THREADS	test-signal-multiple-loops.c	43;"	d	file:
NUM_SOCKETS	test-poll-close.c	33;"	d	file:
NUM_SYNC_REQS	benchmark-fs-stat.c	28;"	d	file:
NUM_THREADS	benchmark-thread.c	28;"	d	file:
NUM_TICKS	benchmark-loop-count.c	28;"	d	file:
NUM_TICKS	test-run-once.c	25;"	d	file:
NUM_TIMERS	benchmark-million-timers.c	25;"	d	file:
NUM_WRITE_REQS	benchmark-tcp-write-batch.c	29;"	d	file:
NUM_WRITE_REQS	test-tcp-close.c	28;"	d	file:
ONLY_SIGUSR1	test-signal-multiple-loops.c	/^  ONLY_SIGUSR1,$/;"	e	enum:signal_action	file:
ONLY_SIGUSR2	test-signal-multiple-loops.c	/^  ONLY_SIGUSR2,$/;"	e	enum:signal_action	file:
OUTPUT_SIZE	benchmark-spawn.c	39;"	d	file:
OUTPUT_SIZE	test-spawn.c	53;"	d	file:
OUTPUT_SIZE	test-stdio-over-pipes.c	40;"	d	file:
PATHMAX	test-cwd-and-chdir.c	26;"	d	file:
PATHMAX	test-fs.c	51;"	d	file:
PATHMAX	test-get-currentexe.c	26;"	d	file:
PATHMAX	test-homedir.c	5;"	d	file:
PING	benchmark-ping-pongs.c	/^static char PING[] = "PING\\n";$/;"	v	file:
PING	test-ping-pong.c	/^static char PING[] = "PING\\n";$/;"	v	file:
PIPE	task.h	/^  PIPE$/;"	e	enum:__anon23
PRINT_STATS	benchmark-pump.c	33;"	d	file:
QUERYID_OFFSET	dns-server.c	65;"	d	file:
REQ_COUNT	test-tcp-write-queue-order.c	29;"	d	file:
RETURN_OK	task.h	141;"	d
RETURN_SKIP	task.h	153;"	d
RETURN_TODO	task.h	146;"	d
RUNNER_H_	runner.h	23;"	d
SIGUSR1_AND_SIGUSR2	test-signal-multiple-loops.c	/^  SIGUSR1_AND_SIGUSR2$/;"	e	enum:signal_action	file:
SMALLPATH	test-homedir.c	6;"	d	file:
STATS_COUNT	benchmark-pump.c	35;"	d	file:
STATS_INTERVAL	benchmark-pump.c	34;"	d	file:
STOP	test-signal.c	/^  enum { CLOSE, STOP } stop_or_close;$/;"	e	enum:signal_ctx::__anon22	file:
S_IRUSR	task.h	61;"	d
S_IWUSR	task.h	64;"	d
TARGET_CONNECTIONS	benchmark-pump.c	/^static int TARGET_CONNECTIONS;$/;"	v	file:
TASK_H_	task.h	23;"	d
TASK_LIST_END	runner.h	59;"	d
TASK_LIST_START	runner.h	56;"	d
TCP	task.h	/^  TCP = 0,$/;"	e	enum:__anon23
TEST_BAD	test-ip6-addr.c	124;"	d	file:
TEST_DECLARE	runner.h	63;"	d
TEST_DURATION	benchmark-udp-pummel.c	31;"	d	file:
TEST_ENTRY	runner.h	66;"	d
TEST_ENTRY_CUSTOM	runner.h	69;"	d
TEST_FILE_LIMIT	task.h	162;"	d
TEST_FILE_LIMIT	task.h	173;"	d
TEST_GOOD	test-ip6-addr.c	118;"	d	file:
TEST_HELPER	runner.h	84;"	d
TEST_IMPL	task.h	116;"	d
TEST_IMPL	test-active.c	/^TEST_IMPL(active) {$/;"	f
TEST_IMPL	test-async-null-cb.c	/^TEST_IMPL(async_null_cb) {$/;"	f
TEST_IMPL	test-async.c	/^TEST_IMPL(async) {$/;"	f
TEST_IMPL	test-barrier.c	/^TEST_IMPL(barrier_1) {$/;"	f
TEST_IMPL	test-barrier.c	/^TEST_IMPL(barrier_2) {$/;"	f
TEST_IMPL	test-barrier.c	/^TEST_IMPL(barrier_3) {$/;"	f
TEST_IMPL	test-callback-order.c	/^TEST_IMPL(callback_order) {$/;"	f
TEST_IMPL	test-callback-stack.c	/^TEST_IMPL(callback_stack) {$/;"	f
TEST_IMPL	test-close-fd.c	/^TEST_IMPL(close_fd) {$/;"	f
TEST_IMPL	test-close-order.c	/^TEST_IMPL(close_order) {$/;"	f
TEST_IMPL	test-condvar.c	/^TEST_IMPL(condvar_1) {$/;"	f
TEST_IMPL	test-condvar.c	/^TEST_IMPL(condvar_2) {$/;"	f
TEST_IMPL	test-condvar.c	/^TEST_IMPL(condvar_3) {$/;"	f
TEST_IMPL	test-condvar.c	/^TEST_IMPL(condvar_4) {$/;"	f
TEST_IMPL	test-condvar.c	/^TEST_IMPL(condvar_5) {$/;"	f
TEST_IMPL	test-connection-fail.c	/^TEST_IMPL(connection_fail) {$/;"	f
TEST_IMPL	test-connection-fail.c	/^TEST_IMPL(connection_fail_doesnt_auto_close) {$/;"	f
TEST_IMPL	test-cwd-and-chdir.c	/^TEST_IMPL(cwd_and_chdir) {$/;"	f
TEST_IMPL	test-default-loop-close.c	/^TEST_IMPL(default_loop_close) {$/;"	f
TEST_IMPL	test-delayed-accept.c	/^TEST_IMPL(delayed_accept) {$/;"	f
TEST_IMPL	test-dlerror.c	/^TEST_IMPL(dlerror) {$/;"	f
TEST_IMPL	test-embed.c	/^TEST_IMPL(embed) {$/;"	f
TEST_IMPL	test-emfile.c	/^TEST_IMPL(emfile) {$/;"	f
TEST_IMPL	test-error.c	/^TEST_IMPL(error_message) {$/;"	f
TEST_IMPL	test-fail-always.c	/^TEST_IMPL(fail_always) {$/;"	f
TEST_IMPL	test-fs-event.c	/^TEST_IMPL(fs_event_close_in_callback) {$/;"	f
TEST_IMPL	test-fs-event.c	/^TEST_IMPL(fs_event_close_with_pending_event) {$/;"	f
TEST_IMPL	test-fs-event.c	/^TEST_IMPL(fs_event_error_reporting) {$/;"	f
TEST_IMPL	test-fs-event.c	/^TEST_IMPL(fs_event_getpath) {$/;"	f
TEST_IMPL	test-fs-event.c	/^TEST_IMPL(fs_event_immediate_close) {$/;"	f
TEST_IMPL	test-fs-event.c	/^TEST_IMPL(fs_event_no_callback_after_close) {$/;"	f
TEST_IMPL	test-fs-event.c	/^TEST_IMPL(fs_event_no_callback_on_close) {$/;"	f
TEST_IMPL	test-fs-event.c	/^TEST_IMPL(fs_event_start_and_close) {$/;"	f
TEST_IMPL	test-fs-event.c	/^TEST_IMPL(fs_event_watch_dir) {$/;"	f
TEST_IMPL	test-fs-event.c	/^TEST_IMPL(fs_event_watch_dir_recursive) {$/;"	f
TEST_IMPL	test-fs-event.c	/^TEST_IMPL(fs_event_watch_file) {$/;"	f
TEST_IMPL	test-fs-event.c	/^TEST_IMPL(fs_event_watch_file_current_dir) {$/;"	f
TEST_IMPL	test-fs-event.c	/^TEST_IMPL(fs_event_watch_file_twice) {$/;"	f
TEST_IMPL	test-fs-poll.c	/^TEST_IMPL(fs_poll) {$/;"	f
TEST_IMPL	test-fs-poll.c	/^TEST_IMPL(fs_poll_getpath) {$/;"	f
TEST_IMPL	test-fs.c	/^TEST_IMPL(fs_access) {$/;"	f
TEST_IMPL	test-fs.c	/^TEST_IMPL(fs_async_dir) {$/;"	f
TEST_IMPL	test-fs.c	/^TEST_IMPL(fs_async_sendfile) {$/;"	f
TEST_IMPL	test-fs.c	/^TEST_IMPL(fs_chmod) {$/;"	f
TEST_IMPL	test-fs.c	/^TEST_IMPL(fs_chown) {$/;"	f
TEST_IMPL	test-fs.c	/^TEST_IMPL(fs_file_async) {$/;"	f
TEST_IMPL	test-fs.c	/^TEST_IMPL(fs_file_loop) {$/;"	f
TEST_IMPL	test-fs.c	/^TEST_IMPL(fs_file_nametoolong) {$/;"	f
TEST_IMPL	test-fs.c	/^TEST_IMPL(fs_file_noent) {$/;"	f
TEST_IMPL	test-fs.c	/^TEST_IMPL(fs_file_open_append) {$/;"	f
TEST_IMPL	test-fs.c	/^TEST_IMPL(fs_file_sync) {$/;"	f
TEST_IMPL	test-fs.c	/^TEST_IMPL(fs_file_write_null_buffer) {$/;"	f
TEST_IMPL	test-fs.c	/^TEST_IMPL(fs_fstat) {$/;"	f
TEST_IMPL	test-fs.c	/^TEST_IMPL(fs_futime) {$/;"	f
TEST_IMPL	test-fs.c	/^TEST_IMPL(fs_link) {$/;"	f
TEST_IMPL	test-fs.c	/^TEST_IMPL(fs_mkdtemp) {$/;"	f
TEST_IMPL	test-fs.c	/^TEST_IMPL(fs_open_dir) {$/;"	f
TEST_IMPL	test-fs.c	/^TEST_IMPL(fs_read_file_eof) {$/;"	f
TEST_IMPL	test-fs.c	/^TEST_IMPL(fs_read_write_null_arguments) {$/;"	f
TEST_IMPL	test-fs.c	/^TEST_IMPL(fs_readlink) {$/;"	f
TEST_IMPL	test-fs.c	/^TEST_IMPL(fs_rename_to_existing_file) {$/;"	f
TEST_IMPL	test-fs.c	/^TEST_IMPL(fs_scandir_empty_dir) {$/;"	f
TEST_IMPL	test-fs.c	/^TEST_IMPL(fs_scandir_file) {$/;"	f
TEST_IMPL	test-fs.c	/^TEST_IMPL(fs_stat_missing_path) {$/;"	f
TEST_IMPL	test-fs.c	/^TEST_IMPL(fs_stat_root) {$/;"	f
TEST_IMPL	test-fs.c	/^TEST_IMPL(fs_symlink) {$/;"	f
TEST_IMPL	test-fs.c	/^TEST_IMPL(fs_symlink_dir) {$/;"	f
TEST_IMPL	test-fs.c	/^TEST_IMPL(fs_unlink_readonly) {$/;"	f
TEST_IMPL	test-fs.c	/^TEST_IMPL(fs_utime) {$/;"	f
TEST_IMPL	test-fs.c	/^TEST_IMPL(fs_write_alotof_bufs) {$/;"	f
TEST_IMPL	test-fs.c	/^TEST_IMPL(fs_write_alotof_bufs_with_offset) {$/;"	f
TEST_IMPL	test-fs.c	/^TEST_IMPL(fs_write_multiple_bufs) {$/;"	f
TEST_IMPL	test-get-currentexe.c	/^TEST_IMPL(get_currentexe) {$/;"	f
TEST_IMPL	test-get-loadavg.c	/^TEST_IMPL(get_loadavg) {$/;"	f
TEST_IMPL	test-get-memory.c	/^TEST_IMPL(get_memory) {$/;"	f
TEST_IMPL	test-getaddrinfo.c	/^TEST_IMPL(getaddrinfo_basic) {$/;"	f
TEST_IMPL	test-getaddrinfo.c	/^TEST_IMPL(getaddrinfo_basic_sync) {$/;"	f
TEST_IMPL	test-getaddrinfo.c	/^TEST_IMPL(getaddrinfo_concurrent) {$/;"	f
TEST_IMPL	test-getaddrinfo.c	/^TEST_IMPL(getaddrinfo_fail) {$/;"	f
TEST_IMPL	test-getaddrinfo.c	/^TEST_IMPL(getaddrinfo_fail_sync) {$/;"	f
TEST_IMPL	test-getnameinfo.c	/^TEST_IMPL(getnameinfo_basic_ip4) {$/;"	f
TEST_IMPL	test-getnameinfo.c	/^TEST_IMPL(getnameinfo_basic_ip4_sync) {$/;"	f
TEST_IMPL	test-getnameinfo.c	/^TEST_IMPL(getnameinfo_basic_ip6) {$/;"	f
TEST_IMPL	test-getsockname.c	/^TEST_IMPL(getsockname_tcp) {$/;"	f
TEST_IMPL	test-getsockname.c	/^TEST_IMPL(getsockname_udp) {$/;"	f
TEST_IMPL	test-handle-fileno.c	/^TEST_IMPL(handle_fileno) {$/;"	f
TEST_IMPL	test-homedir.c	/^TEST_IMPL(homedir) {$/;"	f
TEST_IMPL	test-hrtime.c	/^TEST_IMPL(hrtime) {$/;"	f
TEST_IMPL	test-idle.c	/^TEST_IMPL(idle_starvation) {$/;"	f
TEST_IMPL	test-ip4-addr.c	/^TEST_IMPL(ip4_addr) {$/;"	f
TEST_IMPL	test-ip6-addr.c	/^TEST_IMPL(ip6_addr_link_local) {$/;"	f
TEST_IMPL	test-ip6-addr.c	/^TEST_IMPL(ip6_pton) {$/;"	f
TEST_IMPL	test-ipc-send-recv.c	/^TEST_IMPL(ipc_send_recv_pipe) {$/;"	f
TEST_IMPL	test-ipc-send-recv.c	/^TEST_IMPL(ipc_send_recv_pipe_inprocess) {$/;"	f
TEST_IMPL	test-ipc-send-recv.c	/^TEST_IMPL(ipc_send_recv_tcp) {$/;"	f
TEST_IMPL	test-ipc-send-recv.c	/^TEST_IMPL(ipc_send_recv_tcp_inprocess) {$/;"	f
TEST_IMPL	test-ipc.c	/^TEST_IMPL(ipc_listen_after_bind_twice) {$/;"	f
TEST_IMPL	test-ipc.c	/^TEST_IMPL(ipc_listen_after_write) {$/;"	f
TEST_IMPL	test-ipc.c	/^TEST_IMPL(ipc_listen_before_write) {$/;"	f
TEST_IMPL	test-ipc.c	/^TEST_IMPL(ipc_tcp_connection) {$/;"	f
TEST_IMPL	test-ipc.c	/^TEST_IMPL(listen_no_simultaneous_accepts) {$/;"	f
TEST_IMPL	test-ipc.c	/^TEST_IMPL(listen_with_simultaneous_accepts) {$/;"	f
TEST_IMPL	test-loop-alive.c	/^TEST_IMPL(loop_alive) {$/;"	f
TEST_IMPL	test-loop-close.c	/^TEST_IMPL(loop_close) {$/;"	f
TEST_IMPL	test-loop-configure.c	/^TEST_IMPL(loop_configure) {$/;"	f
TEST_IMPL	test-loop-handles.c	/^TEST_IMPL(loop_handles) {$/;"	f
TEST_IMPL	test-loop-stop.c	/^TEST_IMPL(loop_stop) {$/;"	f
TEST_IMPL	test-loop-time.c	/^TEST_IMPL(loop_backend_timeout) {$/;"	f
TEST_IMPL	test-loop-time.c	/^TEST_IMPL(loop_update_time) {$/;"	f
TEST_IMPL	test-multiple-listen.c	/^TEST_IMPL(multiple_listen) {$/;"	f
TEST_IMPL	test-mutexes.c	/^TEST_IMPL(thread_mutex) {$/;"	f
TEST_IMPL	test-mutexes.c	/^TEST_IMPL(thread_rwlock) {$/;"	f
TEST_IMPL	test-mutexes.c	/^TEST_IMPL(thread_rwlock_trylock) {$/;"	f
TEST_IMPL	test-osx-select.c	/^TEST_IMPL(osx_select) {$/;"	f
TEST_IMPL	test-osx-select.c	/^TEST_IMPL(osx_select_many_fds) {$/;"	f
TEST_IMPL	test-pass-always.c	/^TEST_IMPL(pass_always) {$/;"	f
TEST_IMPL	test-ping-pong.c	/^TEST_IMPL(pipe_ping_pong) {$/;"	f
TEST_IMPL	test-ping-pong.c	/^TEST_IMPL(tcp_ping_pong) {$/;"	f
TEST_IMPL	test-ping-pong.c	/^TEST_IMPL(tcp_ping_pong_v6) {$/;"	f
TEST_IMPL	test-pipe-bind-error.c	/^TEST_IMPL(pipe_bind_error_addrinuse) {$/;"	f
TEST_IMPL	test-pipe-bind-error.c	/^TEST_IMPL(pipe_bind_error_addrnotavail) {$/;"	f
TEST_IMPL	test-pipe-bind-error.c	/^TEST_IMPL(pipe_bind_error_inval) {$/;"	f
TEST_IMPL	test-pipe-bind-error.c	/^TEST_IMPL(pipe_listen_without_bind) {$/;"	f
TEST_IMPL	test-pipe-close-stdout-read-stdin.c	/^TEST_IMPL(pipe_close_stdout_read_stdin) {$/;"	f
TEST_IMPL	test-pipe-connect-error.c	/^TEST_IMPL(pipe_connect_bad_name) {$/;"	f
TEST_IMPL	test-pipe-connect-error.c	/^TEST_IMPL(pipe_connect_to_file) {$/;"	f
TEST_IMPL	test-pipe-connect-multiple.c	/^TEST_IMPL(pipe_connect_multiple) {$/;"	f
TEST_IMPL	test-pipe-connect-prepare.c	/^TEST_IMPL(pipe_connect_on_prepare) {$/;"	f
TEST_IMPL	test-pipe-getsockname.c	/^TEST_IMPL(pipe_getsockname) {$/;"	f
TEST_IMPL	test-pipe-getsockname.c	/^TEST_IMPL(pipe_getsockname_abstract) {$/;"	f
TEST_IMPL	test-pipe-getsockname.c	/^TEST_IMPL(pipe_getsockname_blocking) {$/;"	f
TEST_IMPL	test-pipe-pending-instances.c	/^TEST_IMPL(pipe_pending_instances) {$/;"	f
TEST_IMPL	test-pipe-sendmsg.c	/^TEST_IMPL(pipe_sendmsg) {$/;"	f
TEST_IMPL	test-pipe-server-close.c	/^TEST_IMPL(pipe_server_close) {$/;"	f
TEST_IMPL	test-pipe-set-non-blocking.c	/^TEST_IMPL(pipe_set_non_blocking) {$/;"	f
TEST_IMPL	test-platform-output.c	/^TEST_IMPL(platform_output) {$/;"	f
TEST_IMPL	test-poll-close-doesnt-corrupt-stack.c	/^TEST_IMPL(poll_close_doesnt_corrupt_stack) {$/;"	f
TEST_IMPL	test-poll-close.c	/^TEST_IMPL(poll_close) {$/;"	f
TEST_IMPL	test-poll-closesocket.c	/^TEST_IMPL(poll_closesocket) {$/;"	f
TEST_IMPL	test-poll.c	/^TEST_IMPL(poll_duplex) {$/;"	f
TEST_IMPL	test-poll.c	/^TEST_IMPL(poll_unidirectional) {$/;"	f
TEST_IMPL	test-process-title.c	/^TEST_IMPL(process_title) {$/;"	f
TEST_IMPL	test-ref.c	/^TEST_IMPL(async_ref) {$/;"	f
TEST_IMPL	test-ref.c	/^TEST_IMPL(check_ref) {$/;"	f
TEST_IMPL	test-ref.c	/^TEST_IMPL(fs_event_ref) {$/;"	f
TEST_IMPL	test-ref.c	/^TEST_IMPL(fs_poll_ref) {$/;"	f
TEST_IMPL	test-ref.c	/^TEST_IMPL(has_ref) {$/;"	f
TEST_IMPL	test-ref.c	/^TEST_IMPL(idle_ref) {$/;"	f
TEST_IMPL	test-ref.c	/^TEST_IMPL(pipe_ref) {$/;"	f
TEST_IMPL	test-ref.c	/^TEST_IMPL(pipe_ref2) {$/;"	f
TEST_IMPL	test-ref.c	/^TEST_IMPL(pipe_ref3) {$/;"	f
TEST_IMPL	test-ref.c	/^TEST_IMPL(pipe_ref4) {$/;"	f
TEST_IMPL	test-ref.c	/^TEST_IMPL(prepare_ref) {$/;"	f
TEST_IMPL	test-ref.c	/^TEST_IMPL(process_ref) {$/;"	f
TEST_IMPL	test-ref.c	/^TEST_IMPL(ref) {$/;"	f
TEST_IMPL	test-ref.c	/^TEST_IMPL(tcp_ref) {$/;"	f
TEST_IMPL	test-ref.c	/^TEST_IMPL(tcp_ref2) {$/;"	f
TEST_IMPL	test-ref.c	/^TEST_IMPL(tcp_ref2b) {$/;"	f
TEST_IMPL	test-ref.c	/^TEST_IMPL(tcp_ref3) {$/;"	f
TEST_IMPL	test-ref.c	/^TEST_IMPL(tcp_ref4) {$/;"	f
TEST_IMPL	test-ref.c	/^TEST_IMPL(timer_ref) {$/;"	f
TEST_IMPL	test-ref.c	/^TEST_IMPL(timer_ref2) {$/;"	f
TEST_IMPL	test-ref.c	/^TEST_IMPL(udp_ref) {$/;"	f
TEST_IMPL	test-ref.c	/^TEST_IMPL(udp_ref2) {$/;"	f
TEST_IMPL	test-ref.c	/^TEST_IMPL(udp_ref3) {$/;"	f
TEST_IMPL	test-ref.c	/^TEST_IMPL(unref_in_prepare_cb) {$/;"	f
TEST_IMPL	test-run-nowait.c	/^TEST_IMPL(run_nowait) {$/;"	f
TEST_IMPL	test-run-once.c	/^TEST_IMPL(run_once) {$/;"	f
TEST_IMPL	test-semaphore.c	/^TEST_IMPL(semaphore_1) {$/;"	f
TEST_IMPL	test-semaphore.c	/^TEST_IMPL(semaphore_2) {$/;"	f
TEST_IMPL	test-semaphore.c	/^TEST_IMPL(semaphore_3) {$/;"	f
TEST_IMPL	test-shutdown-close.c	/^TEST_IMPL(shutdown_close_pipe) {$/;"	f
TEST_IMPL	test-shutdown-close.c	/^TEST_IMPL(shutdown_close_tcp) {$/;"	f
TEST_IMPL	test-shutdown-eof.c	/^TEST_IMPL(shutdown_eof) {$/;"	f
TEST_IMPL	test-shutdown-twice.c	/^TEST_IMPL(shutdown_twice) {$/;"	f
TEST_IMPL	test-signal-multiple-loops.c	/^TEST_IMPL(signal_multiple_loops) {$/;"	f
TEST_IMPL	test-signal.c	/^TEST_IMPL(we_get_signal) {$/;"	f
TEST_IMPL	test-signal.c	/^TEST_IMPL(we_get_signals) {$/;"	f
TEST_IMPL	test-socket-buffer-size.c	/^TEST_IMPL(socket_buffer_size) {$/;"	f
TEST_IMPL	test-spawn.c	/^TEST_IMPL(argument_escaping) {$/;"	f
TEST_IMPL	test-spawn.c	/^TEST_IMPL(closed_fd_events) {$/;"	f
TEST_IMPL	test-spawn.c	/^TEST_IMPL(environment_creation) {$/;"	f
TEST_IMPL	test-spawn.c	/^TEST_IMPL(kill) {$/;"	f
TEST_IMPL	test-spawn.c	/^TEST_IMPL(spawn_and_kill) {$/;"	f
TEST_IMPL	test-spawn.c	/^TEST_IMPL(spawn_and_kill_with_std) {$/;"	f
TEST_IMPL	test-spawn.c	/^TEST_IMPL(spawn_and_ping) {$/;"	f
TEST_IMPL	test-spawn.c	/^TEST_IMPL(spawn_auto_unref) {$/;"	f
TEST_IMPL	test-spawn.c	/^TEST_IMPL(spawn_closed_process_io) {$/;"	f
TEST_IMPL	test-spawn.c	/^TEST_IMPL(spawn_detached) {$/;"	f
TEST_IMPL	test-spawn.c	/^TEST_IMPL(spawn_detect_pipe_name_collisions_on_windows) {$/;"	f
TEST_IMPL	test-spawn.c	/^TEST_IMPL(spawn_exit_code) {$/;"	f
TEST_IMPL	test-spawn.c	/^TEST_IMPL(spawn_fails) {$/;"	f
TEST_IMPL	test-spawn.c	/^TEST_IMPL(spawn_fails_check_for_waitpid_cleanup) {$/;"	f
TEST_IMPL	test-spawn.c	/^TEST_IMPL(spawn_fs_open) {$/;"	f
TEST_IMPL	test-spawn.c	/^TEST_IMPL(spawn_ignored_stdio) {$/;"	f
TEST_IMPL	test-spawn.c	/^TEST_IMPL(spawn_inherit_streams) {$/;"	f
TEST_IMPL	test-spawn.c	/^TEST_IMPL(spawn_preserve_env) {$/;"	f
TEST_IMPL	test-spawn.c	/^TEST_IMPL(spawn_reads_child_path) {$/;"	f
TEST_IMPL	test-spawn.c	/^TEST_IMPL(spawn_same_stdout_stderr) {$/;"	f
TEST_IMPL	test-spawn.c	/^TEST_IMPL(spawn_setgid_fails) {$/;"	f
TEST_IMPL	test-spawn.c	/^TEST_IMPL(spawn_setuid_fails) {$/;"	f
TEST_IMPL	test-spawn.c	/^TEST_IMPL(spawn_setuid_setgid) {$/;"	f
TEST_IMPL	test-spawn.c	/^TEST_IMPL(spawn_stdin) {$/;"	f
TEST_IMPL	test-spawn.c	/^TEST_IMPL(spawn_stdio_greater_than_3) {$/;"	f
TEST_IMPL	test-spawn.c	/^TEST_IMPL(spawn_stdout) {$/;"	f
TEST_IMPL	test-spawn.c	/^TEST_IMPL(spawn_stdout_and_stderr_to_file) {$/;"	f
TEST_IMPL	test-spawn.c	/^TEST_IMPL(spawn_stdout_and_stderr_to_file2) {$/;"	f
TEST_IMPL	test-spawn.c	/^TEST_IMPL(spawn_stdout_and_stderr_to_file_swap) {$/;"	f
TEST_IMPL	test-spawn.c	/^TEST_IMPL(spawn_stdout_to_file) {$/;"	f
TEST_IMPL	test-spawn.c	/^TEST_IMPL(spawn_with_an_odd_path) {$/;"	f
TEST_IMPL	test-stdio-over-pipes.c	/^TEST_IMPL(stdio_over_pipes) {$/;"	f
TEST_IMPL	test-tcp-bind-error.c	/^TEST_IMPL(tcp_bind_error_addrinuse) {$/;"	f
TEST_IMPL	test-tcp-bind-error.c	/^TEST_IMPL(tcp_bind_error_addrnotavail_1) {$/;"	f
TEST_IMPL	test-tcp-bind-error.c	/^TEST_IMPL(tcp_bind_error_addrnotavail_2) {$/;"	f
TEST_IMPL	test-tcp-bind-error.c	/^TEST_IMPL(tcp_bind_error_fault) {$/;"	f
TEST_IMPL	test-tcp-bind-error.c	/^TEST_IMPL(tcp_bind_error_inval) {$/;"	f
TEST_IMPL	test-tcp-bind-error.c	/^TEST_IMPL(tcp_bind_invalid_flags) {$/;"	f
TEST_IMPL	test-tcp-bind-error.c	/^TEST_IMPL(tcp_bind_localhost_ok) {$/;"	f
TEST_IMPL	test-tcp-bind-error.c	/^TEST_IMPL(tcp_listen_without_bind) {$/;"	f
TEST_IMPL	test-tcp-bind6-error.c	/^TEST_IMPL(tcp_bind6_error_addrinuse) {$/;"	f
TEST_IMPL	test-tcp-bind6-error.c	/^TEST_IMPL(tcp_bind6_error_addrnotavail) {$/;"	f
TEST_IMPL	test-tcp-bind6-error.c	/^TEST_IMPL(tcp_bind6_error_fault) {$/;"	f
TEST_IMPL	test-tcp-bind6-error.c	/^TEST_IMPL(tcp_bind6_error_inval) {$/;"	f
TEST_IMPL	test-tcp-bind6-error.c	/^TEST_IMPL(tcp_bind6_localhost_ok) {$/;"	f
TEST_IMPL	test-tcp-close-while-connecting.c	/^TEST_IMPL(tcp_close_while_connecting) {$/;"	f
TEST_IMPL	test-tcp-close.c	/^TEST_IMPL(tcp_close) {$/;"	f
TEST_IMPL	test-tcp-connect-error-after-write.c	/^TEST_IMPL(tcp_connect_error_after_write) {$/;"	f
TEST_IMPL	test-tcp-connect-error.c	/^TEST_IMPL(tcp_connect_error_fault) {$/;"	f
TEST_IMPL	test-tcp-connect-timeout.c	/^TEST_IMPL(tcp_connect_timeout) {$/;"	f
TEST_IMPL	test-tcp-connect6-error.c	/^TEST_IMPL(tcp_connect6_error_fault) {$/;"	f
TEST_IMPL	test-tcp-create-socket-early.c	/^TEST_IMPL(tcp_create_early) {$/;"	f
TEST_IMPL	test-tcp-create-socket-early.c	/^TEST_IMPL(tcp_create_early_accept) {$/;"	f
TEST_IMPL	test-tcp-create-socket-early.c	/^TEST_IMPL(tcp_create_early_bad_bind) {$/;"	f
TEST_IMPL	test-tcp-create-socket-early.c	/^TEST_IMPL(tcp_create_early_bad_domain) {$/;"	f
TEST_IMPL	test-tcp-flags.c	/^TEST_IMPL(tcp_flags) {$/;"	f
TEST_IMPL	test-tcp-oob.c	/^TEST_IMPL(tcp_oob) {$/;"	f
TEST_IMPL	test-tcp-open.c	/^TEST_IMPL(tcp_open) {$/;"	f
TEST_IMPL	test-tcp-open.c	/^TEST_IMPL(tcp_open_twice) {$/;"	f
TEST_IMPL	test-tcp-read-stop.c	/^TEST_IMPL(tcp_read_stop) {$/;"	f
TEST_IMPL	test-tcp-shutdown-after-write.c	/^TEST_IMPL(tcp_shutdown_after_write) {$/;"	f
TEST_IMPL	test-tcp-try-write.c	/^TEST_IMPL(tcp_try_write) {$/;"	f
TEST_IMPL	test-tcp-unexpected-read.c	/^TEST_IMPL(tcp_unexpected_read) {$/;"	f
TEST_IMPL	test-tcp-write-after-connect.c	/^TEST_IMPL(tcp_write_after_connect) {$/;"	f
TEST_IMPL	test-tcp-write-fail.c	/^TEST_IMPL(tcp_write_fail) {$/;"	f
TEST_IMPL	test-tcp-write-queue-order.c	/^TEST_IMPL(tcp_write_queue_order) {$/;"	f
TEST_IMPL	test-tcp-write-to-half-open-connection.c	/^TEST_IMPL(tcp_write_to_half_open_connection) {$/;"	f
TEST_IMPL	test-tcp-writealot.c	/^TEST_IMPL(tcp_writealot) {$/;"	f
TEST_IMPL	test-thread-equal.c	/^TEST_IMPL(thread_equal) {$/;"	f
TEST_IMPL	test-thread.c	/^TEST_IMPL(thread_create) {$/;"	f
TEST_IMPL	test-thread.c	/^TEST_IMPL(thread_local_storage) {$/;"	f
TEST_IMPL	test-thread.c	/^TEST_IMPL(threadpool_multiple_event_loops) {$/;"	f
TEST_IMPL	test-threadpool-cancel.c	/^TEST_IMPL(threadpool_cancel_fs) {$/;"	f
TEST_IMPL	test-threadpool-cancel.c	/^TEST_IMPL(threadpool_cancel_getaddrinfo) {$/;"	f
TEST_IMPL	test-threadpool-cancel.c	/^TEST_IMPL(threadpool_cancel_getnameinfo) {$/;"	f
TEST_IMPL	test-threadpool-cancel.c	/^TEST_IMPL(threadpool_cancel_single) {$/;"	f
TEST_IMPL	test-threadpool-cancel.c	/^TEST_IMPL(threadpool_cancel_work) {$/;"	f
TEST_IMPL	test-threadpool.c	/^TEST_IMPL(threadpool_queue_work_einval) {$/;"	f
TEST_IMPL	test-threadpool.c	/^TEST_IMPL(threadpool_queue_work_simple) {$/;"	f
TEST_IMPL	test-timer-again.c	/^TEST_IMPL(timer_again) {$/;"	f
TEST_IMPL	test-timer-from-check.c	/^TEST_IMPL(timer_from_check) {$/;"	f
TEST_IMPL	test-timer.c	/^TEST_IMPL(timer) {$/;"	f
TEST_IMPL	test-timer.c	/^TEST_IMPL(timer_huge_repeat) {$/;"	f
TEST_IMPL	test-timer.c	/^TEST_IMPL(timer_huge_timeout) {$/;"	f
TEST_IMPL	test-timer.c	/^TEST_IMPL(timer_init) {$/;"	f
TEST_IMPL	test-timer.c	/^TEST_IMPL(timer_null_callback) {$/;"	f
TEST_IMPL	test-timer.c	/^TEST_IMPL(timer_order) {$/;"	f
TEST_IMPL	test-timer.c	/^TEST_IMPL(timer_run_once) {$/;"	f
TEST_IMPL	test-timer.c	/^TEST_IMPL(timer_start_twice) {$/;"	f
TEST_IMPL	test-tty.c	/^TEST_IMPL(tty) {$/;"	f
TEST_IMPL	test-tty.c	/^TEST_IMPL(tty_file) {$/;"	f
TEST_IMPL	test-udp-bind.c	/^TEST_IMPL(udp_bind) {$/;"	f
TEST_IMPL	test-udp-bind.c	/^TEST_IMPL(udp_bind_reuseaddr) {$/;"	f
TEST_IMPL	test-udp-create-socket-early.c	/^TEST_IMPL(udp_create_early) {$/;"	f
TEST_IMPL	test-udp-create-socket-early.c	/^TEST_IMPL(udp_create_early_bad_bind) {$/;"	f
TEST_IMPL	test-udp-create-socket-early.c	/^TEST_IMPL(udp_create_early_bad_domain) {$/;"	f
TEST_IMPL	test-udp-dgram-too-big.c	/^TEST_IMPL(udp_dgram_too_big) {$/;"	f
TEST_IMPL	test-udp-ipv6.c	/^TEST_IMPL(udp_dual_stack) {$/;"	f
TEST_IMPL	test-udp-ipv6.c	/^TEST_IMPL(udp_ipv6_only) {$/;"	f
TEST_IMPL	test-udp-multicast-interface.c	/^TEST_IMPL(udp_multicast_interface) {$/;"	f
TEST_IMPL	test-udp-multicast-interface6.c	/^TEST_IMPL(udp_multicast_interface6) {$/;"	f
TEST_IMPL	test-udp-multicast-join.c	/^TEST_IMPL(udp_multicast_join) {$/;"	f
TEST_IMPL	test-udp-multicast-join6.c	/^TEST_IMPL(udp_multicast_join6) {$/;"	f
TEST_IMPL	test-udp-multicast-ttl.c	/^TEST_IMPL(udp_multicast_ttl) {$/;"	f
TEST_IMPL	test-udp-open.c	/^TEST_IMPL(udp_open) {$/;"	f
TEST_IMPL	test-udp-open.c	/^TEST_IMPL(udp_open_twice) {$/;"	f
TEST_IMPL	test-udp-options.c	/^TEST_IMPL(udp_no_autobind) {$/;"	f
TEST_IMPL	test-udp-options.c	/^TEST_IMPL(udp_options) {$/;"	f
TEST_IMPL	test-udp-options.c	/^TEST_IMPL(udp_options6) {$/;"	f
TEST_IMPL	test-udp-send-and-recv.c	/^TEST_IMPL(udp_send_and_recv) {$/;"	f
TEST_IMPL	test-udp-send-immediate.c	/^TEST_IMPL(udp_send_immediate) {$/;"	f
TEST_IMPL	test-udp-send-unreachable.c	/^TEST_IMPL(udp_send_unreachable) {$/;"	f
TEST_IMPL	test-udp-try-send.c	/^TEST_IMPL(udp_try_send) {$/;"	f
TEST_IMPL	test-walk-handles.c	/^TEST_IMPL(walk_handles) {$/;"	f
TEST_IMPL	test-watcher-cross-stop.c	/^TEST_IMPL(watcher_cross_stop) {$/;"	f
TEST_OK	task.h	/^  TEST_OK = 0,$/;"	e	enum:test_status
TEST_PIPENAME	task.h	51;"	d
TEST_PIPENAME	task.h	54;"	d
TEST_PIPENAME_2	task.h	52;"	d
TEST_PIPENAME_2	task.h	55;"	d
TEST_PORT	task.h	47;"	d
TEST_PORT_2	task.h	48;"	d
TEST_RUNNER_UNIX_H	runner-unix.h	23;"	d
TEST_SKIP	task.h	/^  TEST_SKIP$/;"	e	enum:test_status
TEST_TODO	task.h	/^  TEST_TODO,$/;"	e	enum:test_status
TIME	benchmark-ping-pongs.c	29;"	d	file:
TIMEOUT	test-loop-handles.c	75;"	d	file:
TOO_LONG_NAME_LENGTH	test-fs.c	50;"	d	file:
TOTAL_BYTES	test-tcp-writealot.c	32;"	d	file:
TOTAL_CALLS	benchmark-getaddrinfo.c	27;"	d	file:
TRANSFER_BYTES	test-poll.c	34;"	d	file:
UDP	task.h	/^  UDP,$/;"	e	enum:__anon23
UNIDIRECTIONAL	test-poll.c	/^  UNIDIRECTIONAL,$/;"	e	enum:__anon16	file:
UNUSED	task.h	185;"	d
UNUSED	task.h	187;"	d
WRITES	test-tcp-writealot.c	28;"	d	file:
WRITE_BUFFER_SIZE	benchmark-pump.c	30;"	d	file:
WRITE_BUF_LEN	dns-server.c	61;"	d	file:
WRITE_REQ_DATA	benchmark-tcp-write-batch.c	28;"	d	file:
X	benchmark-udp-pummel.c	223;"	d	file:
X	benchmark-udp-pummel.c	243;"	d	file:
access_cb	test-fs.c	/^static void access_cb(uv_fs_t* req) {$/;"	f	file:
access_cb_count	test-fs.c	/^static int access_cb_count;$/;"	v	file:
addr	benchmark-udp-pummel.c	/^  struct sockaddr_in addr;$/;"	m	struct:receiver_state	typeref:struct:receiver_state::sockaddr_in	file:
addr	benchmark-udp-pummel.c	/^  struct sockaddr_in addr;$/;"	m	struct:sender_state	typeref:struct:sender_state::sockaddr_in	file:
addr	test-tcp-close-accept.c	/^static struct sockaddr_in addr;$/;"	v	typeref:struct:sockaddr_in	file:
addr4	test-getnameinfo.c	/^static struct sockaddr_in addr4;$/;"	v	typeref:struct:sockaddr_in	file:
addr6	test-getnameinfo.c	/^static struct sockaddr_in6 addr6;$/;"	v	typeref:struct:sockaddr_in6	file:
address_ip4	test-getnameinfo.c	/^static const char* address_ip4 = "127.0.0.1";$/;"	v	file:
address_ip6	test-getnameinfo.c	/^static const char* address_ip6 = "::1";$/;"	v	file:
addrsp	dns-server.c	/^static void addrsp(write_req_t* wr, char* hdr) {$/;"	f	file:
after_pipe_write	test-stdio-over-pipes.c	/^static void after_pipe_write(uv_write_t* req, int status) {$/;"	f	file:
after_read	dns-server.c	/^static void after_read(uv_stream_t* handle,$/;"	f	file:
after_read	echo-server.c	/^static void after_read(uv_stream_t* handle,$/;"	f	file:
after_read	test-getsockname.c	/^static void after_read(uv_stream_t* handle,$/;"	f	file:
after_shutdown	dns-server.c	/^static void after_shutdown(uv_shutdown_t* req, int status) {$/;"	f	file:
after_shutdown	echo-server.c	/^static void after_shutdown(uv_shutdown_t* req, int status) {$/;"	f	file:
after_shutdown	test-getsockname.c	/^static void after_shutdown(uv_shutdown_t* req, int status) {$/;"	f	file:
after_work_cb	test-loop-alive.c	/^static void after_work_cb(uv_work_t* req, int status) {$/;"	f	file:
after_work_cb	test-threadpool.c	/^static void after_work_cb(uv_work_t* req, int status) {$/;"	f	file:
after_work_cb_count	test-threadpool.c	/^static int after_work_cb_count;$/;"	v	file:
after_write	benchmark-pound.c	/^static void after_write(uv_write_t* req, int status) {$/;"	f	file:
after_write	dns-server.c	/^static void after_write(uv_write_t* req, int status) {$/;"	f	file:
after_write	echo-server.c	/^static void after_write(uv_write_t* req, int status) {$/;"	f	file:
after_write	test-stdio-over-pipes.c	/^static void after_write(uv_write_t* req, int status) {$/;"	f	file:
after_write_called	test-stdio-over-pipes.c	/^static int after_write_called;$/;"	v	file:
after_write_cb_called	test-stdio-over-pipes.c	/^static int after_write_cb_called;$/;"	v	file:
alloc	test-getsockname.c	/^static void alloc(uv_handle_t* handle, size_t suggested_size, uv_buf_t* buf) {$/;"	f	file:
alloc_buffer	test-pipe-close-stdout-read-stdin.c	/^void alloc_buffer(uv_handle_t *handle, size_t suggested_size, uv_buf_t* buf)$/;"	f
alloc_cb	benchmark-pound.c	/^static void alloc_cb(uv_handle_t* handle,$/;"	f	file:
alloc_cb	benchmark-udp-pummel.c	/^static void alloc_cb(uv_handle_t* handle,$/;"	f	file:
alloc_cb	blackhole-server.c	/^static void alloc_cb(uv_handle_t* handle,$/;"	f	file:
alloc_cb	test-callback-stack.c	/^static void alloc_cb(uv_handle_t* handle, size_t size, uv_buf_t* buf) {$/;"	f	file:
alloc_cb	test-close-fd.c	/^static void alloc_cb(uv_handle_t *handle, size_t size, uv_buf_t *buf) {$/;"	f	file:
alloc_cb	test-delayed-accept.c	/^static void alloc_cb(uv_handle_t* handle, size_t size, uv_buf_t* buf) {$/;"	f	file:
alloc_cb	test-ipc-send-recv.c	/^static void alloc_cb(uv_handle_t* handle,$/;"	f	file:
alloc_cb	test-osx-select.c	/^static void alloc_cb(uv_handle_t* handle, size_t size, uv_buf_t* buf) {$/;"	f	file:
alloc_cb	test-ping-pong.c	/^static void alloc_cb(uv_handle_t* handle, size_t size, uv_buf_t* buf) {$/;"	f	file:
alloc_cb	test-pipe-sendmsg.c	/^static void alloc_cb(uv_handle_t* handle, size_t size, uv_buf_t* buf) {$/;"	f	file:
alloc_cb	test-shutdown-eof.c	/^static void alloc_cb(uv_handle_t* handle, size_t size, uv_buf_t* buf) {$/;"	f	file:
alloc_cb	test-tcp-close-accept.c	/^static void alloc_cb(uv_handle_t* handle, size_t size, uv_buf_t* buf) {$/;"	f	file:
alloc_cb	test-tcp-oob.c	/^static void alloc_cb(uv_handle_t* handle,$/;"	f	file:
alloc_cb	test-tcp-open.c	/^static void alloc_cb(uv_handle_t* handle,$/;"	f	file:
alloc_cb	test-tcp-shutdown-after-write.c	/^static void alloc_cb(uv_handle_t* handle,$/;"	f	file:
alloc_cb	test-tcp-try-write.c	/^static void alloc_cb(uv_handle_t* handle, size_t size, uv_buf_t* buf) {$/;"	f	file:
alloc_cb	test-tcp-unexpected-read.c	/^static void alloc_cb(uv_handle_t* handle,$/;"	f	file:
alloc_cb	test-tcp-write-to-half-open-connection.c	/^static void alloc_cb(uv_handle_t* handle,$/;"	f	file:
alloc_cb	test-tcp-writealot.c	/^static void alloc_cb(uv_handle_t* handle, size_t size, uv_buf_t* buf) {$/;"	f	file:
alloc_cb	test-udp-ipv6.c	/^static void alloc_cb(uv_handle_t* handle,$/;"	f	file:
alloc_cb	test-udp-multicast-join.c	/^static void alloc_cb(uv_handle_t* handle,$/;"	f	file:
alloc_cb	test-udp-multicast-join6.c	/^static void alloc_cb(uv_handle_t* handle,$/;"	f	file:
alloc_cb	test-udp-open.c	/^static void alloc_cb(uv_handle_t* handle,$/;"	f	file:
alloc_cb	test-udp-send-and-recv.c	/^static void alloc_cb(uv_handle_t* handle,$/;"	f	file:
alloc_cb	test-udp-send-immediate.c	/^static void alloc_cb(uv_handle_t* handle,$/;"	f	file:
alloc_cb	test-udp-send-unreachable.c	/^static void alloc_cb(uv_handle_t* handle,$/;"	f	file:
alloc_cb	test-udp-try-send.c	/^static void alloc_cb(uv_handle_t* handle,$/;"	f	file:
alloc_cb	test-watcher-cross-stop.c	/^static void alloc_cb(uv_handle_t* handle, size_t size, uv_buf_t* buf) {$/;"	f	file:
alloc_cb_called	test-udp-send-unreachable.c	/^static int alloc_cb_called;$/;"	v	file:
arecord	dns-server.c	/^static unsigned char arecord[] = {$/;"	v	file:
args	benchmark-spawn.c	/^static char* args[3];$/;"	v	file:
args	test-spawn.c	/^static char* args[3];$/;"	v	file:
args	test-stdio-over-pipes.c	/^static char* args[3];$/;"	v	file:
assert_is_file_type	test-fs.c	/^static void assert_is_file_type(uv_dirent_t dent) {$/;"	f	file:
async	test-async.c	/^static uv_async_t async;$/;"	v	file:
async_bench	benchmark-fs-stat.c	/^static void async_bench(const char* path) {$/;"	f	file:
async_cb	benchmark-async-pummel.c	/^static void async_cb(uv_async_t* handle) {$/;"	f	file:
async_cb	benchmark-million-async.c	/^static void async_cb(uv_async_t* handle) {$/;"	f	file:
async_cb	test-async.c	/^static void async_cb(uv_async_t* handle) {$/;"	f	file:
async_cb_called	test-async.c	/^static volatile int async_cb_called;$/;"	v	file:
async_container	benchmark-million-async.c	/^struct async_container {$/;"	s	file:
async_events	benchmark-million-async.c	/^  unsigned async_events;$/;"	m	struct:async_container	file:
async_handle	benchmark-multi-accept.c	/^  uv_async_t async_handle;$/;"	m	struct:server_ctx	file:
async_handle	test-async-null-cb.c	/^static uv_async_t async_handle;$/;"	v	file:
async_handles	benchmark-million-async.c	/^  uv_async_t async_handles[1024 * 1024];$/;"	m	struct:async_container	file:
async_req	benchmark-fs-stat.c	/^struct async_req {$/;"	s	file:
atime	test-fs.c	/^  double atime;$/;"	m	struct:__anon5	file:
barrier	test-barrier.c	/^  uv_barrier_t barrier;$/;"	m	struct:__anon3	file:
barrier	test-pipe-set-non-blocking.c	/^  uv_barrier_t barrier;$/;"	m	struct:thread_ctx	file:
bench_entry_t	runner.h	/^} task_entry_t, bench_entry_t;$/;"	t	typeref:struct:__anon4
buf	benchmark-tcp-write-batch.c	/^  uv_buf_t buf;$/;"	m	struct:__anon21	file:
buf	dns-server.c	/^  uv_buf_t buf;$/;"	m	struct:__anon7	file:
buf	echo-server.c	/^  uv_buf_t buf;$/;"	m	struct:__anon2	file:
buf	test-fs.c	/^static char buf[32];$/;"	v	file:
buf	test-tcp-write-after-connect.c	/^uv_buf_t buf = { "HELLO", 4 };$/;"	v
buf2	test-fs.c	/^static char buf2[32];$/;"	v	file:
buf_alloc	benchmark-ping-pongs.c	/^static void buf_alloc(uv_handle_t* tcp, size_t size, uv_buf_t* buf) {$/;"	f	file:
buf_alloc	benchmark-pump.c	/^static void buf_alloc(uv_handle_t* handle, size_t size, uv_buf_t* buf) {$/;"	f	file:
buf_alloc	dns-server.c	/^static void buf_alloc(uv_handle_t* handle,$/;"	f	file:
buf_free	benchmark-ping-pongs.c	/^static void buf_free(const uv_buf_t* buf) {$/;"	f	file:
buf_free	benchmark-pump.c	/^static void buf_free(const uv_buf_t* buf) {$/;"	f	file:
buf_freelist	benchmark-ping-pongs.c	/^static buf_t* buf_freelist = NULL;$/;"	v	file:
buf_freelist	benchmark-pump.c	/^static buf_list_t* buf_freelist = NULL;$/;"	v	file:
buf_list_s	benchmark-pump.c	/^typedef struct buf_list_s {$/;"	s	file:
buf_list_t	benchmark-pump.c	/^} buf_list_t;$/;"	t	typeref:struct:buf_list_s	file:
buf_s	benchmark-ping-pongs.c	/^typedef struct buf_s {$/;"	s	file:
buf_t	benchmark-ping-pongs.c	/^} buf_t;$/;"	t	typeref:struct:buf_s	file:
buffer	benchmark-pound.c	/^static char buffer[] = "QS";$/;"	v	file:
buffer	test-ref.c	/^static char buffer[32767];$/;"	v	file:
bufs	benchmark-udp-pummel.c	/^static uv_buf_t bufs[5];$/;"	v	file:
bytes_read	test-tcp-try-write.c	/^static int bytes_read;$/;"	v	file:
bytes_received	test-callback-stack.c	/^static int bytes_received = 0;$/;"	v	file:
bytes_received_done	test-tcp-writealot.c	/^static size_t bytes_received_done = 0;$/;"	v	file:
bytes_sent	test-tcp-writealot.c	/^static size_t bytes_sent = 0;$/;"	v	file:
bytes_sent_done	test-tcp-writealot.c	/^static size_t bytes_sent_done = 0;$/;"	v	file:
bytes_written	test-tcp-try-write.c	/^static int bytes_written;$/;"	v	file:
callback_counts	test-getaddrinfo.c	/^static int callback_counts[CONCURRENT_COUNT];$/;"	v	file:
callbacks	benchmark-async-pummel.c	/^static unsigned int callbacks;$/;"	v	file:
called_connect_cb	test-shutdown-eof.c	/^static int called_connect_cb;$/;"	v	file:
called_shutdown_cb	test-shutdown-eof.c	/^static int called_shutdown_cb;$/;"	v	file:
called_tcp_close_cb	test-shutdown-eof.c	/^static int called_tcp_close_cb;$/;"	v	file:
called_timer_cb	test-shutdown-eof.c	/^static int called_timer_cb;$/;"	v	file:
called_timer_close_cb	test-shutdown-eof.c	/^static int called_timer_close_cb;$/;"	v	file:
calls_completed	benchmark-getaddrinfo.c	/^static int calls_completed = 0;$/;"	v	file:
calls_initiated	benchmark-getaddrinfo.c	/^static int calls_initiated = 0;$/;"	v	file:
can_ipv6	task.h	/^UNUSED static int can_ipv6(void) {$/;"	f
cancel_info	test-threadpool-cancel.c	/^struct cancel_info {$/;"	s	file:
cb	test-loop-time.c	/^static void cb(uv_timer_t* timer) {$/;"	f	file:
channel	test-ipc-send-recv.c	/^  uv_pipe_t channel;$/;"	m	struct:echo_ctx	file:
channel	test-ipc-send-recv.c	/^  uv_pipe_t channel;$/;"	m	struct:test_ctx	file:
channel	test-ipc.c	/^static uv_pipe_t channel;$/;"	v	file:
check_buffer_size	test-socket-buffer-size.c	/^static void check_buffer_size(uv_handle_t* handle) {$/;"	f	file:
check_cb	test-async-null-cb.c	/^static void check_cb(uv_check_t* handle) {$/;"	f	file:
check_cb	test-close-order.c	/^static void check_cb(uv_check_t* handle) {$/;"	f	file:
check_cb	test-idle.c	/^static void check_cb(uv_check_t* handle) {$/;"	f	file:
check_cb	test-loop-handles.c	/^static void check_cb(uv_check_t* handle) {$/;"	f	file:
check_cb	test-tcp-unexpected-read.c	/^static void check_cb(uv_check_t* handle) {$/;"	f	file:
check_cb	test-timer-from-check.c	/^static void check_cb(uv_check_t* handle) {$/;"	f	file:
check_cb_called	test-async-null-cb.c	/^static int check_cb_called;$/;"	v	file:
check_cb_called	test-close-order.c	/^static int check_cb_called;$/;"	v	file:
check_cb_called	test-idle.c	/^static int check_cb_called = 0;$/;"	v	file:
check_cb_called	test-loop-handles.c	/^static int check_cb_called = 0;$/;"	v	file:
check_cb_called	test-timer-from-check.c	/^static int check_cb_called;$/;"	v	file:
check_close_cb	test-loop-handles.c	/^static void check_close_cb(uv_handle_t* handle) {$/;"	f	file:
check_close_cb_called	test-loop-handles.c	/^static int check_close_cb_called = 0;$/;"	v	file:
check_handle	test-async-null-cb.c	/^static uv_check_t check_handle;$/;"	v	file:
check_handle	test-close-order.c	/^static uv_check_t check_handle;$/;"	v	file:
check_handle	test-idle.c	/^static uv_check_t check_handle;$/;"	v	file:
check_handle	test-loop-handles.c	/^static uv_check_t check_handle;$/;"	v	file:
check_handle	test-tcp-unexpected-read.c	/^static uv_check_t check_handle;$/;"	v	file:
check_handle	test-timer-from-check.c	/^static uv_check_t check_handle;$/;"	v	file:
check_mkdtemp_result	test-fs.c	/^static void check_mkdtemp_result(uv_fs_t* req) {$/;"	f	file:
check_permission	test-fs.c	/^static void check_permission(const char* filename, unsigned int mode) {$/;"	f	file:
check_sockname	test-getsockname.c	/^static void check_sockname(struct sockaddr* addr, const char* compare_ip,$/;"	f	file:
check_thread	test-thread-equal.c	/^static void check_thread(void* arg) {$/;"	f	file:
check_utime	test-fs.c	/^static void check_utime(const char* path, double atime, double mtime) {$/;"	f	file:
chmod_cb	test-fs.c	/^static void chmod_cb(uv_fs_t* req) {$/;"	f	file:
chmod_cb_count	test-fs.c	/^static int chmod_cb_count;$/;"	v	file:
chown_cb	test-fs.c	/^static void chown_cb(uv_fs_t* req) {$/;"	f	file:
chown_cb_count	test-fs.c	/^static int chown_cb_count;$/;"	v	file:
chown_root_cb	test-fs.c	/^static void chown_root_cb(uv_fs_t* req) {$/;"	f	file:
cl_close_cb	benchmark-multi-accept.c	/^static void cl_close_cb(uv_handle_t* handle) {$/;"	f	file:
cl_connect_cb	benchmark-multi-accept.c	/^static void cl_connect_cb(uv_connect_t* req, int status) {$/;"	f	file:
cl_idle_cb	benchmark-multi-accept.c	/^static void cl_idle_cb(uv_idle_t* handle) {$/;"	f	file:
cl_recv_cb	test-udp-multicast-join.c	/^static void cl_recv_cb(uv_udp_t* handle,$/;"	f	file:
cl_recv_cb	test-udp-multicast-join6.c	/^static void cl_recv_cb(uv_udp_t* handle,$/;"	f	file:
cl_recv_cb	test-udp-send-and-recv.c	/^static void cl_recv_cb(uv_udp_t* handle,$/;"	f	file:
cl_recv_cb_called	test-udp-multicast-join.c	/^static int cl_recv_cb_called;$/;"	v	file:
cl_recv_cb_called	test-udp-multicast-join6.c	/^static int cl_recv_cb_called;$/;"	v	file:
cl_recv_cb_called	test-udp-send-and-recv.c	/^static int cl_recv_cb_called;$/;"	v	file:
cl_send_cb	test-udp-send-and-recv.c	/^static void cl_send_cb(uv_udp_send_t* req, int status) {$/;"	f	file:
cl_send_cb	test-udp-send-immediate.c	/^static void cl_send_cb(uv_udp_send_t* req, int status) {$/;"	f	file:
cl_send_cb_called	test-udp-send-and-recv.c	/^static int cl_send_cb_called;$/;"	v	file:
cl_send_cb_called	test-udp-send-immediate.c	/^static int cl_send_cb_called;$/;"	v	file:
cleanup_threadpool	test-threadpool-cancel.c	/^static void cleanup_threadpool(void) {$/;"	f	file:
clear_line	runner-win.c	/^static int clear_line() {$/;"	f	file:
client	test-callback-stack.c	/^static uv_tcp_t client;$/;"	v	file:
client	test-multiple-listen.c	/^static uv_tcp_t client;$/;"	v	file:
client	test-tcp-try-write.c	/^static uv_tcp_t client;$/;"	v	file:
client	test-tcp-write-queue-order.c	/^static uv_tcp_t client;$/;"	v	file:
client	test-udp-ipv6.c	/^static uv_udp_t client;$/;"	v	file:
client	test-udp-multicast-interface.c	/^static uv_udp_t client;$/;"	v	file:
client	test-udp-multicast-interface6.c	/^static uv_udp_t client;$/;"	v	file:
client	test-udp-multicast-join.c	/^static uv_udp_t client;$/;"	v	file:
client	test-udp-multicast-join6.c	/^static uv_udp_t client;$/;"	v	file:
client	test-udp-multicast-ttl.c	/^static uv_udp_t client;$/;"	v	file:
client	test-udp-send-and-recv.c	/^static uv_udp_t client;$/;"	v	file:
client	test-udp-send-immediate.c	/^static uv_udp_t client;$/;"	v	file:
client	test-udp-send-unreachable.c	/^static uv_udp_t client;$/;"	v	file:
client	test-udp-try-send.c	/^static uv_udp_t client;$/;"	v	file:
client_connect	test-delayed-accept.c	/^static void client_connect(void) {$/;"	f	file:
client_connect	test-multiple-listen.c	/^static void client_connect(void) {$/;"	f	file:
client_ctx	benchmark-multi-accept.c	/^struct client_ctx {$/;"	s	file:
client_handle	benchmark-multi-accept.c	/^  handle_storage_t client_handle;$/;"	m	struct:client_ctx	file:
client_handle	test-emfile.c	/^static uv_tcp_t client_handle;$/;"	v	file:
client_handle	test-tcp-oob.c	/^static uv_tcp_t client_handle;$/;"	v	file:
client_handle	test-tcp-unexpected-read.c	/^static uv_tcp_t client_handle;$/;"	v	file:
client_t	test-pipe-connect-multiple.c	/^} client_t;$/;"	t	typeref:struct:__anon17	file:
clients	test-pipe-connect-multiple.c	/^static client_t clients[NUM_CLIENTS];$/;"	v	file:
close	test-fs.c	41;"	d	file:
close_called	test-pipe-sendmsg.c	/^static unsigned int close_called;$/;"	v	file:
close_cb	benchmark-million-timers.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	benchmark-pound.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	benchmark-tcp-write-batch.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	benchmark-udp-pummel.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	blackhole-server.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-active.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-async.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-callback-stack.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-close-order.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-delayed-accept.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-fs-event.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-fs-poll.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-fs.c	/^static void close_cb(uv_fs_t* req) {$/;"	f	file:
close_cb	test-idle.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-ipc.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-multiple-listen.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-pipe-bind-error.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-pipe-connect-error.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-pipe-connect-prepare.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-pipe-sendmsg.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-poll-close-doesnt-corrupt-stack.c	/^static void close_cb(uv_handle_t* h) {$/;"	f	file:
close_cb	test-poll-close.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-poll-closesocket.c	/^static void close_cb(uv_handle_t* h) {$/;"	f	file:
close_cb	test-ref.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-shutdown-close.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-shutdown-twice.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-socket-buffer-size.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-spawn.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-stdio-over-pipes.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-tcp-bind-error.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-tcp-bind6-error.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-tcp-close-accept.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-tcp-close-while-connecting.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-tcp-close.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-tcp-connect-error-after-write.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-tcp-connect-error.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-tcp-connect-timeout.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-tcp-connect6-error.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-tcp-open.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-tcp-shutdown-after-write.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-tcp-try-write.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-tcp-write-fail.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-tcp-write-queue-order.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-tcp-writealot.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-timer-again.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-udp-dgram-too-big.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-udp-ipv6.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-udp-multicast-interface.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-udp-multicast-interface6.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-udp-multicast-join.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-udp-multicast-join6.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-udp-multicast-ttl.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-udp-open.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-udp-send-and-recv.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-udp-send-immediate.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-udp-send-unreachable.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-udp-try-send.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb	test-watcher-cross-stop.c	/^static void close_cb(uv_handle_t* handle) {$/;"	f	file:
close_cb_called	benchmark-million-timers.c	/^static int close_cb_called;$/;"	v	file:
close_cb_called	benchmark-tcp-write-batch.c	/^static int close_cb_called = 0;$/;"	v	file:
close_cb_called	benchmark-udp-pummel.c	/^static unsigned int close_cb_called;$/;"	v	file:
close_cb_called	test-active.c	/^static int close_cb_called = 0;$/;"	v	file:
close_cb_called	test-async.c	/^static int close_cb_called;$/;"	v	file:
close_cb_called	test-callback-stack.c	/^static int close_cb_called = 0;$/;"	v	file:
close_cb_called	test-close-order.c	/^static int close_cb_called;$/;"	v	file:
close_cb_called	test-delayed-accept.c	/^static int close_cb_called = 0;$/;"	v	file:
close_cb_called	test-fs-event.c	/^static int close_cb_called;$/;"	v	file:
close_cb_called	test-fs-poll.c	/^static int close_cb_called;$/;"	v	file:
close_cb_called	test-idle.c	/^static int close_cb_called = 0;$/;"	v	file:
close_cb_called	test-ipc.c	/^static int close_cb_called;$/;"	v	file:
close_cb_called	test-multiple-listen.c	/^static int close_cb_called = 0;$/;"	v	file:
close_cb_called	test-pipe-bind-error.c	/^static int close_cb_called = 0;$/;"	v	file:
close_cb_called	test-pipe-connect-error.c	/^static int close_cb_called = 0;$/;"	v	file:
close_cb_called	test-pipe-connect-prepare.c	/^static int close_cb_called = 0;$/;"	v	file:
close_cb_called	test-poll-close-doesnt-corrupt-stack.c	/^static int close_cb_called = 0;$/;"	v	file:
close_cb_called	test-poll-close.c	/^static int close_cb_called = 0;$/;"	v	file:
close_cb_called	test-poll-closesocket.c	/^static int close_cb_called = 0;$/;"	v	file:
close_cb_called	test-ref.c	/^static int close_cb_called;$/;"	v	file:
close_cb_called	test-shutdown-close.c	/^static int close_cb_called = 0;$/;"	v	file:
close_cb_called	test-socket-buffer-size.c	/^static int close_cb_called;$/;"	v	file:
close_cb_called	test-spawn.c	/^static int close_cb_called;$/;"	v	file:
close_cb_called	test-stdio-over-pipes.c	/^static int close_cb_called;$/;"	v	file:
close_cb_called	test-tcp-bind-error.c	/^static int close_cb_called = 0;$/;"	v	file:
close_cb_called	test-tcp-bind6-error.c	/^static int close_cb_called = 0;$/;"	v	file:
close_cb_called	test-tcp-close-accept.c	/^static unsigned int close_cb_called;$/;"	v	file:
close_cb_called	test-tcp-close-while-connecting.c	/^static int close_cb_called;$/;"	v	file:
close_cb_called	test-tcp-close.c	/^static int close_cb_called;$/;"	v	file:
close_cb_called	test-tcp-connect-error-after-write.c	/^static int close_cb_called;$/;"	v	file:
close_cb_called	test-tcp-connect-error.c	/^static int close_cb_called = 0;$/;"	v	file:
close_cb_called	test-tcp-connect-timeout.c	/^static int close_cb_called;$/;"	v	file:
close_cb_called	test-tcp-connect6-error.c	/^static int close_cb_called = 0;$/;"	v	file:
close_cb_called	test-tcp-open.c	/^static int close_cb_called = 0;$/;"	v	file:
close_cb_called	test-tcp-try-write.c	/^static int close_cb_called;$/;"	v	file:
close_cb_called	test-tcp-write-fail.c	/^static int close_cb_called = 0;$/;"	v	file:
close_cb_called	test-tcp-write-queue-order.c	/^static int close_cb_called;$/;"	v	file:
close_cb_called	test-tcp-writealot.c	/^static int close_cb_called = 0;$/;"	v	file:
close_cb_called	test-timer-again.c	/^static int close_cb_called = 0;$/;"	v	file:
close_cb_called	test-udp-dgram-too-big.c	/^static int close_cb_called;$/;"	v	file:
close_cb_called	test-udp-ipv6.c	/^static int close_cb_called;$/;"	v	file:
close_cb_called	test-udp-multicast-interface.c	/^static int close_cb_called;$/;"	v	file:
close_cb_called	test-udp-multicast-interface6.c	/^static int close_cb_called;$/;"	v	file:
close_cb_called	test-udp-multicast-join.c	/^static int close_cb_called;$/;"	v	file:
close_cb_called	test-udp-multicast-join6.c	/^static int close_cb_called;$/;"	v	file:
close_cb_called	test-udp-multicast-ttl.c	/^static int close_cb_called;$/;"	v	file:
close_cb_called	test-udp-open.c	/^static int close_cb_called = 0;$/;"	v	file:
close_cb_called	test-udp-send-and-recv.c	/^static int close_cb_called;$/;"	v	file:
close_cb_called	test-udp-send-immediate.c	/^static int close_cb_called;$/;"	v	file:
close_cb_called	test-udp-send-unreachable.c	/^static int close_cb_called;$/;"	v	file:
close_cb_called	test-udp-try-send.c	/^static int close_cb_called;$/;"	v	file:
close_cb_called	test-watcher-cross-stop.c	/^static unsigned int close_cb_called;$/;"	v	file:
close_cb_calls	test-connection-fail.c	/^static int close_cb_calls;$/;"	v	file:
close_cb_count	test-fs.c	/^static int close_cb_count;$/;"	v	file:
close_client_conn_cb	test-ipc.c	/^static void close_client_conn_cb(uv_handle_t* handle) {$/;"	f	file:
close_loop	task.h	/^UNUSED static void close_loop(uv_loop_t* loop) {$/;"	f
close_req	test-fs.c	/^static uv_fs_t close_req;$/;"	v	file:
close_server_conn_cb	test-ipc.c	/^static void close_server_conn_cb(uv_handle_t* handle) {$/;"	f	file:
close_socket	test-poll.c	/^static void close_socket(uv_os_sock_t sock) {$/;"	f	file:
close_socket	test-tcp-open.c	/^static void close_socket(uv_os_sock_t sock) {$/;"	f	file:
close_socket	test-tcp-write-fail.c	/^static void close_socket(uv_tcp_t* sock) {$/;"	f	file:
close_socket	test-udp-open.c	/^static void close_socket(uv_os_sock_t sock) {$/;"	f	file:
close_socket_and_verify_stack	test-poll-close-doesnt-corrupt-stack.c	/^static void NO_INLINE close_socket_and_verify_stack() {$/;"	f	file:
close_walk_cb	task.h	/^static void close_walk_cb(uv_handle_t* handle, void* arg) {$/;"	f
closed_connections	test-poll.c	/^static int closed_connections = 0;$/;"	v	file:
closed_streams	benchmark-pound.c	/^static int closed_streams;$/;"	v	file:
compare_task	runner.c	/^static int compare_task(const void* va, const void* vb) {$/;"	f	file:
completed_pingers	benchmark-ping-pongs.c	/^static int completed_pingers = 0;$/;"	v	file:
completed_pingers	test-ping-pong.c	/^static int completed_pingers = 0;$/;"	v	file:
cond	test-condvar.c	/^  uv_cond_t cond;$/;"	m	struct:__anon24	file:
conn	test-ipc.c	/^  uv_tcp_t conn;$/;"	m	struct:__anon10	file:
conn	test-ipc.c	/^static tcp_conn conn;$/;"	v	file:
conn	test-tcp-connect-timeout.c	/^static uv_tcp_t conn;$/;"	v	file:
conn	test-tcp-shutdown-after-write.c	/^static uv_tcp_t conn;$/;"	v	file:
conn_close_cb_called	test-tcp-shutdown-after-write.c	/^static int conn_close_cb_called;$/;"	v	file:
conn_notify_req	test-ipc.c	/^static uv_write_t conn_notify_req;$/;"	v	file:
conn_notify_write_cb	test-ipc.c	/^static void conn_notify_write_cb(uv_write_t* req, int status) {$/;"	f	file:
conn_rec	benchmark-pound.c	/^} conn_rec;$/;"	t	typeref:struct:conn_rec_s	file:
conn_rec	blackhole-server.c	/^} conn_rec;$/;"	t	typeref:struct:__anon18	file:
conn_rec_s	benchmark-pound.c	/^typedef struct conn_rec_s {$/;"	s	file:
conn_req	benchmark-pound.c	/^  uv_connect_t conn_req;$/;"	m	struct:__anon14	file:
conn_req	benchmark-pound.c	/^  uv_connect_t conn_req;$/;"	m	struct:__anon15	file:
conn_req	benchmark-pound.c	/^  uv_connect_t conn_req;$/;"	m	struct:conn_rec_s	file:
conn_req	test-ipc.c	/^  uv_connect_t conn_req;$/;"	m	struct:__anon10	file:
conn_req	test-pipe-connect-multiple.c	/^  uv_connect_t conn_req;$/;"	m	struct:__anon17	file:
conn_req	test-pipe-connect-prepare.c	/^static uv_connect_t conn_req;$/;"	v	file:
connect_addr	benchmark-pump.c	/^static struct sockaddr_in connect_addr;$/;"	v	typeref:struct:sockaddr_in	file:
connect_and_shutdown	test-ref.c	/^static void connect_and_shutdown(uv_connect_t* req, int status) {$/;"	f	file:
connect_and_write	test-ref.c	/^static void connect_and_write(uv_connect_t* req, int status) {$/;"	f	file:
connect_cb	benchmark-pound.c	/^static void connect_cb(uv_connect_t* req, int status) {$/;"	f	file:
connect_cb	benchmark-pump.c	/^static void connect_cb(uv_connect_t* req, int status) {$/;"	f	file:
connect_cb	benchmark-tcp-write-batch.c	/^static void connect_cb(uv_connect_t* req, int status) {$/;"	f	file:
connect_cb	test-callback-stack.c	/^static void connect_cb(uv_connect_t* req, int status) {$/;"	f	file:
connect_cb	test-delayed-accept.c	/^static void connect_cb(uv_connect_t* req, int status) {$/;"	f	file:
connect_cb	test-emfile.c	/^static void connect_cb(uv_connect_t* req, int status) {$/;"	f	file:
connect_cb	test-ipc-send-recv.c	/^static void connect_cb(uv_connect_t* req, int status) {$/;"	f	file:
connect_cb	test-ipc.c	/^static void connect_cb(uv_connect_t* req, int status) {$/;"	f	file:
connect_cb	test-multiple-listen.c	/^static void connect_cb(uv_connect_t* req, int status) {$/;"	f	file:
connect_cb	test-pipe-connect-error.c	/^static void connect_cb(uv_connect_t* connect_req, int status) {$/;"	f	file:
connect_cb	test-pipe-connect-multiple.c	/^static void connect_cb(uv_connect_t* connect_req, int status) {$/;"	f	file:
connect_cb	test-pipe-connect-prepare.c	/^static void connect_cb(uv_connect_t* connect_req, int status) {$/;"	f	file:
connect_cb	test-shutdown-close.c	/^static void connect_cb(uv_connect_t* req, int status) {$/;"	f	file:
connect_cb	test-shutdown-eof.c	/^static void connect_cb(uv_connect_t *req, int status) {$/;"	f	file:
connect_cb	test-shutdown-twice.c	/^static void connect_cb(uv_connect_t* req, int status) {$/;"	f	file:
connect_cb	test-tcp-close-accept.c	/^static void connect_cb(uv_connect_t* req, int status) {$/;"	f	file:
connect_cb	test-tcp-close-while-connecting.c	/^static void connect_cb(uv_connect_t* req, int status) {$/;"	f	file:
connect_cb	test-tcp-close.c	/^static void connect_cb(uv_connect_t* conn_req, int status) {$/;"	f	file:
connect_cb	test-tcp-connect-error-after-write.c	/^static void connect_cb(uv_connect_t* req, int status) {$/;"	f	file:
connect_cb	test-tcp-connect-error.c	/^static void connect_cb(uv_connect_t* handle, int status) {$/;"	f	file:
connect_cb	test-tcp-connect-timeout.c	/^static void connect_cb(uv_connect_t* req, int status) {$/;"	f	file:
connect_cb	test-tcp-connect6-error.c	/^static void connect_cb(uv_connect_t* handle, int status) {$/;"	f	file:
connect_cb	test-tcp-oob.c	/^static void connect_cb(uv_connect_t* req, int status) {$/;"	f	file:
connect_cb	test-tcp-open.c	/^static void connect_cb(uv_connect_t* req, int status) {$/;"	f	file:
connect_cb	test-tcp-read-stop.c	/^static void connect_cb(uv_connect_t* req, int status) {$/;"	f	file:
connect_cb	test-tcp-shutdown-after-write.c	/^static void connect_cb(uv_connect_t* req, int status) {$/;"	f	file:
connect_cb	test-tcp-try-write.c	/^static void connect_cb(uv_connect_t* req, int status) {$/;"	f	file:
connect_cb	test-tcp-unexpected-read.c	/^static void connect_cb(uv_connect_t* req, int status) {$/;"	f	file:
connect_cb	test-tcp-write-after-connect.c	/^static void connect_cb(uv_connect_t *req, int status) {$/;"	f	file:
connect_cb	test-tcp-write-fail.c	/^static void connect_cb(uv_connect_t* req, int status) {$/;"	f	file:
connect_cb	test-tcp-write-queue-order.c	/^static void connect_cb(uv_connect_t* req, int status) {$/;"	f	file:
connect_cb	test-tcp-write-to-half-open-connection.c	/^static void connect_cb(uv_connect_t* req, int status) {$/;"	f	file:
connect_cb	test-tcp-writealot.c	/^static void connect_cb(uv_connect_t* req, int status) {$/;"	f	file:
connect_cb_called	benchmark-tcp-write-batch.c	/^static int connect_cb_called = 0;$/;"	v	file:
connect_cb_called	test-callback-stack.c	/^static int connect_cb_called = 0;$/;"	v	file:
connect_cb_called	test-delayed-accept.c	/^static int connect_cb_called = 0;$/;"	v	file:
connect_cb_called	test-emfile.c	/^static unsigned connect_cb_called;$/;"	v	file:
connect_cb_called	test-multiple-listen.c	/^static int connect_cb_called = 0;$/;"	v	file:
connect_cb_called	test-pipe-connect-error.c	/^static int connect_cb_called = 0;$/;"	v	file:
connect_cb_called	test-pipe-connect-multiple.c	/^static int connect_cb_called = 0;$/;"	v	file:
connect_cb_called	test-pipe-connect-prepare.c	/^static int connect_cb_called = 0;$/;"	v	file:
connect_cb_called	test-ref.c	/^static int connect_cb_called;$/;"	v	file:
connect_cb_called	test-shutdown-close.c	/^static int connect_cb_called = 0;$/;"	v	file:
connect_cb_called	test-tcp-close-while-connecting.c	/^static int connect_cb_called;$/;"	v	file:
connect_cb_called	test-tcp-connect-error-after-write.c	/^static int connect_cb_called;$/;"	v	file:
connect_cb_called	test-tcp-connect-error.c	/^static int connect_cb_called = 0;$/;"	v	file:
connect_cb_called	test-tcp-connect-timeout.c	/^static int connect_cb_called;$/;"	v	file:
connect_cb_called	test-tcp-connect6-error.c	/^static int connect_cb_called = 0;$/;"	v	file:
connect_cb_called	test-tcp-open.c	/^static int connect_cb_called = 0;$/;"	v	file:
connect_cb_called	test-tcp-shutdown-after-write.c	/^static int connect_cb_called;$/;"	v	file:
connect_cb_called	test-tcp-try-write.c	/^static int connect_cb_called;$/;"	v	file:
connect_cb_called	test-tcp-write-fail.c	/^static int connect_cb_called = 0;$/;"	v	file:
connect_cb_called	test-tcp-write-queue-order.c	/^static int connect_cb_called;$/;"	v	file:
connect_cb_called	test-tcp-writealot.c	/^static int connect_cb_called = 0;$/;"	v	file:
connect_cb_calls	test-connection-fail.c	/^static int connect_cb_calls;$/;"	v	file:
connect_cb_file	test-pipe-connect-error.c	/^static void connect_cb_file(uv_connect_t* connect_req, int status) {$/;"	f	file:
connect_child_process_cb	test-ipc.c	/^static void connect_child_process_cb(uv_connect_t* req, int status) {$/;"	f	file:
connect_fn	benchmark-pound.c	/^typedef int (*connect_fn)(int num, make_connect_fn make_connect, void* arg);$/;"	t	file:
connect_port	test-getsockname.c	/^static int connect_port = -1;$/;"	v	file:
connect_req	benchmark-multi-accept.c	/^  uv_connect_t connect_req;$/;"	m	struct:client_ctx	file:
connect_req	benchmark-multi-accept.c	/^  uv_connect_t connect_req;$/;"	m	struct:ipc_client_ctx	file:
connect_req	benchmark-ping-pongs.c	/^  uv_connect_t connect_req;$/;"	m	struct:__anon20	file:
connect_req	benchmark-tcp-write-batch.c	/^static uv_connect_t connect_req;$/;"	v	file:
connect_req	test-callback-stack.c	/^static uv_connect_t connect_req;$/;"	v	file:
connect_req	test-getsockname.c	/^static uv_connect_t connect_req;$/;"	v	file:
connect_req	test-ipc-send-recv.c	/^  uv_connect_t connect_req;$/;"	m	struct:test_ctx	file:
connect_req	test-ping-pong.c	/^  uv_connect_t connect_req;$/;"	m	struct:__anon12	file:
connect_req	test-pipe-getsockname.c	/^static uv_connect_t connect_req;$/;"	v	file:
connect_req	test-pipe-server-close.c	/^static uv_connect_t connect_req;$/;"	v	file:
connect_req	test-ref.c	/^static uv_connect_t connect_req;$/;"	v	file:
connect_req	test-shutdown-close.c	/^static uv_connect_t connect_req;$/;"	v	file:
connect_req	test-shutdown-eof.c	/^static uv_connect_t connect_req;$/;"	v	file:
connect_req	test-tcp-close.c	/^static uv_connect_t connect_req;$/;"	v	file:
connect_req	test-tcp-connect-timeout.c	/^static uv_connect_t connect_req;$/;"	v	file:
connect_req	test-tcp-oob.c	/^static uv_connect_t connect_req;$/;"	v	file:
connect_req	test-tcp-open.c	/^static uv_connect_t connect_req;$/;"	v	file:
connect_req	test-tcp-shutdown-after-write.c	/^static uv_connect_t connect_req;$/;"	v	file:
connect_req	test-tcp-unexpected-read.c	/^static uv_connect_t connect_req;$/;"	v	file:
connect_req	test-tcp-write-fail.c	/^static uv_connect_t connect_req;$/;"	v	file:
connect_req	test-tcp-write-to-half-open-connection.c	/^static uv_connect_t connect_req;$/;"	v	file:
connect_req	test-tcp-writealot.c	/^static uv_connect_t connect_req;$/;"	v	file:
connect_reqs	test-tcp-close-accept.c	/^static uv_connect_t connect_reqs[ARRAY_SIZE(tcp_outgoing)];$/;"	v	file:
connection_accepted	test-ipc.c	/^static int connection_accepted;$/;"	v	file:
connection_cb	benchmark-pump.c	/^static void connection_cb(uv_stream_t* s, int status) {$/;"	f	file:
connection_cb	blackhole-server.c	/^static void connection_cb(uv_stream_t* stream, int status) {$/;"	f	file:
connection_cb	test-delayed-accept.c	/^static void connection_cb(uv_stream_t* tcp, int status) {$/;"	f	file:
connection_cb	test-emfile.c	/^static void connection_cb(uv_stream_t* server_handle, int status) {$/;"	f	file:
connection_cb	test-multiple-listen.c	/^static void connection_cb(uv_stream_t* tcp, int status) {$/;"	f	file:
connection_cb	test-pipe-connect-multiple.c	/^static void connection_cb(uv_stream_t* server, int status) {$/;"	f	file:
connection_cb	test-pipe-pending-instances.c	/^static void connection_cb(uv_stream_t* server, int status) {$/;"	f	file:
connection_cb	test-tcp-close-accept.c	/^static void connection_cb(uv_stream_t* server, int status) {$/;"	f	file:
connection_cb	test-tcp-close.c	/^static void connection_cb(uv_stream_t* server, int status) {$/;"	f	file:
connection_cb	test-tcp-oob.c	/^static void connection_cb(uv_stream_t* handle, int status) {$/;"	f	file:
connection_cb	test-tcp-try-write.c	/^static void connection_cb(uv_stream_t* tcp, int status) {$/;"	f	file:
connection_cb	test-tcp-unexpected-read.c	/^static void connection_cb(uv_stream_t* handle, int status) {$/;"	f	file:
connection_cb	test-tcp-write-queue-order.c	/^static void connection_cb(uv_stream_t* tcp, int status) {$/;"	f	file:
connection_cb	test-tcp-write-to-half-open-connection.c	/^static void connection_cb(uv_stream_t* server, int status) {$/;"	f	file:
connection_cb_called	test-delayed-accept.c	/^static int connection_cb_called = 0;$/;"	v	file:
connection_cb_called	test-multiple-listen.c	/^static int connection_cb_called = 0;$/;"	v	file:
connection_cb_called	test-pipe-connect-multiple.c	/^static int connection_cb_called = 0;$/;"	v	file:
connection_cb_called	test-tcp-try-write.c	/^static int connection_cb_called;$/;"	v	file:
connection_cb_called	test-tcp-write-queue-order.c	/^static int connection_cb_called;$/;"	v	file:
connection_close_cb	test-poll.c	/^static void connection_close_cb(uv_handle_t* handle) {$/;"	f	file:
connection_context_s	test-poll.c	/^typedef struct connection_context_s {$/;"	s	file:
connection_context_t	test-poll.c	/^} connection_context_t;$/;"	t	typeref:struct:connection_context_s	file:
connection_fail	test-connection-fail.c	/^static void connection_fail(uv_connect_cb connect_cb) {$/;"	f	file:
connection_poll_cb	test-poll.c	/^static void connection_poll_cb(uv_poll_t* handle, int status, int events) {$/;"	f	file:
connection_request	test-tcp-write-after-connect.c	/^uv_connect_t connection_request;$/;"	v
connections	test-pipe-connect-multiple.c	/^static uv_pipe_t connections[NUM_CLIENTS];$/;"	v	file:
connections	test-poll.c	/^  int connections;$/;"	m	struct:server_context_s	file:
conns_failed	benchmark-pound.c	/^static int conns_failed;$/;"	v	file:
container	benchmark-million-async.c	/^static struct async_container* container;$/;"	v	typeref:struct:async_container	file:
container_of	task.h	70;"	d
count	benchmark-fs-stat.c	/^  int* count;$/;"	m	struct:async_req	file:
counter	test-thread.c	/^  unsigned int counter;$/;"	m	struct:fs_req	file:
counter	test-thread.c	/^  unsigned int counter;$/;"	m	struct:getaddrinfo_req	file:
counter_lock	test-signal-multiple-loops.c	/^static uv_mutex_t counter_lock;$/;"	v	file:
create_bound_socket	test-poll.c	/^static uv_os_sock_t create_bound_socket (struct sockaddr_in bind_addr) {$/;"	f	file:
create_cb	test-fs.c	/^static void create_cb(uv_fs_t* req) {$/;"	f	file:
create_cb_count	test-fs.c	/^static int create_cb_count;$/;"	v	file:
create_connection_context	test-poll.c	/^static connection_context_t* create_connection_context($/;"	f	file:
create_dir	test-fs-event.c	/^static void create_dir(const char* name) {$/;"	f	file:
create_file	test-fs-event.c	/^static void create_file(const char* name) {$/;"	f	file:
create_server_context	test-poll.c	/^static server_context_t* create_server_context($/;"	f	file:
create_tcp_socket	test-tcp-open.c	/^static uv_os_sock_t create_tcp_socket(void) {$/;"	f	file:
create_udp_socket	test-udp-open.c	/^static uv_os_sock_t create_udp_socket(void) {$/;"	f	file:
ctx	benchmark-async.c	/^struct ctx {$/;"	s	file:
ctx	test-ipc-send-recv.c	/^static struct test_ctx ctx;$/;"	v	typeref:struct:test_ctx	file:
ctx2	test-ipc-send-recv.c	/^static struct echo_ctx ctx2;$/;"	v	typeref:struct:echo_ctx	file:
data	test-threadpool.c	/^static char data;$/;"	v	file:
delay	test-barrier.c	/^  int delay;$/;"	m	struct:__anon3	file:
delay	test-condvar.c	/^  int delay;$/;"	m	struct:__anon24	file:
delay	test-semaphore.c	/^  int delay;$/;"	m	struct:__anon1	file:
delay_timer_cb	test-poll.c	/^static void delay_timer_cb(uv_timer_t* timer) {$/;"	f	file:
delayed_events	test-poll.c	/^  unsigned int events, delayed_events;$/;"	m	struct:connection_context_s	file:
destroy_connection_context	test-poll.c	/^static void destroy_connection_context(connection_context_t* context) {$/;"	f	file:
destroy_server_context	test-poll.c	/^static void destroy_server_context(server_context_t* context) {$/;"	f	file:
detach_failure_cb	test-spawn.c	/^static void detach_failure_cb(uv_process_t* process,$/;"	f	file:
dns_start	dns-server.c	/^static int dns_start(int port) {$/;"	f	file:
dnshandle	dns-server.c	/^} dnshandle;$/;"	t	typeref:struct:__anon9	file:
dnsstate	dns-server.c	/^} dnsstate;$/;"	t	typeref:struct:__anon8	file:
do_accept	test-delayed-accept.c	/^static void do_accept(uv_timer_t* timer_handle) {$/;"	f	file:
do_accept_called	test-delayed-accept.c	/^static int do_accept_called = 0;$/;"	v	file:
do_close	test-ref.c	/^static void do_close(void* handle) {$/;"	f	file:
do_test	test-udp-ipv6.c	/^static void do_test(uv_udp_recv_cb recv_cb, int bind_flags) {$/;"	f	file:
do_work	test-thread.c	/^static void do_work(void* arg) {$/;"	f	file:
do_write	benchmark-pump.c	/^static void do_write(uv_stream_t* stream) {$/;"	f	file:
done	benchmark-async-pummel.c	/^static volatile int done;$/;"	v	file:
done	benchmark-million-async.c	/^static volatile int done;$/;"	v	file:
done	benchmark-spawn.c	/^static int done;$/;"	v	file:
done2_cb	test-threadpool-cancel.c	/^static void done2_cb(uv_work_t* req, int status) {$/;"	f	file:
done2_cb_called	test-threadpool-cancel.c	/^static unsigned done2_cb_called;$/;"	v	file:
done_cb	test-threadpool-cancel.c	/^static void done_cb(uv_work_t* req, int status) {$/;"	f	file:
done_cb_called	test-threadpool-cancel.c	/^static unsigned done_cb_called;$/;"	v	file:
dowait	runner-unix.c	/^static void* dowait(void* data) {$/;"	f	file:
dowait_args	runner-unix.c	/^} dowait_args;$/;"	t	typeref:struct:__anon19	file:
dummy	test-timer-again.c	/^static uv_timer_t dummy, repeat_1, repeat_2;$/;"	v	file:
dummy_cb	test-fs.c	/^static void dummy_cb(uv_fs_t* req) {$/;"	f	file:
dummy_cb_count	test-fs.c	/^static int dummy_cb_count;$/;"	v	file:
echo_alloc	echo-server.c	/^static void echo_alloc(uv_handle_t* handle,$/;"	f	file:
echo_ctx	test-ipc-send-recv.c	/^struct echo_ctx {$/;"	s	file:
embed_async	test-embed.c	/^static uv_async_t embed_async;$/;"	v	file:
embed_cb	test-embed.c	/^static void embed_cb(uv_async_t* async) {$/;"	f	file:
embed_closed	test-embed.c	/^static volatile int embed_closed;$/;"	v	file:
embed_sem	test-embed.c	/^static uv_sem_t embed_sem;$/;"	v	file:
embed_thread	test-embed.c	/^static uv_thread_t embed_thread;$/;"	v	file:
embed_thread_runner	test-embed.c	/^static void embed_thread_runner(void* arg) {$/;"	f	file:
embed_timer	test-embed.c	/^static uv_timer_t embed_timer;$/;"	v	file:
embed_timer_called	test-embed.c	/^static int embed_timer_called;$/;"	v	file:
embed_timer_cb	test-embed.c	/^static void embed_timer_cb(uv_timer_t* timer) {$/;"	f	file:
empty_scandir_cb	test-fs.c	/^static void empty_scandir_cb(uv_fs_t* req) {$/;"	f	file:
end_time	benchmark-getaddrinfo.c	/^static int64_t end_time;$/;"	v	file:
events	test-poll.c	/^  unsigned int events, delayed_events;$/;"	m	struct:connection_context_s	file:
executable_path	runner.c	/^char executable_path[sizeof(executable_path)];$/;"	v
exepath	benchmark-spawn.c	/^static char exepath[1024];$/;"	v	file:
exepath	test-spawn.c	/^static char exepath[1024];$/;"	v	file:
exepath	test-stdio-over-pipes.c	/^static char exepath[1024];$/;"	v	file:
exepath_size	benchmark-spawn.c	/^static size_t exepath_size = 1024;$/;"	v	file:
exepath_size	test-spawn.c	/^static size_t exepath_size = 1024;$/;"	v	file:
exepath_size	test-stdio-over-pipes.c	/^static size_t exepath_size = 1024;$/;"	v	file:
exit_cb	benchmark-spawn.c	/^static void exit_cb(uv_process_t* process,$/;"	f	file:
exit_cb	test-ipc.c	/^static void exit_cb(uv_process_t* process,$/;"	f	file:
exit_cb	test-spawn.c	/^static void exit_cb(uv_process_t* process,$/;"	f	file:
exit_cb	test-stdio-over-pipes.c	/^static void exit_cb(uv_process_t* process,$/;"	f	file:
exit_cb_called	test-ipc.c	/^static int exit_cb_called;$/;"	v	file:
exit_cb_called	test-spawn.c	/^static int exit_cb_called;$/;"	v	file:
exit_cb_called	test-stdio-over-pipes.c	/^static int exit_cb_called;$/;"	v	file:
exit_cb_unexpected	test-spawn.c	/^static void exit_cb_unexpected(uv_process_t* process,$/;"	f	file:
exiting	benchmark-udp-pummel.c	/^static int exiting;$/;"	v	file:
expected_type	test-ipc-send-recv.c	/^  uv_handle_type expected_type;$/;"	m	struct:echo_ctx	file:
expected_type	test-ipc-send-recv.c	/^  uv_handle_type expected_type;$/;"	m	struct:test_ctx	file:
fail_cb	test-fs-event.c	/^static void fail_cb(uv_fs_event_t* handle,$/;"	f	file:
fail_cb	test-ref.c	/^static void fail_cb(void) {$/;"	f	file:
fail_cb	test-spawn.c	/^static void fail_cb(uv_process_t* process,$/;"	f	file:
fail_cb	test-tcp-read-stop.c	/^static void fail_cb(void) {$/;"	f	file:
fail_cb2	test-ref.c	/^static void fail_cb2(void) {$/;"	f	file:
fail_cb_called	test-getaddrinfo.c	/^static int fail_cb_called;$/;"	v	file:
fastrand	benchmark-million-async.c	/^static unsigned fastrand(void) {$/;"	f	file:
fchmod_cb	test-fs.c	/^static void fchmod_cb(uv_fs_t* req) {$/;"	f	file:
fchmod_cb_count	test-fs.c	/^static int fchmod_cb_count;$/;"	v	file:
fchown_cb	test-fs.c	/^static void fchown_cb(uv_fs_t* req) {$/;"	f	file:
fchown_cb_count	test-fs.c	/^static int fchown_cb_count;$/;"	v	file:
fd	test-pipe-set-non-blocking.c	/^  int fd;$/;"	m	struct:thread_ctx	file:
fdatasync_cb	test-fs.c	/^static void fdatasync_cb(uv_fs_t* req) {$/;"	f	file:
fdatasync_cb_count	test-fs.c	/^static int fdatasync_cb_count;$/;"	v	file:
fdatasync_req	test-fs.c	/^static uv_fs_t fdatasync_req;$/;"	v	file:
file_prefix	test-fs-event.c	/^static const char file_prefix[] = "fsevent-";$/;"	v	file:
file_prefix_in_subdir	test-fs-event.c	/^static const char file_prefix_in_subdir[] = "subdir";$/;"	v	file:
file_scandir_cb	test-fs.c	/^static void file_scandir_cb(uv_fs_t* req) {$/;"	f	file:
find_helpers	runner.c	/^static int find_helpers(const task_entry_t* task,$/;"	f	file:
fmt	runner.c	/^const char* fmt(double d) {$/;"	f
fs_cb	test-thread.c	/^static void fs_cb(uv_fs_t* handle) {$/;"	f	file:
fs_cb	test-threadpool-cancel.c	/^static void fs_cb(uv_fs_t* req) {$/;"	f	file:
fs_cb_called	test-threadpool-cancel.c	/^static unsigned fs_cb_called;$/;"	v	file:
fs_do	test-thread.c	/^static void fs_do(struct fs_req* req) {$/;"	f	file:
fs_event	test-fs-event.c	/^static uv_fs_event_t fs_event;$/;"	v	file:
fs_event_cb_called	test-fs-event.c	/^static int fs_event_cb_called;$/;"	v	file:
fs_event_cb_close	test-fs-event.c	/^static void fs_event_cb_close(uv_fs_event_t* handle, const char* filename,$/;"	f	file:
fs_event_cb_dir	test-fs-event.c	/^static void fs_event_cb_dir(uv_fs_event_t* handle, const char* filename,$/;"	f	file:
fs_event_cb_dir_multi_file	test-fs-event.c	/^static void fs_event_cb_dir_multi_file(uv_fs_event_t* handle,$/;"	f	file:
fs_event_cb_dir_multi_file_in_subdir	test-fs-event.c	/^static void fs_event_cb_dir_multi_file_in_subdir(uv_fs_event_t* handle,$/;"	f	file:
fs_event_cb_file	test-fs-event.c	/^static void fs_event_cb_file(uv_fs_event_t* handle, const char* filename,$/;"	f	file:
fs_event_cb_file_current_dir	test-fs-event.c	/^static void fs_event_cb_file_current_dir(uv_fs_event_t* handle,$/;"	f	file:
fs_event_create_files	test-fs-event.c	/^static void fs_event_create_files(uv_timer_t* handle) {$/;"	f	file:
fs_event_create_files_in_subdir	test-fs-event.c	/^static void fs_event_create_files_in_subdir(uv_timer_t* handle) {$/;"	f	file:
fs_event_created	test-fs-event.c	/^static int fs_event_created;$/;"	v	file:
fs_event_error_report_cb	test-fs-event.c	/^static void fs_event_error_report_cb(uv_fs_event_t* handle,$/;"	f	file:
fs_event_error_report_close_cb	test-fs-event.c	/^static void fs_event_error_report_close_cb(uv_handle_t* handle) {$/;"	f	file:
fs_event_error_reported	test-fs-event.c	/^static int fs_event_error_reported;$/;"	v	file:
fs_event_fail	test-fs-event.c	/^static void fs_event_fail(uv_fs_event_t* handle, const char* filename,$/;"	f	file:
fs_event_file_count	test-fs-event.c	/^static const int fs_event_file_count = 16;$/;"	v	file:
fs_event_filename	test-fs-event.c	/^static char fs_event_filename[1024];$/;"	v	file:
fs_event_filename	test-fs-event.c	/^static char fs_event_filename[PATH_MAX];$/;"	v	file:
fs_event_get_filename	test-fs-event.c	/^static const char* fs_event_get_filename(int i) {$/;"	f	file:
fs_event_get_filename_in_subdir	test-fs-event.c	/^static const char* fs_event_get_filename_in_subdir(int i) {$/;"	f	file:
fs_event_removed	test-fs-event.c	/^static int fs_event_removed;$/;"	v	file:
fs_event_unlink_files	test-fs-event.c	/^static void fs_event_unlink_files(uv_timer_t* handle) {$/;"	f	file:
fs_event_unlink_files_in_subdir	test-fs-event.c	/^static void fs_event_unlink_files_in_subdir(uv_timer_t* handle) {$/;"	f	file:
fs_req	benchmark-fs-stat.c	/^  uv_fs_t fs_req;$/;"	m	struct:async_req	file:
fs_req	test-thread.c	/^struct fs_req {$/;"	s	file:
fstat_cb	test-fs.c	/^static void fstat_cb(uv_fs_t* req) {$/;"	f	file:
fstat_cb_count	test-fs.c	/^static int fstat_cb_count;$/;"	v	file:
fsync_cb	test-fs.c	/^static void fsync_cb(uv_fs_t* req) {$/;"	f	file:
fsync_cb_count	test-fs.c	/^static int fsync_cb_count;$/;"	v	file:
fsync_req	test-fs.c	/^static uv_fs_t fsync_req;$/;"	v	file:
ftruncate_cb	test-fs.c	/^static void ftruncate_cb(uv_fs_t* req) {$/;"	f	file:
ftruncate_cb_count	test-fs.c	/^static int ftruncate_cb_count;$/;"	v	file:
ftruncate_req	test-fs.c	/^static uv_fs_t ftruncate_req;$/;"	v	file:
futime_cb	test-fs.c	/^static void futime_cb(uv_fs_t* req) {$/;"	f	file:
futime_cb_count	test-fs.c	/^static int futime_cb_count;$/;"	v	file:
futime_req	test-fs.c	/^static uv_fs_t futime_req;$/;"	v	file:
gbit	benchmark-pump.c	/^static double gbit(int64_t bytes, int64_t passed_ms) {$/;"	f	file:
get_listen_handle	benchmark-multi-accept.c	/^static void get_listen_handle(uv_loop_t* loop, uv_stream_t* server_handle) {$/;"	f	file:
get_tty_fd	test-handle-fileno.c	/^static int get_tty_fd(void) {$/;"	f	file:
getaddrinfo_basic_cb	test-getaddrinfo.c	/^static void getaddrinfo_basic_cb(uv_getaddrinfo_t* handle,$/;"	f	file:
getaddrinfo_cb	benchmark-getaddrinfo.c	/^static void getaddrinfo_cb(uv_getaddrinfo_t* handle, int status,$/;"	f	file:
getaddrinfo_cb	test-thread.c	/^static void getaddrinfo_cb(uv_getaddrinfo_t* handle,$/;"	f	file:
getaddrinfo_cb	test-threadpool-cancel.c	/^static void getaddrinfo_cb(uv_getaddrinfo_t* req,$/;"	f	file:
getaddrinfo_cbs	test-getaddrinfo.c	/^static int getaddrinfo_cbs = 0;$/;"	v	file:
getaddrinfo_cuncurrent_cb	test-getaddrinfo.c	/^static void getaddrinfo_cuncurrent_cb(uv_getaddrinfo_t* handle,$/;"	f	file:
getaddrinfo_do	test-thread.c	/^static void getaddrinfo_do(struct getaddrinfo_req* req) {$/;"	f	file:
getaddrinfo_fail_cb	test-getaddrinfo.c	/^static void getaddrinfo_fail_cb(uv_getaddrinfo_t* req,$/;"	f	file:
getaddrinfo_handle	test-getaddrinfo.c	/^static uv_getaddrinfo_t* getaddrinfo_handle;$/;"	v	file:
getaddrinfo_handles	test-getaddrinfo.c	/^static uv_getaddrinfo_t getaddrinfo_handles[CONCURRENT_COUNT];$/;"	v	file:
getaddrinfo_initiate	benchmark-getaddrinfo.c	/^static void getaddrinfo_initiate(uv_getaddrinfo_t* handle) {$/;"	f	file:
getaddrinfo_req	test-thread.c	/^struct getaddrinfo_req {$/;"	s	file:
getnameinfo_cb	test-threadpool-cancel.c	/^static void getnameinfo_cb(uv_getnameinfo_t* handle,$/;"	f	file:
getnameinfo_req	test-getnameinfo.c	/^static void getnameinfo_req(uv_getnameinfo_t* handle,$/;"	f	file:
getpeernamecount	test-getsockname.c	/^static int getpeernamecount = 0;$/;"	v	file:
getsocknamecount	test-getsockname.c	/^static int getsocknamecount = 0;$/;"	v	file:
got_connections	test-tcp-close-accept.c	/^static unsigned int got_connections;$/;"	v	file:
got_eagain	test-poll.c	/^static int got_eagain(void) {$/;"	f	file:
got_eof	test-shutdown-eof.c	/^static int got_eof;$/;"	v	file:
got_fin	test-poll.c	/^  int got_fin, sent_fin;$/;"	m	struct:connection_context_s	file:
got_q	test-shutdown-eof.c	/^static int got_q;$/;"	v	file:
handle	blackhole-server.c	/^  uv_tcp_t handle;$/;"	m	struct:__anon18	file:
handle	dns-server.c	/^  uv_tcp_t handle;$/;"	m	struct:__anon9	file:
handle	test-ipc-send-recv.c	/^  uv_handle_t handle;$/;"	m	union:handles	file:
handle	test-poll-close-doesnt-corrupt-stack.c	/^uv_poll_t handle;$/;"	v
handle	test-poll-closesocket.c	/^uv_poll_t handle;$/;"	v
handle	test-signal.c	/^  uv_signal_t handle;$/;"	m	struct:signal_ctx	file:
handle	test-signal.c	/^  uv_timer_t handle;$/;"	m	struct:timer_ctx	file:
handle	test-thread.c	/^  uv_fs_t handle;$/;"	m	struct:fs_req	file:
handle	test-thread.c	/^  uv_getaddrinfo_t handle;$/;"	m	struct:getaddrinfo_req	file:
handle_	test-udp-dgram-too-big.c	/^static uv_udp_t handle_;$/;"	v	file:
handle_storage_t	benchmark-multi-accept.c	/^typedef unsigned char handle_storage_t[sizeof(union stream_handle)];$/;"	t	file:
handles	benchmark-getaddrinfo.c	/^static uv_getaddrinfo_t handles[CONCURRENT_CALLS];$/;"	v	file:
handles	test-ipc-send-recv.c	/^union handles {$/;"	u	file:
handles_seen	benchmark-million-async.c	/^  unsigned handles_seen;$/;"	m	struct:async_container	file:
huge_repeat_cb	test-timer.c	/^static void huge_repeat_cb(uv_timer_t* handle) {$/;"	f	file:
huge_timer1	test-timer.c	/^static uv_timer_t huge_timer1;$/;"	v	file:
huge_timer2	test-timer.c	/^static uv_timer_t huge_timer2;$/;"	v	file:
i	benchmark-pound.c	/^  int i;$/;"	m	struct:__anon14	file:
i	benchmark-pound.c	/^  int i;$/;"	m	struct:__anon15	file:
i	benchmark-pound.c	/^  int i;$/;"	m	struct:conn_rec_s	file:
idle	test-tcp-oob.c	/^static uv_idle_t idle;$/;"	v	file:
idle2_cb	benchmark-loop-count.c	/^static void idle2_cb(uv_idle_t* handle) {$/;"	f	file:
idle_1_cb	test-loop-handles.c	/^static void idle_1_cb(uv_idle_t* handle) {$/;"	f	file:
idle_1_cb_called	test-loop-handles.c	/^static int idle_1_cb_called = 0;$/;"	v	file:
idle_1_close_cb	test-loop-handles.c	/^static void idle_1_close_cb(uv_handle_t* handle) {$/;"	f	file:
idle_1_close_cb_called	test-loop-handles.c	/^static int idle_1_close_cb_called = 0;$/;"	v	file:
idle_1_handles	test-loop-handles.c	/^static uv_idle_t idle_1_handles[IDLE_COUNT];$/;"	v	file:
idle_2_cb	test-loop-handles.c	/^static void idle_2_cb(uv_idle_t* handle) {$/;"	f	file:
idle_2_cb_called	test-loop-handles.c	/^static int idle_2_cb_called = 0;$/;"	v	file:
idle_2_cb_started	test-loop-handles.c	/^static int idle_2_cb_started = 0;$/;"	v	file:
idle_2_close_cb	test-loop-handles.c	/^static void idle_2_close_cb(uv_handle_t* handle) {$/;"	f	file:
idle_2_close_cb_called	test-loop-handles.c	/^static int idle_2_close_cb_called = 0;$/;"	v	file:
idle_2_handle	test-loop-handles.c	/^static uv_idle_t idle_2_handle;$/;"	v	file:
idle_2_is_active	test-loop-handles.c	/^static int idle_2_is_active = 0;$/;"	v	file:
idle_cb	benchmark-loop-count.c	/^static void idle_cb(uv_idle_t* handle) {$/;"	f	file:
idle_cb	test-callback-order.c	/^static void idle_cb(uv_idle_t* handle) {$/;"	f	file:
idle_cb	test-idle.c	/^static void idle_cb(uv_idle_t* handle) {$/;"	f	file:
idle_cb	test-run-once.c	/^static void idle_cb(uv_idle_t* handle) {$/;"	f	file:
idle_cb	test-tcp-oob.c	/^static void idle_cb(uv_idle_t* idle) {$/;"	f	file:
idle_cb_called	test-callback-order.c	/^static int idle_cb_called;$/;"	v	file:
idle_cb_called	test-idle.c	/^static int idle_cb_called = 0;$/;"	v	file:
idle_counter	test-run-once.c	/^static int idle_counter;$/;"	v	file:
idle_handle	benchmark-loop-count.c	/^static uv_idle_t idle_handle;$/;"	v	file:
idle_handle	benchmark-multi-accept.c	/^  uv_idle_t idle_handle;$/;"	m	struct:client_ctx	file:
idle_handle	test-callback-order.c	/^static uv_idle_t idle_handle;$/;"	v	file:
idle_handle	test-idle.c	/^static uv_idle_t idle_handle;$/;"	v	file:
idle_handle	test-run-once.c	/^static uv_idle_t idle_handle;$/;"	v	file:
idles_1_active	test-loop-handles.c	/^static int idles_1_active = 0;$/;"	v	file:
in	test-stdio-over-pipes.c	/^static uv_pipe_t in;$/;"	v	file:
incoming	test-pipe-sendmsg.c	/^static uv_pipe_t incoming[4];$/;"	v	file:
incoming	test-tcp-try-write.c	/^static uv_tcp_t incoming;$/;"	v	file:
incoming	test-tcp-write-queue-order.c	/^static uv_tcp_t incoming;$/;"	v	file:
incoming_count	test-pipe-sendmsg.c	/^static unsigned int incoming_count;$/;"	v	file:
increment_counter	test-signal-multiple-loops.c	/^static void increment_counter(volatile int* counter) {$/;"	f	file:
init_process_options	test-spawn.c	/^static void init_process_options(char* test, uv_exit_cb exit_cb) {$/;"	f	file:
init_process_options	test-stdio-over-pipes.c	/^static void init_process_options(char* test, uv_exit_cb exit_cb) {$/;"	f	file:
iov	test-fs.c	/^static uv_buf_t iov;$/;"	v	file:
ipc_alloc_cb	benchmark-multi-accept.c	/^static void ipc_alloc_cb(uv_handle_t* handle,$/;"	f	file:
ipc_client_ctx	benchmark-multi-accept.c	/^struct ipc_client_ctx {$/;"	s	file:
ipc_close_cb	benchmark-multi-accept.c	/^static void ipc_close_cb(uv_handle_t* handle) {$/;"	f	file:
ipc_connect_cb	benchmark-multi-accept.c	/^static void ipc_connect_cb(uv_connect_t* req, int status) {$/;"	f	file:
ipc_connection_cb	benchmark-multi-accept.c	/^static void ipc_connection_cb(uv_stream_t* ipc_pipe, int status) {$/;"	f	file:
ipc_helper	test-ipc.c	/^int ipc_helper(int listen_after_write) {$/;"	f
ipc_helper_bind_twice	test-ipc.c	/^int ipc_helper_bind_twice(void) {$/;"	f
ipc_helper_tcp_connection	test-ipc.c	/^int ipc_helper_tcp_connection(void) {$/;"	f
ipc_on_connection	test-ipc.c	/^static void ipc_on_connection(uv_stream_t* server, int status) {$/;"	f	file:
ipc_on_connection_tcp_conn	test-ipc.c	/^static void ipc_on_connection_tcp_conn(uv_stream_t* server, int status) {$/;"	f	file:
ipc_peer_ctx	benchmark-multi-accept.c	/^struct ipc_peer_ctx {$/;"	s	file:
ipc_pipe	benchmark-multi-accept.c	/^  uv_pipe_t ipc_pipe;$/;"	m	struct:ipc_client_ctx	file:
ipc_pipe	benchmark-multi-accept.c	/^  uv_pipe_t ipc_pipe;$/;"	m	struct:ipc_server_ctx	file:
ipc_read_cb	benchmark-multi-accept.c	/^static void ipc_read_cb(uv_stream_t* handle,$/;"	f	file:
ipc_send_recv_helper	test-ipc-send-recv.c	/^int ipc_send_recv_helper(void) {$/;"	f
ipc_send_recv_helper_threadproc	test-ipc-send-recv.c	/^void ipc_send_recv_helper_threadproc(void* arg) {$/;"	f
ipc_server_ctx	benchmark-multi-accept.c	/^struct ipc_server_ctx {$/;"	s	file:
ipc_write_cb	benchmark-multi-accept.c	/^static void ipc_write_cb(uv_write_t* req, int status) {$/;"	f	file:
ipv6_recv_fail	test-udp-ipv6.c	/^static void ipv6_recv_fail(uv_udp_t* handle,$/;"	f	file:
ipv6_recv_ok	test-udp-ipv6.c	/^static void ipv6_recv_ok(uv_udp_t* handle,$/;"	f	file:
is_helper	runner.h	/^  int is_helper;$/;"	m	struct:__anon4
is_server_connection	test-poll.c	/^  int is_server_connection;$/;"	m	struct:connection_context_s	file:
kMaxTicks	test-tcp-oob.c	/^static const int kMaxTicks = 10;$/;"	v	file:
kill_cb	test-spawn.c	/^static void kill_cb(uv_process_t* process,$/;"	f	file:
link_cb	test-fs.c	/^static void link_cb(uv_fs_t* req) {$/;"	f	file:
link_cb_count	test-fs.c	/^static int link_cb_count;$/;"	v	file:
listen	test-ipc-send-recv.c	/^  uv_pipe_t listen;$/;"	m	struct:echo_ctx	file:
listen_addr	benchmark-multi-accept.c	/^static struct sockaddr_in listen_addr;$/;"	v	typeref:struct:sockaddr_in	file:
listen_addr	benchmark-pump.c	/^static struct sockaddr_in listen_addr;$/;"	v	typeref:struct:sockaddr_in	file:
listen_cb	test-ipc-send-recv.c	/^static void listen_cb(uv_stream_t* handle, int status) {$/;"	f	file:
local_conn_accepted	test-ipc.c	/^static int local_conn_accepted;$/;"	v	file:
log_progress	runner.c	/^static void log_progress(int total,$/;"	f	file:
log_tap_result	runner.c	/^void log_tap_result(int test_count,$/;"	f
loop	benchmark-async.c	/^  uv_loop_t loop;$/;"	m	struct:ctx	file:
loop	benchmark-getaddrinfo.c	/^static uv_loop_t* loop;$/;"	v	file:
loop	benchmark-ping-pongs.c	/^static uv_loop_t* loop;$/;"	v	file:
loop	benchmark-pound.c	/^static uv_loop_t* loop;$/;"	v	file:
loop	benchmark-pump.c	/^static uv_loop_t* loop;$/;"	v	file:
loop	benchmark-spawn.c	/^static uv_loop_t* loop;$/;"	v	file:
loop	dns-server.c	/^static uv_loop_t* loop;$/;"	v	file:
loop	echo-server.c	/^static uv_loop_t* loop;$/;"	v	file:
loop	test-fs-poll.c	/^static uv_loop_t* loop;$/;"	v	file:
loop	test-fs.c	/^static uv_loop_t* loop;$/;"	v	file:
loop	test-getsockname.c	/^static uv_loop_t* loop;$/;"	v	file:
loop	test-stdio-over-pipes.c	/^static uv_loop_t* loop;$/;"	v	file:
loop	test-tcp-write-after-connect.c	/^uv_loop_t loop;$/;"	v
loop	test-thread.c	/^  uv_loop_t* loop;$/;"	m	struct:fs_req	file:
loop	test-thread.c	/^  uv_loop_t* loop;$/;"	m	struct:getaddrinfo_req	file:
loop_creating_worker	test-signal-multiple-loops.c	/^static void loop_creating_worker(void* context) {$/;"	f	file:
loop_creation_counter	test-signal-multiple-loops.c	/^static volatile int loop_creation_counter = 0;$/;"	v	file:
loop_iteration	test-loop-handles.c	/^static int loop_iteration = 0;$/;"	v	file:
lseek	test-fs.c	46;"	d	file:
magic_cookie	test-walk-handles.c	/^static char magic_cookie[] = "magic cookie";$/;"	v	file:
main	run-benchmarks.c	/^int main(int argc, char **argv) {$/;"	f
main	run-tests.c	/^int main(int argc, char **argv) {$/;"	f
main	runner.h	/^  int (*main)(void);$/;"	m	struct:__anon4
main	test-tcp-close-accept.c	/^int main(){$/;"	f
main_async	benchmark-async.c	/^  uv_async_t main_async;    \/* wake up main thread *\/$/;"	m	struct:ctx	file:
main_async_cb	benchmark-async.c	/^static void main_async_cb(uv_async_t* handle) {$/;"	f	file:
main_barrier_wait_rval	test-barrier.c	/^  int main_barrier_wait_rval;$/;"	m	struct:__anon3	file:
main_seen	benchmark-async.c	/^  unsigned int main_seen;$/;"	m	struct:ctx	file:
main_sent	benchmark-async.c	/^  unsigned int main_sent;$/;"	m	struct:ctx	file:
main_thread_id	test-thread-equal.c	/^uv_thread_t main_thread_id;$/;"	v
make_connect	benchmark-pound.c	/^  make_connect_fn make_connect;$/;"	m	struct:__anon14	file:
make_connect	benchmark-pound.c	/^  make_connect_fn make_connect;$/;"	m	struct:__anon15	file:
make_connect	benchmark-pound.c	/^  make_connect_fn make_connect;$/;"	m	struct:conn_rec_s	file:
make_connect_fn	benchmark-pound.c	/^typedef void (*make_connect_fn)(struct conn_rec_s* conn);$/;"	t	file:
make_many_connections	test-ipc.c	/^static void make_many_connections(void) {$/;"	f	file:
max_connect_socket	benchmark-pump.c	/^static int max_connect_socket = 0;$/;"	v	file:
max_read_sockets	benchmark-pump.c	/^static int max_read_sockets = 0;$/;"	v	file:
maxfd	test-emfile.c	/^static const int maxfd = 31;$/;"	v	file:
maybe_connect_some	benchmark-pump.c	/^static void maybe_connect_some(void) {$/;"	f	file:
maybe_run_test	run-benchmarks.c	/^static int maybe_run_test(int argc, char **argv) {$/;"	f	file:
maybe_run_test	run-tests.c	/^static int maybe_run_test(int argc, char **argv) {$/;"	f	file:
maybe_spawn	benchmark-spawn.c	/^static void maybe_spawn(void) {$/;"	f	file:
mkdir_cb	test-fs.c	/^static void mkdir_cb(uv_fs_t* req) {$/;"	f	file:
mkdir_cb_count	test-fs.c	/^static int mkdir_cb_count;$/;"	v	file:
mkdir_req	test-fs.c	/^static uv_fs_t mkdir_req;$/;"	v	file:
mkdtemp_cb	test-fs.c	/^static void mkdtemp_cb(uv_fs_t* req) {$/;"	f	file:
mkdtemp_cb_count	test-fs.c	/^static int mkdtemp_cb_count;$/;"	v	file:
mkdtemp_req1	test-fs.c	/^static uv_fs_t mkdtemp_req1;$/;"	v	file:
mkdtemp_req2	test-fs.c	/^static uv_fs_t mkdtemp_req2;$/;"	v	file:
mpipe	test-spawn.c	/^static int mpipe(int *fds) {$/;"	f	file:
mtime	test-fs.c	/^  double mtime;$/;"	m	struct:__anon5	file:
mutex	test-async.c	/^static uv_mutex_t mutex;$/;"	v	file:
mutex	test-condvar.c	/^  uv_mutex_t mutex;$/;"	m	struct:__anon24	file:
mutex	test-semaphore.c	/^  uv_mutex_t mutex;$/;"	m	struct:__anon1	file:
n	runner-unix.c	/^  int n;$/;"	m	struct:__anon19	file:
n_receivers_	benchmark-udp-pummel.c	/^static int n_receivers_;$/;"	v	file:
n_senders_	benchmark-udp-pummel.c	/^static int n_senders_;$/;"	v	file:
name	benchmark-getaddrinfo.c	/^static const char* name = "localhost";$/;"	v	file:
name	runner-unix.h	/^  char* name;$/;"	m	struct:__anon6
name	runner-win.h	/^  char *name;$/;"	m	struct:__anon11
name	test-getaddrinfo.c	/^static const char* name = "localhost";$/;"	v	file:
ncalls	test-signal.c	/^  unsigned int ncalls;$/;"	m	struct:signal_ctx	file:
ncalls	test-signal.c	/^  unsigned int ncalls;$/;"	m	struct:timer_ctx	file:
nested	test-callback-stack.c	/^static int nested = 0;$/;"	v	file:
never_cb	test-timer.c	/^static void never_cb(uv_timer_t* handle) {$/;"	f	file:
next	benchmark-ping-pongs.c	/^  struct buf_s* next;$/;"	m	struct:buf_s	typeref:struct:buf_s::buf_s	file:
next	benchmark-pump.c	/^  struct buf_list_s* next;$/;"	m	struct:buf_list_s	typeref:struct:buf_list_s::buf_list_s	file:
next	benchmark-pump.c	/^  struct req_list_s* next;$/;"	m	struct:req_list_s	typeref:struct:req_list_s::req_list_s	file:
next_tick	test-callback-order.c	/^static void next_tick(uv_idle_t* handle) {$/;"	f	file:
no_term_signal	test-spawn.c	/^static int no_term_signal;$/;"	v	file:
nop_done_cb	test-threadpool-cancel.c	/^static void nop_done_cb(uv_work_t* req, int status) {$/;"	f	file:
nop_work_cb	test-threadpool-cancel.c	/^static void nop_work_cb(uv_work_t* req) {$/;"	f	file:
nrecv	benchmark-pump.c	/^static int64_t nrecv = 0;$/;"	v	file:
nrecv_total	benchmark-pump.c	/^static int64_t nrecv_total = 0;$/;"	v	file:
nreqs	test-threadpool-cancel.c	/^  unsigned nreqs;$/;"	m	struct:cancel_info	file:
nsent	benchmark-pump.c	/^static int64_t nsent = 0;$/;"	v	file:
nsent_total	benchmark-pump.c	/^static int64_t nsent_total = 0;$/;"	v	file:
nthreads	benchmark-async.c	/^  unsigned int nthreads;$/;"	m	struct:ctx	file:
num_connects	benchmark-multi-accept.c	/^  unsigned int num_connects;$/;"	m	struct:client_ctx	file:
num_connects	benchmark-multi-accept.c	/^  unsigned int num_connects;$/;"	m	struct:ipc_server_ctx	file:
num_connects	benchmark-multi-accept.c	/^  unsigned int num_connects;$/;"	m	struct:server_ctx	file:
num_recv_handles	test-ipc-send-recv.c	/^static int num_recv_handles;$/;"	v	file:
num_threads	benchmark-thread.c	/^static volatile int num_threads;$/;"	v	file:
num_threads	test-threadpool-cancel.c	/^static unsigned num_threads;$/;"	v	file:
num_ticks	test-loop-stop.c	/^static int num_ticks = 10;$/;"	v	file:
on_alloc	benchmark-spawn.c	/^static void on_alloc(uv_handle_t* handle,$/;"	f	file:
on_alloc	test-ipc.c	/^static void on_alloc(uv_handle_t* handle,$/;"	f	file:
on_alloc	test-spawn.c	/^static void on_alloc(uv_handle_t* handle,$/;"	f	file:
on_alloc	test-stdio-over-pipes.c	/^static void on_alloc(uv_handle_t* handle,$/;"	f	file:
on_close	dns-server.c	/^static void on_close(uv_handle_t* peer) {$/;"	f	file:
on_close	echo-server.c	/^static void on_close(uv_handle_t* peer) {$/;"	f	file:
on_close	test-connection-fail.c	/^static void on_close(uv_handle_t* handle) {$/;"	f	file:
on_close	test-getsockname.c	/^static void on_close(uv_handle_t* peer) {$/;"	f	file:
on_connect	test-getsockname.c	/^static void on_connect(uv_connect_t* req, int status) {$/;"	f	file:
on_connect	test-tcp-create-socket-early.c	/^static void on_connect(uv_connect_t* req, int status) {$/;"	f	file:
on_connect_with_close	test-connection-fail.c	/^static void on_connect_with_close(uv_connect_t *req, int status) {$/;"	f	file:
on_connect_without_close	test-connection-fail.c	/^static void on_connect_without_close(uv_connect_t *req, int status) {$/;"	f	file:
on_connection	dns-server.c	/^static void on_connection(uv_stream_t* server, int status) {$/;"	f	file:
on_connection	echo-server.c	/^static void on_connection(uv_stream_t* server, int status) {$/;"	f	file:
on_connection	test-getsockname.c	/^static void on_connection(uv_stream_t* server, int status) {$/;"	f	file:
on_connection	test-ipc.c	/^static void on_connection(uv_stream_t* server, int status) {$/;"	f	file:
on_connection	test-tcp-create-socket-early.c	/^static void on_connection(uv_stream_t* server, int status) {$/;"	f	file:
on_pipe_read	test-stdio-over-pipes.c	/^static void on_pipe_read(uv_stream_t* tcp, ssize_t nread, const uv_buf_t* buf) {$/;"	f	file:
on_pipe_read_called	test-ipc.c	/^static int on_pipe_read_called;$/;"	v	file:
on_pipe_read_called	test-stdio-over-pipes.c	/^static int on_pipe_read_called;$/;"	v	file:
on_read	benchmark-spawn.c	/^static void on_read(uv_stream_t* pipe, ssize_t nread, const uv_buf_t* buf) {$/;"	f	file:
on_read	test-ipc.c	/^static void on_read(uv_stream_t* handle,$/;"	f	file:
on_read	test-spawn.c	/^static void on_read(uv_stream_t* tcp, ssize_t nread, const uv_buf_t* buf) {$/;"	f	file:
on_read	test-stdio-over-pipes.c	/^static void on_read(uv_stream_t* tcp, ssize_t nread, const uv_buf_t* rdbuf) {$/;"	f	file:
on_read_alloc	test-ipc.c	/^static void on_read_alloc(uv_handle_t* handle,$/;"	f	file:
on_read_alloc	test-stdio-over-pipes.c	/^static void on_read_alloc(uv_handle_t* handle,$/;"	f	file:
on_read_cb_called	test-stdio-over-pipes.c	/^static int on_read_cb_called;$/;"	v	file:
on_read_connection	test-ipc.c	/^static void on_read_connection(uv_stream_t* handle,$/;"	f	file:
on_read_listen_after_bound_twice	test-ipc.c	/^static void on_read_listen_after_bound_twice(uv_stream_t* handle,$/;"	f	file:
on_read_once	test-spawn.c	/^static void on_read_once(uv_stream_t* tcp, ssize_t nread, const uv_buf_t* buf) {$/;"	f	file:
on_recv	echo-server.c	/^static void on_recv(uv_udp_t* handle,$/;"	f	file:
on_send	echo-server.c	/^static void on_send(uv_udp_send_t* req, int status) {$/;"	f	file:
on_server_close	echo-server.c	/^static void on_server_close(uv_handle_t* handle) {$/;"	f	file:
on_tcp_child_process_read	test-ipc.c	/^static void on_tcp_child_process_read(uv_stream_t* tcp,$/;"	f	file:
on_tcp_read	test-ipc.c	/^static void on_tcp_read(uv_stream_t* tcp, ssize_t nread, const uv_buf_t* buf) {$/;"	f	file:
on_tcp_write	test-ipc.c	/^static void on_tcp_write(uv_write_t* req, int status) {$/;"	f	file:
once_cb	test-timer.c	/^static void once_cb(uv_timer_t* handle) {$/;"	f	file:
once_cb_called	test-timer.c	/^static int once_cb_called = 0;$/;"	v	file:
once_close_cb	test-timer.c	/^static void once_close_cb(uv_handle_t* handle) {$/;"	f	file:
once_close_cb_called	test-timer.c	/^static int once_close_cb_called = 0;$/;"	v	file:
open	test-fs.c	39;"	d	file:
open_cb	test-fs.c	/^static void open_cb(uv_fs_t* req) {$/;"	f	file:
open_cb_count	test-fs.c	/^static int open_cb_count;$/;"	v	file:
open_cb_simple	test-fs.c	/^static void open_cb_simple(uv_fs_t* req) {$/;"	f	file:
open_handles	test-poll.c	/^  int open_handles;$/;"	m	struct:connection_context_s	file:
open_loop_cb	test-fs.c	/^static void open_loop_cb(uv_fs_t* req) {$/;"	f	file:
open_nametoolong_cb	test-fs.c	/^static void open_nametoolong_cb(uv_fs_t* req) {$/;"	f	file:
open_noent_cb	test-fs.c	/^static void open_noent_cb(uv_fs_t* req) {$/;"	f	file:
open_req1	test-fs.c	/^static uv_fs_t open_req1;$/;"	v	file:
open_req2	test-fs.c	/^static uv_fs_t open_req2;$/;"	v	file:
options	benchmark-spawn.c	/^static uv_process_options_t options;$/;"	v	file:
options	test-spawn.c	/^static uv_process_options_t options;$/;"	v	file:
options	test-stdio-over-pipes.c	/^static uv_process_options_t options;$/;"	v	file:
order_cb_a	test-timer.c	/^static void order_cb_a(uv_timer_t *handle) {$/;"	f	file:
order_cb_b	test-timer.c	/^static void order_cb_b(uv_timer_t *handle) {$/;"	f	file:
order_cb_called	test-timer.c	/^static int order_cb_called = 0;$/;"	v	file:
out	benchmark-spawn.c	/^static uv_pipe_t out;$/;"	v	file:
out	test-stdio-over-pipes.c	/^static uv_pipe_t out;$/;"	v	file:
output	benchmark-spawn.c	/^static char output[OUTPUT_SIZE];$/;"	v	file:
output	test-spawn.c	/^static char output[OUTPUT_SIZE];$/;"	v	file:
output	test-stdio-over-pipes.c	/^static char output[OUTPUT_SIZE];$/;"	v	file:
output_used	benchmark-spawn.c	/^static int output_used;$/;"	v	file:
output_used	test-spawn.c	/^static int output_used;$/;"	v	file:
output_used	test-stdio-over-pipes.c	/^static int output_used;$/;"	v	file:
packet_counter	benchmark-udp-pummel.c	/^static unsigned int packet_counter = (unsigned int) 1e6;$/;"	v	file:
path	benchmark-fs-stat.c	/^  const char* path;$/;"	m	struct:async_req	file:
path	test-fs.c	/^  const char* path;$/;"	m	struct:__anon5	file:
peer_handle	benchmark-multi-accept.c	/^  handle_storage_t peer_handle;$/;"	m	struct:ipc_peer_ctx	file:
peer_handle	test-tcp-oob.c	/^static uv_tcp_t peer_handle;$/;"	v	file:
peer_handle	test-tcp-unexpected-read.c	/^static uv_tcp_t peer_handle;$/;"	v	file:
pid	runner-unix.h	/^  pid_t pid;$/;"	m	struct:__anon6
pinger_after_write	test-ping-pong.c	/^static void pinger_after_write(uv_write_t *req, int status) {$/;"	f	file:
pinger_close_cb	benchmark-ping-pongs.c	/^static void pinger_close_cb(uv_handle_t* handle) {$/;"	f	file:
pinger_connect_cb	benchmark-ping-pongs.c	/^static void pinger_connect_cb(uv_connect_t* req, int status) {$/;"	f	file:
pinger_new	benchmark-ping-pongs.c	/^static void pinger_new(void) {$/;"	f	file:
pinger_on_close	test-ping-pong.c	/^static void pinger_on_close(uv_handle_t* handle) {$/;"	f	file:
pinger_on_connect	test-ping-pong.c	/^static void pinger_on_connect(uv_connect_t *req, int status) {$/;"	f	file:
pinger_on_connect_count	test-ping-pong.c	/^static int pinger_on_connect_count;$/;"	v	file:
pinger_read_cb	benchmark-ping-pongs.c	/^static void pinger_read_cb(uv_stream_t* tcp,$/;"	f	file:
pinger_read_cb	test-ping-pong.c	/^static void pinger_read_cb(uv_stream_t* stream,$/;"	f	file:
pinger_shutdown_cb	benchmark-ping-pongs.c	/^static void pinger_shutdown_cb(uv_shutdown_t* req, int status) {$/;"	f	file:
pinger_shutdown_cb_called	benchmark-ping-pongs.c	/^static int pinger_shutdown_cb_called;$/;"	v	file:
pinger_t	benchmark-ping-pongs.c	/^} pinger_t;$/;"	t	typeref:struct:__anon20	file:
pinger_t	test-ping-pong.c	/^} pinger_t;$/;"	t	typeref:struct:__anon12	file:
pinger_write_cb	benchmark-ping-pongs.c	/^static void pinger_write_cb(uv_write_t* req, int status) {$/;"	f	file:
pinger_write_ping	benchmark-ping-pongs.c	/^static void pinger_write_ping(pinger_t* pinger) {$/;"	f	file:
pinger_write_ping	test-ping-pong.c	/^static void pinger_write_ping(pinger_t* pinger) {$/;"	f	file:
pipe	benchmark-multi-accept.c	/^  uv_pipe_t pipe;$/;"	m	union:stream_handle	file:
pipe	runner-unix.c	/^  int pipe[2];$/;"	m	struct:__anon19	file:
pipe	test-ipc-send-recv.c	/^  uv_pipe_t pipe;$/;"	m	union:handles	file:
pipe	test-ping-pong.c	/^    uv_pipe_t pipe;$/;"	m	union:__anon12::__anon13	file:
pipeServer	benchmark-pump.c	/^static uv_pipe_t pipeServer;$/;"	v	file:
pipeServer	echo-server.c	/^static uv_pipe_t pipeServer;$/;"	v	file:
pipe_client	test-pipe-getsockname.c	/^static uv_pipe_t pipe_client;$/;"	v	file:
pipe_client	test-pipe-server-close.c	/^static uv_pipe_t pipe_client;$/;"	v	file:
pipe_client_connect_cb	test-pipe-getsockname.c	/^static void pipe_client_connect_cb(uv_connect_t* req, int status) {$/;"	f	file:
pipe_client_connect_cb	test-pipe-server-close.c	/^static void pipe_client_connect_cb(uv_connect_t* req, int status) {$/;"	f	file:
pipe_client_connect_cb_called	test-pipe-getsockname.c	/^static int pipe_client_connect_cb_called = 0;$/;"	v	file:
pipe_client_connect_cb_called	test-pipe-server-close.c	/^static int pipe_client_connect_cb_called = 0;$/;"	v	file:
pipe_close_cb	benchmark-spawn.c	/^static void pipe_close_cb(uv_handle_t* pipe) {$/;"	f	file:
pipe_close_cb	test-pipe-getsockname.c	/^static void pipe_close_cb(uv_handle_t* handle) {$/;"	f	file:
pipe_close_cb	test-pipe-server-close.c	/^static void pipe_close_cb(uv_handle_t* handle) {$/;"	f	file:
pipe_close_cb_called	test-pipe-getsockname.c	/^static int pipe_close_cb_called = 0;$/;"	v	file:
pipe_close_cb_called	test-pipe-server-close.c	/^static int pipe_close_cb_called = 0;$/;"	v	file:
pipe_conn_rec	benchmark-pound.c	/^} pipe_conn_rec;$/;"	t	typeref:struct:__anon15	file:
pipe_conns	benchmark-pound.c	/^static pipe_conn_rec pipe_conns[MAX_CONNS];$/;"	v	file:
pipe_do_connect	benchmark-pound.c	/^static int pipe_do_connect(int num, make_connect_fn make_connect, void* arg) {$/;"	f	file:
pipe_do_setup	benchmark-pound.c	/^static void pipe_do_setup(int num, void* arg) {$/;"	f	file:
pipe_echo_start	echo-server.c	/^static int pipe_echo_start(char* pipeName) {$/;"	f	file:
pipe_handle	test-pipe-connect-multiple.c	/^  uv_pipe_t pipe_handle;$/;"	m	struct:__anon17	file:
pipe_handle	test-pipe-connect-prepare.c	/^static uv_pipe_t pipe_handle;$/;"	v	file:
pipe_make_connect	benchmark-pound.c	/^static void pipe_make_connect(conn_rec* p) {$/;"	f	file:
pipe_open	benchmark-spawn.c	/^static int pipe_open;$/;"	v	file:
pipe_pinger_new	test-ping-pong.c	/^static void pipe_pinger_new(void) {$/;"	f	file:
pipe_pump	benchmark-pump.c	/^static void pipe_pump(int n) {$/;"	f	file:
pipe_server	test-pipe-getsockname.c	/^static uv_pipe_t pipe_server;$/;"	v	file:
pipe_server	test-pipe-server-close.c	/^static uv_pipe_t pipe_server;$/;"	v	file:
pipe_server_connection_cb	test-pipe-getsockname.c	/^static void pipe_server_connection_cb(uv_stream_t* handle, int status) {$/;"	f	file:
pipe_server_connection_cb	test-pipe-server-close.c	/^static void pipe_server_connection_cb(uv_stream_t* handle, int status) {$/;"	f	file:
pipe_write_handles	benchmark-pump.c	/^static uv_pipe_t pipe_write_handles[MAX_WRITE_HANDLES];$/;"	v	file:
platform_init	runner-unix.c	/^int platform_init(int argc, char **argv) {$/;"	f
platform_init	runner-win.c	/^int platform_init(int argc, char **argv) {$/;"	f
poll_cb	test-fs-poll.c	/^static void poll_cb(uv_fs_poll_t* handle,$/;"	f	file:
poll_cb	test-poll-close-doesnt-corrupt-stack.c	/^static void poll_cb(uv_poll_t* h, int status, int events) {$/;"	f	file:
poll_cb	test-poll-closesocket.c	/^static void poll_cb(uv_poll_t* h, int status, int events) {$/;"	f	file:
poll_cb_called	test-fs-poll.c	/^static int poll_cb_called;$/;"	v	file:
poll_cb_fail	test-fs-poll.c	/^static void poll_cb_fail(uv_fs_poll_t* handle,$/;"	f	file:
poll_handle	test-fs-poll.c	/^static uv_fs_poll_t poll_handle;$/;"	v	file:
poll_handle	test-poll.c	/^  uv_poll_t poll_handle;$/;"	m	struct:connection_context_s	file:
poll_handle	test-poll.c	/^  uv_poll_t poll_handle;$/;"	m	struct:server_context_s	file:
pongs	benchmark-ping-pongs.c	/^  int pongs;$/;"	m	struct:__anon20	file:
pongs	test-ping-pong.c	/^  int pongs;$/;"	m	struct:__anon12	file:
port	test-getnameinfo.c	/^static const int port = 80;$/;"	v	file:
posted	test-barrier.c	/^  volatile int posted;$/;"	m	struct:__anon3	file:
posted	test-condvar.c	/^  volatile int posted;$/;"	m	struct:__anon24	file:
posted	test-semaphore.c	/^  volatile int posted;$/;"	m	struct:__anon1	file:
pound_it	benchmark-pound.c	/^static int pound_it(int concurrency,$/;"	f	file:
prepare	test-async.c	/^static uv_prepare_t prepare;$/;"	v	file:
prepare_1_cb	test-loop-handles.c	/^static void prepare_1_cb(uv_prepare_t* handle) {$/;"	f	file:
prepare_1_cb_called	test-loop-handles.c	/^static int prepare_1_cb_called = 0;$/;"	v	file:
prepare_1_close_cb	test-loop-handles.c	/^static void prepare_1_close_cb(uv_handle_t* handle) {$/;"	f	file:
prepare_1_close_cb_called	test-loop-handles.c	/^static int prepare_1_close_cb_called = 0;$/;"	v	file:
prepare_1_handle	test-loop-handles.c	/^static uv_prepare_t prepare_1_handle;$/;"	v	file:
prepare_2_cb	test-loop-handles.c	/^static void prepare_2_cb(uv_prepare_t* handle) {$/;"	f	file:
prepare_2_cb_called	test-loop-handles.c	/^static int prepare_2_cb_called = 0;$/;"	v	file:
prepare_2_close_cb	test-loop-handles.c	/^static void prepare_2_close_cb(uv_handle_t* handle) {$/;"	f	file:
prepare_2_close_cb_called	test-loop-handles.c	/^static int prepare_2_close_cb_called = 0;$/;"	v	file:
prepare_2_handle	test-loop-handles.c	/^static uv_prepare_t prepare_2_handle;$/;"	v	file:
prepare_called	test-loop-stop.c	/^static int prepare_called = 0;$/;"	v	file:
prepare_cb	test-async.c	/^static void prepare_cb(uv_prepare_t* handle) {$/;"	f	file:
prepare_cb	test-loop-stop.c	/^static void prepare_cb(uv_prepare_t* handle) {$/;"	f	file:
prepare_cb	test-pipe-connect-prepare.c	/^static void prepare_cb(uv_prepare_t* handle) {$/;"	f	file:
prepare_cb	test-ref.c	/^static void prepare_cb(uv_prepare_t* h) {$/;"	f	file:
prepare_cb	test-timer-from-check.c	/^static void prepare_cb(uv_prepare_t* handle) {$/;"	f	file:
prepare_cb_called	test-async.c	/^static int prepare_cb_called;$/;"	v	file:
prepare_cb_called	test-timer-from-check.c	/^static int prepare_cb_called;$/;"	v	file:
prepare_handle	test-loop-stop.c	/^static uv_prepare_t prepare_handle;$/;"	v	file:
prepare_handle	test-pipe-connect-prepare.c	/^static uv_prepare_t prepare_handle;$/;"	v	file:
prepare_handle	test-timer-from-check.c	/^static uv_prepare_t prepare_handle;$/;"	v	file:
prevbuf_pos	dns-server.c	/^  int prevbuf_pos;$/;"	m	struct:__anon8	file:
prevbuf_ptr	dns-server.c	/^  char* prevbuf_ptr;$/;"	m	struct:__anon8	file:
prevbuf_rem	dns-server.c	/^  int prevbuf_rem;$/;"	m	struct:__anon8	file:
print_tests	runner.c	/^void print_tests(FILE* stream) {$/;"	f
process	benchmark-spawn.c	/^static uv_process_t process;$/;"	v	file:
process	runner-win.h	/^  HANDLE process;$/;"	m	struct:__anon11
process	test-spawn.c	/^static uv_process_t process;$/;"	v	file:
process_cleanup	runner-unix.c	/^void process_cleanup(process_info_t *p) {$/;"	f
process_cleanup	runner-win.c	/^void process_cleanup(process_info_t *p) {$/;"	f
process_close_cb	benchmark-spawn.c	/^static void process_close_cb(uv_handle_t* handle) {$/;"	f	file:
process_copy_output	runner-unix.c	/^int process_copy_output(process_info_t *p, int fd) {$/;"	f
process_copy_output	runner-win.c	/^int process_copy_output(process_info_t *p, int fd) {$/;"	f
process_get_name	runner-unix.c	/^char* process_get_name(process_info_t *p) {$/;"	f
process_get_name	runner-win.c	/^char* process_get_name(process_info_t *p) {$/;"	f
process_info_t	runner-unix.h	/^} process_info_t;$/;"	t	typeref:struct:__anon6
process_info_t	runner-win.h	/^} process_info_t;$/;"	t	typeref:struct:__anon11
process_name	runner.h	/^  char *process_name;$/;"	m	struct:__anon4
process_open	benchmark-spawn.c	/^static int process_open;$/;"	v	file:
process_output_size	runner-unix.c	/^long int process_output_size(process_info_t *p) {$/;"	f
process_output_size	runner-win.c	/^long int process_output_size(process_info_t *p) {$/;"	f
process_read_last_line	runner-unix.c	/^int process_read_last_line(process_info_t *p,$/;"	f
process_read_last_line	runner-win.c	/^int process_read_last_line(process_info_t *p,$/;"	f
process_reap	runner-unix.c	/^int process_reap(process_info_t *p) {$/;"	f
process_reap	runner-win.c	/^int process_reap(process_info_t *p) {$/;"	f
process_req	dns-server.c	/^static void process_req(uv_stream_t* handle,$/;"	f	file:
process_start	runner-unix.c	/^int process_start(char* name, char* part, process_info_t* p, int is_helper) {$/;"	f
process_start	runner-win.c	/^int process_start(char *name, char *part, process_info_t *p, int is_helper) {$/;"	f
process_terminate	runner-unix.c	/^int process_terminate(process_info_t *p) {$/;"	f
process_terminate	runner-win.c	/^int process_terminate(process_info_t *p) {$/;"	f
process_wait	runner-unix.c	/^int process_wait(process_info_t* vec, int n, int timeout) {$/;"	f
process_wait	runner-win.c	/^int process_wait(process_info_t *vec, int n, int timeout) {$/;"	f
pummel	benchmark-async-pummel.c	/^static void pummel(void* arg) {$/;"	f	file:
pummel	benchmark-udp-pummel.c	/^static int pummel(unsigned int n_senders,$/;"	f	file:
qbuf	test-shutdown-eof.c	/^static uv_buf_t qbuf;$/;"	v	file:
qrecord	dns-server.c	/^static unsigned char qrecord[] = {$/;"	v	file:
read	test-poll.c	/^  size_t read, sent;$/;"	m	struct:connection_context_s	file:
read_buffer	test-ping-pong.c	/^  char read_buffer[BUFSIZE];$/;"	m	struct:__anon12	file:
read_cb	benchmark-pound.c	/^static void read_cb(uv_stream_t* stream, ssize_t nread, const uv_buf_t* buf) {$/;"	f	file:
read_cb	benchmark-pump.c	/^static void read_cb(uv_stream_t* stream, ssize_t bytes, const uv_buf_t* buf) {$/;"	f	file:
read_cb	blackhole-server.c	/^static void read_cb(uv_stream_t* stream, ssize_t nread, const uv_buf_t* buf) {$/;"	f	file:
read_cb	test-callback-stack.c	/^static void read_cb(uv_stream_t* tcp, ssize_t nread, const uv_buf_t* buf) {$/;"	f	file:
read_cb	test-close-fd.c	/^static void read_cb(uv_stream_t *handle, ssize_t nread, const uv_buf_t *buf) {$/;"	f	file:
read_cb	test-delayed-accept.c	/^static void read_cb(uv_stream_t* tcp, ssize_t nread, const uv_buf_t* buf) {$/;"	f	file:
read_cb	test-fs.c	/^static void read_cb(uv_fs_t* req) {$/;"	f	file:
read_cb	test-ipc-send-recv.c	/^static void read_cb(uv_stream_t* handle,$/;"	f	file:
read_cb	test-osx-select.c	/^static void read_cb(uv_stream_t* stream, ssize_t nread, const uv_buf_t* buf) {$/;"	f	file:
read_cb	test-pipe-sendmsg.c	/^static void read_cb(uv_stream_t* handle,$/;"	f	file:
read_cb	test-shutdown-eof.c	/^static void read_cb(uv_stream_t* t, ssize_t nread, const uv_buf_t* buf) {$/;"	f	file:
read_cb	test-tcp-close-accept.c	/^static void read_cb(uv_stream_t* stream, ssize_t nread, const uv_buf_t* buf) {$/;"	f	file:
read_cb	test-tcp-oob.c	/^static void read_cb(uv_stream_t* handle, ssize_t nread, const uv_buf_t* buf) {$/;"	f	file:
read_cb	test-tcp-open.c	/^static void read_cb(uv_stream_t* tcp, ssize_t nread, const uv_buf_t* buf) {$/;"	f	file:
read_cb	test-tcp-shutdown-after-write.c	/^static void read_cb(uv_stream_t* handle, ssize_t nread, const uv_buf_t* buf) {$/;"	f	file:
read_cb	test-tcp-try-write.c	/^static void read_cb(uv_stream_t* tcp, ssize_t nread, const uv_buf_t* buf) {$/;"	f	file:
read_cb	test-tcp-unexpected-read.c	/^static void read_cb(uv_stream_t* handle, ssize_t nread, const uv_buf_t* buf) {$/;"	f	file:
read_cb	test-tcp-write-to-half-open-connection.c	/^static void read_cb(uv_stream_t* stream, ssize_t nread, const uv_buf_t* buf) {$/;"	f	file:
read_cb	test-tcp-writealot.c	/^static void read_cb(uv_stream_t* tcp, ssize_t nread, const uv_buf_t* buf) {$/;"	f	file:
read_cb_called	test-close-fd.c	/^static unsigned int read_cb_called;$/;"	v	file:
read_cb_called	test-ipc.c	/^static int read_cb_called;$/;"	v	file:
read_cb_called	test-tcp-close-accept.c	/^static unsigned int read_cb_called;$/;"	v	file:
read_cb_called	test-tcp-write-to-half-open-connection.c	/^static int read_cb_called;$/;"	v	file:
read_cb_count	test-fs.c	/^static int read_cb_count;$/;"	v	file:
read_count	test-osx-select.c	/^static int read_count;$/;"	v	file:
read_req	test-fs.c	/^static uv_fs_t read_req;$/;"	v	file:
read_show_stats	benchmark-pump.c	/^static void read_show_stats(void) {$/;"	f	file:
read_sockets	benchmark-pump.c	/^static int read_sockets = 0;$/;"	v	file:
read_sockets_close_cb	benchmark-pump.c	/^static void read_sockets_close_cb(uv_handle_t* handle) {$/;"	f	file:
read_stdin	test-pipe-close-stdout-read-stdin.c	/^void read_stdin(uv_stream_t *stream, ssize_t nread, const uv_buf_t* buf)$/;"	f
readlink_cb	test-fs.c	/^static void readlink_cb(uv_fs_t* req) {$/;"	f	file:
readlink_cb_count	test-fs.c	/^static int readlink_cb_count;$/;"	v	file:
receiver_state	benchmark-udp-pummel.c	/^struct receiver_state {$/;"	s	file:
receivers	benchmark-udp-pummel.c	/^static struct receiver_state receivers[1024];$/;"	v	typeref:struct:receiver_state	file:
recv	test-ipc-send-recv.c	/^  union handles recv;$/;"	m	struct:echo_ctx	typeref:union:echo_ctx::handles	file:
recv	test-ipc-send-recv.c	/^  union handles recv;$/;"	m	struct:test_ctx	typeref:union:test_ctx::handles	file:
recv_cb	benchmark-udp-pummel.c	/^static void recv_cb(uv_udp_t* handle,$/;"	f	file:
recv_cb	test-ipc-send-recv.c	/^static void recv_cb(uv_stream_t* handle,$/;"	f	file:
recv_cb	test-udp-open.c	/^static void recv_cb(uv_udp_t* handle,$/;"	f	file:
recv_cb	test-udp-send-unreachable.c	/^static void recv_cb(uv_udp_t* handle,$/;"	f	file:
recv_cb	test-watcher-cross-stop.c	/^static void recv_cb(uv_udp_t* handle,$/;"	f	file:
recv_cb_called	benchmark-udp-pummel.c	/^static unsigned int recv_cb_called;$/;"	v	file:
recv_cb_called	test-udp-ipv6.c	/^static int recv_cb_called;$/;"	v	file:
recv_cb_called	test-udp-send-unreachable.c	/^static int recv_cb_called;$/;"	v	file:
recv_cb_called	test-watcher-cross-stop.c	/^static unsigned int recv_cb_called;$/;"	v	file:
remote_conn_accepted	test-ipc.c	/^static int remote_conn_accepted;$/;"	v	file:
rename_cb	test-fs.c	/^static void rename_cb(uv_fs_t* req) {$/;"	f	file:
rename_cb_count	test-fs.c	/^static int rename_cb_count;$/;"	v	file:
rename_req	test-fs.c	/^static uv_fs_t rename_req;$/;"	v	file:
repeat_1	test-timer-again.c	/^static uv_timer_t dummy, repeat_1, repeat_2;$/;"	v	file:
repeat_1_cb	test-timer-again.c	/^static void repeat_1_cb(uv_timer_t* handle) {$/;"	f	file:
repeat_1_cb_called	test-timer-again.c	/^static int repeat_1_cb_called = 0;$/;"	v	file:
repeat_2	test-timer-again.c	/^static uv_timer_t dummy, repeat_1, repeat_2;$/;"	v	file:
repeat_2_cb	test-timer-again.c	/^static void repeat_2_cb(uv_timer_t* handle) {$/;"	f	file:
repeat_2_cb_allowed	test-timer-again.c	/^static int repeat_2_cb_allowed = 0;$/;"	v	file:
repeat_2_cb_called	test-timer-again.c	/^static int repeat_2_cb_called = 0;$/;"	v	file:
repeat_cb	test-timer.c	/^static void repeat_cb(uv_timer_t* handle) {$/;"	f	file:
repeat_cb_called	test-timer.c	/^static int repeat_cb_called = 0;$/;"	v	file:
repeat_close_cb	test-timer.c	/^static void repeat_close_cb(uv_handle_t* handle) {$/;"	f	file:
repeat_close_cb_called	test-timer.c	/^static int repeat_close_cb_called = 0;$/;"	v	file:
req	benchmark-tcp-write-batch.c	/^  uv_write_t req;$/;"	m	struct:__anon21	file:
req	dns-server.c	/^  uv_write_t req;$/;"	m	struct:__anon7	file:
req	echo-server.c	/^  uv_write_t req;$/;"	m	struct:__anon2	file:
req	test-connection-fail.c	/^static uv_connect_t req;$/;"	v	file:
req	test-getnameinfo.c	/^static uv_getnameinfo_t req;$/;"	v	file:
req1	test-shutdown-twice.c	/^static uv_shutdown_t req1;$/;"	v	file:
req2	test-shutdown-twice.c	/^static uv_shutdown_t req2;$/;"	v	file:
req_	test-udp-dgram-too-big.c	/^static uv_udp_send_t req_;$/;"	v	file:
req_	test-udp-ipv6.c	/^static uv_udp_send_t req_;$/;"	v	file:
req_alloc	benchmark-pump.c	/^static uv_req_t* req_alloc(void) {$/;"	f	file:
req_cb	test-ref.c	/^static void req_cb(uv_handle_t* req, int status) {$/;"	f	file:
req_cb_called	test-ref.c	/^static int req_cb_called;$/;"	v	file:
req_free	benchmark-pump.c	/^static void req_free(uv_req_t* uv_req) {$/;"	f	file:
req_freelist	benchmark-pump.c	/^static req_list_t* req_freelist = NULL;$/;"	v	file:
req_list_s	benchmark-pump.c	/^typedef struct req_list_s {$/;"	s	file:
req_list_t	benchmark-pump.c	/^} req_list_t;$/;"	t	typeref:struct:req_list_s	file:
reqs	test-threadpool-cancel.c	/^  void* reqs;$/;"	m	struct:cancel_info	file:
reqs	test-watcher-cross-stop.c	/^static uv_udp_send_t reqs[ARRAY_SIZE(sockets)];$/;"	v	file:
rewind_cursor	runner-unix.c	/^void rewind_cursor(void) {$/;"	f
rewind_cursor	runner-win.c	/^void rewind_cursor() {$/;"	f
rmdir	test-fs.c	38;"	d	file:
rmdir_cb	test-fs.c	/^static void rmdir_cb(uv_fs_t* req) {$/;"	f	file:
rmdir_cb_count	test-fs.c	/^static int rmdir_cb_count;$/;"	v	file:
rmdir_req	test-fs.c	/^static uv_fs_t rmdir_req;$/;"	v	file:
run_ipc_send_recv_helper	test-ipc-send-recv.c	/^int run_ipc_send_recv_helper(uv_loop_t* loop, int inprocess) {$/;"	f
run_ipc_send_recv_pipe	test-ipc-send-recv.c	/^static int run_ipc_send_recv_pipe(int inprocess) {$/;"	f	file:
run_ipc_send_recv_tcp	test-ipc-send-recv.c	/^static int run_ipc_send_recv_tcp(int inprocess) {$/;"	f	file:
run_ipc_test	test-ipc.c	/^static int run_ipc_test(const char* helper, uv_read_cb read_cb) {$/;"	f	file:
run_test	runner.c	/^int run_test(const char* test,$/;"	f
run_test	test-ipc-send-recv.c	/^static int run_test(int inprocess) {$/;"	f	file:
run_test_part	runner.c	/^int run_test_part(const char* test, const char* part) {$/;"	f
run_tests	runner.c	/^int run_tests(int benchmark_output) {$/;"	f
running	benchmark-async-pummel.c	/^static const char running[] = "running";$/;"	v	file:
saturate_threadpool	test-threadpool-cancel.c	/^static void saturate_threadpool(void) {$/;"	f	file:
scandir_cb	test-fs.c	/^static void scandir_cb(uv_fs_t* req) {$/;"	f	file:
scandir_cb_count	test-fs.c	/^static int scandir_cb_count;$/;"	v	file:
scandir_req	test-fs.c	/^static uv_fs_t scandir_req;$/;"	v	file:
scratch	benchmark-multi-accept.c	/^  char scratch[16];$/;"	m	struct:ipc_client_ctx	file:
seen_timer_handle	test-walk-handles.c	/^static int seen_timer_handle;$/;"	v	file:
sem	test-semaphore.c	/^  uv_sem_t sem;$/;"	m	struct:__anon1	file:
sem	test-signal-multiple-loops.c	/^static uv_sem_t sem;$/;"	v	file:
semaphore	benchmark-multi-accept.c	/^  uv_sem_t semaphore;$/;"	m	struct:server_ctx	file:
send	test-ipc-send-recv.c	/^  union handles send;$/;"	m	struct:test_ctx	typeref:union:test_ctx::handles	file:
send_buffer	test-tcp-writealot.c	/^static char* send_buffer;$/;"	v	file:
send_cb	benchmark-udp-pummel.c	/^static void send_cb(uv_udp_send_t* req, int status) {$/;"	f	file:
send_cb	test-udp-dgram-too-big.c	/^static void send_cb(uv_udp_send_t* req, int status) {$/;"	f	file:
send_cb	test-udp-ipv6.c	/^static void send_cb(uv_udp_send_t* req, int status) {$/;"	f	file:
send_cb	test-udp-open.c	/^static void send_cb(uv_udp_send_t* req, int status) {$/;"	f	file:
send_cb	test-udp-send-unreachable.c	/^static void send_cb(uv_udp_send_t* req, int status) {$/;"	f	file:
send_cb	test-watcher-cross-stop.c	/^static void send_cb(uv_udp_send_t* req, int status) {$/;"	f	file:
send_cb_called	benchmark-udp-pummel.c	/^static unsigned int send_cb_called;$/;"	v	file:
send_cb_called	test-udp-dgram-too-big.c	/^static int send_cb_called;$/;"	v	file:
send_cb_called	test-udp-ipv6.c	/^static int send_cb_called;$/;"	v	file:
send_cb_called	test-udp-open.c	/^static int send_cb_called = 0;$/;"	v	file:
send_cb_called	test-udp-send-unreachable.c	/^static int send_cb_called;$/;"	v	file:
send_cb_called	test-watcher-cross-stop.c	/^static unsigned int send_cb_called;$/;"	v	file:
send_listen_handles	benchmark-multi-accept.c	/^static void send_listen_handles(uv_handle_type type,$/;"	f	file:
send_recv_start	test-ipc-send-recv.c	/^static void send_recv_start() {$/;"	f	file:
send_req	benchmark-udp-pummel.c	/^  uv_udp_send_t send_req;$/;"	m	struct:sender_state	file:
send_req	test-getsockname.c	/^static uv_udp_send_t send_req;$/;"	v	file:
send_req	test-udp-open.c	/^static uv_udp_send_t send_req;$/;"	v	file:
sender_state	benchmark-udp-pummel.c	/^struct sender_state {$/;"	s	file:
senders	benchmark-udp-pummel.c	/^static struct sender_state senders[1024];$/;"	v	typeref:struct:sender_state	file:
sendfile_cb	test-fs.c	/^static void sendfile_cb(uv_fs_t* req) {$/;"	f	file:
sendfile_cb_count	test-fs.c	/^static int sendfile_cb_count;$/;"	v	file:
sendfile_req	test-fs.c	/^static uv_fs_t sendfile_req;$/;"	v	file:
sent	test-poll.c	/^  size_t read, sent;$/;"	m	struct:connection_context_s	file:
sent_fin	test-poll.c	/^  int got_fin, sent_fin;$/;"	m	struct:connection_context_s	file:
server	benchmark-pump.c	/^static uv_stream_t* server;$/;"	v	file:
server	dns-server.c	/^static uv_tcp_t server;$/;"	v	file:
server	echo-server.c	/^static uv_handle_t* server;$/;"	v	file:
server	test-multiple-listen.c	/^static uv_tcp_t server;$/;"	v	file:
server	test-tcp-try-write.c	/^static uv_tcp_t server;$/;"	v	file:
server	test-tcp-write-queue-order.c	/^static uv_tcp_t server;$/;"	v	file:
server	test-udp-ipv6.c	/^static uv_udp_t server;$/;"	v	file:
server	test-udp-multicast-interface.c	/^static uv_udp_t server;$/;"	v	file:
server	test-udp-multicast-interface6.c	/^static uv_udp_t server;$/;"	v	file:
server	test-udp-multicast-join.c	/^static uv_udp_t server;$/;"	v	file:
server	test-udp-multicast-join6.c	/^static uv_udp_t server;$/;"	v	file:
server	test-udp-multicast-ttl.c	/^static uv_udp_t server;$/;"	v	file:
server	test-udp-send-and-recv.c	/^static uv_udp_t server;$/;"	v	file:
server	test-udp-send-immediate.c	/^static uv_udp_t server;$/;"	v	file:
server	test-udp-try-send.c	/^static uv_udp_t server;$/;"	v	file:
serverType	echo-server.c	/^static stream_type serverType;$/;"	v	file:
server_cb	benchmark-multi-accept.c	/^static void server_cb(void *arg) {$/;"	f	file:
server_close_cb	test-poll.c	/^static void server_close_cb(uv_handle_t* handle) {$/;"	f	file:
server_closed	echo-server.c	/^static int server_closed;$/;"	v	file:
server_context_s	test-poll.c	/^typedef struct server_context_s {$/;"	s	file:
server_context_t	test-poll.c	/^} server_context_t;$/;"	t	typeref:struct:server_context_s	file:
server_ctx	benchmark-multi-accept.c	/^struct server_ctx {$/;"	s	file:
server_handle	benchmark-multi-accept.c	/^  handle_storage_t server_handle;$/;"	m	struct:ipc_server_ctx	file:
server_handle	benchmark-multi-accept.c	/^  handle_storage_t server_handle;$/;"	m	struct:server_ctx	file:
server_handle	benchmark-multi-accept.c	/^  uv_stream_t* server_handle;$/;"	m	struct:ipc_client_ctx	file:
server_handle	test-emfile.c	/^static uv_tcp_t server_handle;$/;"	v	file:
server_handle	test-pipe-connect-multiple.c	/^static uv_pipe_t server_handle;$/;"	v	file:
server_handle	test-tcp-oob.c	/^static uv_tcp_t server_handle;$/;"	v	file:
server_handle	test-tcp-unexpected-read.c	/^static uv_tcp_t server_handle;$/;"	v	file:
server_poll_cb	test-poll.c	/^static void server_poll_cb(uv_poll_t* handle, int status, int events) {$/;"	f	file:
server_port	test-getsockname.c	/^static const int server_port = TEST_PORT;$/;"	v	file:
set_nonblocking	test-pipe-sendmsg.c	/^static void set_nonblocking(uv_os_sock_t sock) {$/;"	f	file:
set_title	test-process-title.c	/^static void set_title(const char* title) {$/;"	f	file:
setup_fn	benchmark-pound.c	/^typedef void (*setup_fn)(int num, void* arg);$/;"	t	file:
show_output	runner.h	/^  int show_output;$/;"	m	struct:__anon4
show_stats	benchmark-pump.c	/^static void show_stats(uv_timer_t* handle) {$/;"	f	file:
shutdown_cb	benchmark-tcp-write-batch.c	/^static void shutdown_cb(uv_shutdown_t* req, int status) {$/;"	f	file:
shutdown_cb	blackhole-server.c	/^static void shutdown_cb(uv_shutdown_t* req, int status) {$/;"	f	file:
shutdown_cb	test-callback-stack.c	/^static void shutdown_cb(uv_shutdown_t* req, int status) {$/;"	f	file:
shutdown_cb	test-ref.c	/^static void shutdown_cb(uv_shutdown_t* req, int status) {$/;"	f	file:
shutdown_cb	test-shutdown-close.c	/^static void shutdown_cb(uv_shutdown_t* req, int status) {$/;"	f	file:
shutdown_cb	test-shutdown-eof.c	/^static void shutdown_cb(uv_shutdown_t *req, int status) {$/;"	f	file:
shutdown_cb	test-shutdown-twice.c	/^static void shutdown_cb(uv_shutdown_t* req, int status) {$/;"	f	file:
shutdown_cb	test-tcp-open.c	/^static void shutdown_cb(uv_shutdown_t* req, int status) {$/;"	f	file:
shutdown_cb	test-tcp-shutdown-after-write.c	/^static void shutdown_cb(uv_shutdown_t* req, int status) {$/;"	f	file:
shutdown_cb	test-tcp-writealot.c	/^static void shutdown_cb(uv_shutdown_t* req, int status) {$/;"	f	file:
shutdown_cb_called	benchmark-tcp-write-batch.c	/^static int shutdown_cb_called = 0;$/;"	v	file:
shutdown_cb_called	test-callback-stack.c	/^static int shutdown_cb_called = 0;$/;"	v	file:
shutdown_cb_called	test-ref.c	/^static int shutdown_cb_called;$/;"	v	file:
shutdown_cb_called	test-shutdown-close.c	/^static int shutdown_cb_called = 0;$/;"	v	file:
shutdown_cb_called	test-shutdown-twice.c	/^static int shutdown_cb_called = 0;$/;"	v	file:
shutdown_cb_called	test-tcp-open.c	/^static int shutdown_cb_called = 0;$/;"	v	file:
shutdown_cb_called	test-tcp-shutdown-after-write.c	/^static int shutdown_cb_called;$/;"	v	file:
shutdown_cb_called	test-tcp-writealot.c	/^static int shutdown_cb_called = 0;$/;"	v	file:
shutdown_req	benchmark-ping-pongs.c	/^  uv_shutdown_t shutdown_req;$/;"	m	struct:__anon20	file:
shutdown_req	benchmark-tcp-write-batch.c	/^static uv_shutdown_t shutdown_req;$/;"	v	file:
shutdown_req	blackhole-server.c	/^  uv_shutdown_t shutdown_req;$/;"	m	struct:__anon18	file:
shutdown_req	test-callback-stack.c	/^static uv_shutdown_t shutdown_req;$/;"	v	file:
shutdown_req	test-ref.c	/^static uv_shutdown_t shutdown_req;$/;"	v	file:
shutdown_req	test-shutdown-close.c	/^static uv_shutdown_t shutdown_req;$/;"	v	file:
shutdown_req	test-shutdown-eof.c	/^static uv_shutdown_t shutdown_req;$/;"	v	file:
shutdown_req	test-tcp-open.c	/^static uv_shutdown_t shutdown_req;$/;"	v	file:
shutdown_req	test-tcp-shutdown-after-write.c	/^static uv_shutdown_t shutdown_req;$/;"	v	file:
shutdown_req	test-tcp-writealot.c	/^static uv_shutdown_t shutdown_req;$/;"	v	file:
signal1_cb	test-signal-multiple-loops.c	/^static void signal1_cb(uv_signal_t* handle, int signum) {$/;"	f	file:
signal1_cb_counter	test-signal-multiple-loops.c	/^static volatile int signal1_cb_counter = 0;$/;"	v	file:
signal2_cb	test-signal-multiple-loops.c	/^static void signal2_cb(uv_signal_t* handle, int signum) {$/;"	f	file:
signal2_cb_counter	test-signal-multiple-loops.c	/^static volatile int signal2_cb_counter = 0;$/;"	v	file:
signal_action	test-signal-multiple-loops.c	/^enum signal_action {$/;"	g	file:
signal_cb	test-signal.c	/^static void signal_cb(uv_signal_t* handle, int signum) {$/;"	f	file:
signal_cond	test-threadpool-cancel.c	/^static uv_cond_t signal_cond;$/;"	v	file:
signal_ctx	test-signal.c	/^struct signal_ctx {$/;"	s	file:
signal_handling_worker	test-signal-multiple-loops.c	/^static void signal_handling_worker(void* context) {$/;"	f	file:
signal_mutex	test-threadpool-cancel.c	/^static uv_mutex_t signal_mutex;$/;"	v	file:
signal_unexpected_cb	test-signal-multiple-loops.c	/^static void signal_unexpected_cb(uv_signal_t* handle, int signum) {$/;"	f	file:
signum	test-signal.c	/^  int signum;$/;"	m	struct:signal_ctx	file:
signum	test-signal.c	/^  int signum;$/;"	m	struct:timer_ctx	file:
slab	test-watcher-cross-stop.c	/^static char slab[1];$/;"	v	file:
sock	test-poll-close-doesnt-corrupt-stack.c	/^uv_os_sock_t sock;$/;"	v
sock	test-poll-closesocket.c	/^uv_os_sock_t sock;$/;"	v
sock	test-poll.c	/^  uv_os_sock_t sock;$/;"	m	struct:connection_context_s	file:
sock	test-poll.c	/^  uv_os_sock_t sock;$/;"	m	struct:server_context_s	file:
sockets	test-watcher-cross-stop.c	/^static uv_udp_t sockets[2500];$/;"	v	file:
spawn	benchmark-spawn.c	/^static void spawn(void) {$/;"	f	file:
spawn_helper	test-ipc.c	/^void spawn_helper(uv_pipe_t* channel,$/;"	f
spawn_stdin_stdout	test-spawn.c	/^int spawn_stdin_stdout(void) {$/;"	f
spurious_writable_wakeups	test-poll.c	/^static int spurious_writable_wakeups = 0;$/;"	v	file:
start	benchmark-pound.c	/^static uint64_t start; \/* in ms  *\/$/;"	v	file:
start_client	test-poll.c	/^static void start_client(void) {$/;"	f	file:
start_poll_test	test-poll.c	/^static void start_poll_test(void) {$/;"	f	file:
start_server	test-delayed-accept.c	/^static void start_server(void) {$/;"	f	file:
start_server	test-multiple-listen.c	/^static void start_server(void) {$/;"	f	file:
start_server	test-poll.c	/^static void start_server(void) {$/;"	f	file:
start_server	test-tcp-close.c	/^static void start_server(uv_loop_t* loop, uv_tcp_t* handle) {$/;"	f	file:
start_server	test-tcp-try-write.c	/^static void start_server(void) {$/;"	f	file:
start_server	test-tcp-write-queue-order.c	/^static void start_server(void) {$/;"	f	file:
start_stats_collection	benchmark-pump.c	/^static void start_stats_collection(void) {$/;"	f	file:
start_time	benchmark-getaddrinfo.c	/^static int64_t start_time;$/;"	v	file:
start_time	benchmark-ping-pongs.c	/^static int64_t start_time;$/;"	v	file:
start_time	benchmark-pump.c	/^static int64_t start_time;$/;"	v	file:
start_time	test-timer-again.c	/^static uint64_t start_time;$/;"	v	file:
start_time	test-timer.c	/^static uint64_t start_time;$/;"	v	file:
start_timer	test-signal.c	/^static void start_timer(uv_loop_t* loop, int signum, struct timer_ctx* ctx) {$/;"	f	file:
start_watcher	test-signal.c	/^static void start_watcher(uv_loop_t* loop, int signum, struct signal_ctx* ctx) {$/;"	f	file:
startup	test-tcp-open.c	/^static void startup(void) {$/;"	f	file:
startup	test-udp-open.c	/^static void startup(void) {$/;"	f	file:
stat	test-fs.c	43;"	d	file:
stat_cb	benchmark-fs-stat.c	/^static void stat_cb(uv_fs_t* fs_req) {$/;"	f	file:
stat_cb	test-fs.c	/^static void stat_cb(uv_fs_t* req) {$/;"	f	file:
stat_cb_count	test-fs.c	/^static int stat_cb_count;$/;"	v	file:
stat_req	test-fs.c	/^static uv_fs_t stat_req;$/;"	v	file:
state	benchmark-ping-pongs.c	/^  int state;$/;"	m	struct:__anon20	file:
state	dns-server.c	/^  dnsstate state;$/;"	m	struct:__anon9	file:
state	test-ping-pong.c	/^  int state;$/;"	m	struct:__anon12	file:
stats_left	benchmark-pump.c	/^static int stats_left = 0;$/;"	v	file:
status	runner-unix.h	/^  int status;$/;"	m	struct:__anon6
stdin_pipe	test-stdio-over-pipes.c	/^static uv_pipe_t stdin_pipe;$/;"	v	file:
stdio_in	runner-win.h	/^  HANDLE stdio_in;$/;"	m	struct:__anon11
stdio_out	runner-win.h	/^  HANDLE stdio_out;$/;"	m	struct:__anon11
stdio_over_pipes_helper	test-stdio-over-pipes.c	/^int stdio_over_pipes_helper(void) {$/;"	f
stdout_file	runner-unix.h	/^  FILE* stdout_file;$/;"	m	struct:__anon6
stdout_pipe	test-stdio-over-pipes.c	/^static uv_pipe_t stdout_pipe;$/;"	v	file:
stop	benchmark-async-pummel.c	/^static const char stop[]    = "stop";$/;"	v	file:
stop	test-signal-multiple-loops.c	/^static volatile int stop = 0;$/;"	v	file:
stop_or_close	test-signal.c	/^  enum { CLOSE, STOP } stop_or_close;$/;"	m	struct:signal_ctx	typeref:enum:signal_ctx::__anon22	file:
stopped	benchmark-async-pummel.c	/^static const char stopped[] = "stopped";$/;"	v	file:
stream	benchmark-pound.c	/^  uv_pipe_t stream;$/;"	m	struct:__anon15	file:
stream	benchmark-pound.c	/^  uv_stream_t stream;$/;"	m	struct:conn_rec_s	file:
stream	benchmark-pound.c	/^  uv_tcp_t stream;$/;"	m	struct:__anon14	file:
stream	test-ipc-send-recv.c	/^  uv_stream_t stream;$/;"	m	union:handles	file:
stream	test-ping-pong.c	/^  } stream;$/;"	m	struct:__anon12	typeref:union:__anon12::__anon13	file:
stream_handle	benchmark-multi-accept.c	/^union stream_handle {$/;"	u	file:
stream_type	task.h	/^} stream_type;$/;"	t	typeref:enum:__anon23
stride	test-threadpool-cancel.c	/^  unsigned stride;$/;"	m	struct:cancel_info	file:
subthreads	test-thread-equal.c	/^uv_thread_t subthreads[2];$/;"	v
sv_alloc_cb	benchmark-multi-accept.c	/^static void sv_alloc_cb(uv_handle_t* handle,$/;"	f	file:
sv_async_cb	benchmark-multi-accept.c	/^static void sv_async_cb(uv_async_t* handle) {$/;"	f	file:
sv_connection_cb	benchmark-multi-accept.c	/^static void sv_connection_cb(uv_stream_t* server_handle, int status) {$/;"	f	file:
sv_read_cb	benchmark-multi-accept.c	/^static void sv_read_cb(uv_stream_t* handle,$/;"	f	file:
sv_recv_cb	test-udp-send-and-recv.c	/^static void sv_recv_cb(uv_udp_t* handle,$/;"	f	file:
sv_recv_cb	test-udp-send-immediate.c	/^static void sv_recv_cb(uv_udp_t* handle,$/;"	f	file:
sv_recv_cb	test-udp-try-send.c	/^static void sv_recv_cb(uv_udp_t* handle,$/;"	f	file:
sv_recv_cb_called	test-udp-send-and-recv.c	/^static int sv_recv_cb_called;$/;"	v	file:
sv_recv_cb_called	test-udp-send-immediate.c	/^static int sv_recv_cb_called;$/;"	v	file:
sv_recv_cb_called	test-udp-try-send.c	/^static int sv_recv_cb_called;$/;"	v	file:
sv_send_cb	test-udp-multicast-interface.c	/^static void sv_send_cb(uv_udp_send_t* req, int status) {$/;"	f	file:
sv_send_cb	test-udp-multicast-interface6.c	/^static void sv_send_cb(uv_udp_send_t* req, int status) {$/;"	f	file:
sv_send_cb	test-udp-multicast-join.c	/^static void sv_send_cb(uv_udp_send_t* req, int status) {$/;"	f	file:
sv_send_cb	test-udp-multicast-join6.c	/^static void sv_send_cb(uv_udp_send_t* req, int status) {$/;"	f	file:
sv_send_cb	test-udp-multicast-ttl.c	/^static void sv_send_cb(uv_udp_send_t* req, int status) {$/;"	f	file:
sv_send_cb	test-udp-send-and-recv.c	/^static void sv_send_cb(uv_udp_send_t* req, int status) {$/;"	f	file:
sv_send_cb_called	test-udp-multicast-interface.c	/^static int sv_send_cb_called;$/;"	v	file:
sv_send_cb_called	test-udp-multicast-interface6.c	/^static int sv_send_cb_called;$/;"	v	file:
sv_send_cb_called	test-udp-multicast-join.c	/^static int sv_send_cb_called;$/;"	v	file:
sv_send_cb_called	test-udp-multicast-join6.c	/^static int sv_send_cb_called;$/;"	v	file:
sv_send_cb_called	test-udp-multicast-ttl.c	/^static int sv_send_cb_called;$/;"	v	file:
sv_send_cb_called	test-udp-send-and-recv.c	/^static int sv_send_cb_called;$/;"	v	file:
symlink_cb	test-fs.c	/^static void symlink_cb(uv_fs_t* req) {$/;"	f	file:
symlink_cb_count	test-fs.c	/^static int symlink_cb_count;$/;"	v	file:
sync_bench	benchmark-fs-stat.c	/^static void sync_bench(const char* path) {$/;"	f	file:
sync_stat	benchmark-fs-stat.c	32;"	d	file:
tap_output	runner.c	/^int tap_output = 0;$/;"	v
task_entry_t	runner.h	/^} task_entry_t, bench_entry_t;$/;"	t	typeref:struct:__anon4
task_name	runner.h	/^  char *task_name;$/;"	m	struct:__anon4
tcp	benchmark-multi-accept.c	/^  uv_tcp_t tcp;$/;"	m	union:stream_handle	file:
tcp	benchmark-ping-pongs.c	/^  uv_tcp_t tcp;$/;"	m	struct:__anon20	file:
tcp	test-connection-fail.c	/^static uv_tcp_t tcp;$/;"	v	file:
tcp	test-getsockname.c	/^static uv_tcp_t tcp;$/;"	v	file:
tcp	test-ipc-send-recv.c	/^  uv_tcp_t tcp;$/;"	m	union:handles	file:
tcp	test-ping-pong.c	/^    uv_tcp_t tcp;$/;"	m	union:__anon12::__anon13	file:
tcp	test-shutdown-eof.c	/^static uv_tcp_t tcp;$/;"	v	file:
tcp	test-socket-buffer-size.c	/^static uv_tcp_t tcp;$/;"	v	file:
tcp4_echo_start	echo-server.c	/^static int tcp4_echo_start(int port) {$/;"	f	file:
tcp6_echo_start	echo-server.c	/^static int tcp6_echo_start(int port) {$/;"	f	file:
tcpServer	benchmark-pump.c	/^static uv_tcp_t tcpServer;$/;"	v	file:
tcpServer	echo-server.c	/^static uv_tcp_t tcpServer;$/;"	v	file:
tcpServer	test-getsockname.c	/^static uv_tcp_t tcpServer;$/;"	v	file:
tcp_check	test-tcp-close-accept.c	/^static uv_tcp_t tcp_check;$/;"	v	file:
tcp_check_req	test-tcp-close-accept.c	/^static uv_connect_t tcp_check_req;$/;"	v	file:
tcp_client	benchmark-tcp-write-batch.c	/^static uv_tcp_t tcp_client;$/;"	v	file:
tcp_client	test-tcp-write-after-connect.c	/^uv_tcp_t tcp_client;$/;"	v
tcp_client	test-tcp-write-to-half-open-connection.c	/^static uv_tcp_t tcp_client;$/;"	v	file:
tcp_close_cb	test-shutdown-eof.c	/^static void tcp_close_cb(uv_handle_t* handle) {$/;"	f	file:
tcp_conn	test-ipc.c	/^} tcp_conn;$/;"	t	typeref:struct:__anon10	file:
tcp_conn_read_cb_called	test-ipc.c	/^static int tcp_conn_read_cb_called;$/;"	v	file:
tcp_conn_rec	benchmark-pound.c	/^} tcp_conn_rec;$/;"	t	typeref:struct:__anon14	file:
tcp_conn_write_cb_called	test-ipc.c	/^static int tcp_conn_write_cb_called;$/;"	v	file:
tcp_connection	test-ipc.c	/^static uv_tcp_t tcp_connection;$/;"	v	file:
tcp_connection_write_cb	test-ipc.c	/^static void tcp_connection_write_cb(uv_write_t* req, int status) {$/;"	f	file:
tcp_connector	test-getsockname.c	/^static void tcp_connector(void) {$/;"	f	file:
tcp_connector	test-tcp-create-socket-early.c	/^static void tcp_connector(uv_loop_t* loop, uv_tcp_t* client, uv_connect_t* req) {$/;"	f	file:
tcp_conns	benchmark-pound.c	/^static tcp_conn_rec tcp_conns[MAX_CONNS];$/;"	v	file:
tcp_do_connect	benchmark-pound.c	/^static int tcp_do_connect(int num, make_connect_fn make_connect, void* arg) {$/;"	f	file:
tcp_do_setup	benchmark-pound.c	/^static void tcp_do_setup(int num, void* arg) {$/;"	f	file:
tcp_handle	test-tcp-close-while-connecting.c	/^static uv_tcp_t tcp_handle;$/;"	v	file:
tcp_handle	test-tcp-close.c	/^static uv_tcp_t tcp_handle;$/;"	v	file:
tcp_handle	test-tcp-read-stop.c	/^static uv_tcp_t tcp_handle;$/;"	v	file:
tcp_incoming	test-tcp-close-accept.c	/^static uv_tcp_t tcp_incoming[ARRAY_SIZE(tcp_outgoing)];$/;"	v	file:
tcp_listener	test-getsockname.c	/^static int tcp_listener(void) {$/;"	f	file:
tcp_listener	test-tcp-create-socket-early.c	/^static void tcp_listener(uv_loop_t* loop, uv_tcp_t* server) {$/;"	f	file:
tcp_make_connect	benchmark-pound.c	/^static void tcp_make_connect(conn_rec* p) {$/;"	f	file:
tcp_outgoing	test-tcp-close-accept.c	/^static uv_tcp_t tcp_outgoing[2];$/;"	v	file:
tcp_peer	test-tcp-write-to-half-open-connection.c	/^static uv_tcp_t tcp_peer; \/* client socket as accept()-ed by server *\/$/;"	v	file:
tcp_pinger_new	test-ping-pong.c	/^static void tcp_pinger_new(void) {$/;"	f	file:
tcp_pinger_v6_new	test-ping-pong.c	/^static void tcp_pinger_v6_new(void) {$/;"	f	file:
tcp_pump	benchmark-pump.c	/^static void tcp_pump(int n) {$/;"	f	file:
tcp_read_cb_called	test-ipc.c	/^static int tcp_read_cb_called;$/;"	v	file:
tcp_server	blackhole-server.c	/^static uv_tcp_t tcp_server;$/;"	v	file:
tcp_server	test-ipc.c	/^static uv_tcp_t tcp_server;$/;"	v	file:
tcp_server	test-tcp-close-accept.c	/^static uv_tcp_t tcp_server;$/;"	v	file:
tcp_server	test-tcp-write-to-half-open-connection.c	/^static uv_tcp_t tcp_server;$/;"	v	file:
tcp_server2	test-ipc.c	/^static uv_tcp_t tcp_server2;$/;"	v	file:
tcp_server_listening	test-ipc.c	/^static int tcp_server_listening;$/;"	v	file:
tcp_write_cb_called	test-ipc.c	/^static int tcp_write_cb_called;$/;"	v	file:
tcp_write_handles	benchmark-pump.c	/^static uv_tcp_t tcp_write_handles[MAX_WRITE_HANDLES];$/;"	v	file:
tcp_write_req	test-ipc.c	/^  uv_write_t tcp_write_req;$/;"	m	struct:__anon10	file:
terminated	runner-unix.h	/^  int terminated;$/;"	m	struct:__anon6
test_async	benchmark-async.c	/^static int test_async(int nthreads) {$/;"	f	file:
test_async_pummel	benchmark-async-pummel.c	/^static int test_async_pummel(int nthreads) {$/;"	f	file:
test_buf	test-fs.c	/^static char test_buf[] = "test-buffer\\n";$/;"	v	file:
test_buf2	test-fs.c	/^static char test_buf2[] = "second-buffer\\n";$/;"	v	file:
test_ctx	test-ipc-send-recv.c	/^struct test_ctx {$/;"	s	file:
test_mode	test-poll.c	/^static test_mode_t test_mode = DUPLEX;$/;"	v	file:
test_mode_t	test-poll.c	/^} test_mode_t;$/;"	t	typeref:enum:__anon16	file:
test_status	task.h	/^enum test_status {$/;"	g
test_tcp	benchmark-multi-accept.c	/^static int test_tcp(unsigned int num_servers, unsigned int num_clients) {$/;"	f	file:
test_thread	test-thread.c	/^struct test_thread {$/;"	s	file:
thread	benchmark-async.c	/^  uv_thread_t thread;$/;"	m	struct:ctx	file:
thread	test-async-null-cb.c	/^static uv_thread_t thread;$/;"	v	file:
thread	test-async.c	/^static uv_thread_t thread;$/;"	v	file:
thread_called	test-thread.c	/^  volatile int thread_called;$/;"	m	struct:test_thread	file:
thread_called	test-thread.c	/^static volatile int thread_called;$/;"	v	file:
thread_cb	benchmark-million-async.c	/^static void thread_cb(void* arg) {$/;"	f	file:
thread_cb	test-async-null-cb.c	/^static void thread_cb(void* dummy) {$/;"	f	file:
thread_cb	test-async.c	/^static void thread_cb(void *arg) {$/;"	f	file:
thread_ctx	test-pipe-set-non-blocking.c	/^struct thread_ctx {$/;"	s	file:
thread_entry	benchmark-thread.c	/^static void thread_entry(void* arg) {$/;"	f	file:
thread_entry	test-thread.c	/^static void thread_entry(void* arg) {$/;"	f	file:
thread_id	benchmark-million-async.c	/^static uv_thread_t thread_id;$/;"	v	file:
thread_id	benchmark-multi-accept.c	/^  uv_thread_t thread_id;$/;"	m	struct:server_ctx	file:
thread_id	test-thread.c	/^  uv_thread_t thread_id;$/;"	m	struct:fs_req	file:
thread_id	test-thread.c	/^  uv_thread_t thread_id;$/;"	m	struct:getaddrinfo_req	file:
thread_id	test-thread.c	/^  uv_thread_t thread_id;$/;"	m	struct:test_thread	file:
thread_main	test-pipe-set-non-blocking.c	/^static void thread_main(void* arg) {$/;"	f	file:
ticks	benchmark-loop-count.c	/^static unsigned long ticks;$/;"	v	file:
ticks	test-tcp-oob.c	/^static int ticks;$/;"	v	file:
ticks	test-tcp-unexpected-read.c	/^static unsigned long ticks; \/* event loop ticks *\/$/;"	v	file:
timed	benchmark-udp-pummel.c	/^static int timed;$/;"	v	file:
timeout	runner.h	/^  int timeout;$/;"	m	struct:__anon4
timeout	test-udp-ipv6.c	/^static uv_timer_t timeout;$/;"	v	file:
timeout_cb	benchmark-udp-pummel.c	/^static void timeout_cb(uv_timer_t* timer) {$/;"	f	file:
timeout_cb	test-udp-ipv6.c	/^static void timeout_cb(uv_timer_t* timer) {$/;"	f	file:
timer	test-callback-stack.c	/^static uv_timer_t timer;$/;"	v	file:
timer	test-connection-fail.c	/^static uv_timer_t timer;$/;"	v	file:
timer	test-fs-event.c	/^static uv_timer_t timer;$/;"	v	file:
timer	test-shutdown-eof.c	/^static uv_timer_t timer;$/;"	v	file:
timer	test-spawn.c	/^static uv_timer_t timer;$/;"	v	file:
timer	test-tcp-connect-timeout.c	/^static uv_timer_t timer;$/;"	v	file:
timer	test-tcp-shutdown-after-write.c	/^static uv_timer_t timer;$/;"	v	file:
timer	test-tcp-write-queue-order.c	/^static uv_timer_t timer;$/;"	v	file:
timer	test-udp-send-unreachable.c	/^static uv_timer_t timer;$/;"	v	file:
timer	test-walk-handles.c	/^static uv_timer_t timer;$/;"	v	file:
timer1_cb	test-tcp-close-while-connecting.c	/^static void timer1_cb(uv_timer_t* handle) {$/;"	f	file:
timer1_cb_called	test-tcp-close-while-connecting.c	/^static int timer1_cb_called;$/;"	v	file:
timer1_handle	test-tcp-close-while-connecting.c	/^static uv_timer_t timer1_handle;$/;"	v	file:
timer2_cb	test-tcp-close-while-connecting.c	/^static void timer2_cb(uv_timer_t* handle) {$/;"	f	file:
timer2_handle	test-tcp-close-while-connecting.c	/^static uv_timer_t timer2_handle;$/;"	v	file:
timer_called	test-loop-stop.c	/^static int timer_called = 0;$/;"	v	file:
timer_called	test-run-nowait.c	/^static int timer_called = 0;$/;"	v	file:
timer_cb	benchmark-loop-count.c	/^static void timer_cb(uv_timer_t* handle) {$/;"	f	file:
timer_cb	benchmark-million-async.c	/^static void timer_cb(uv_timer_t* handle) {$/;"	f	file:
timer_cb	benchmark-million-timers.c	/^static void timer_cb(uv_timer_t* handle) {$/;"	f	file:
timer_cb	test-active.c	/^static void timer_cb(uv_timer_t* handle) {$/;"	f	file:
timer_cb	test-callback-order.c	/^static void timer_cb(uv_timer_t* handle) {$/;"	f	file:
timer_cb	test-callback-stack.c	/^static void timer_cb(uv_timer_t* handle) {$/;"	f	file:
timer_cb	test-close-order.c	/^static void timer_cb(uv_timer_t* handle) {$/;"	f	file:
timer_cb	test-connection-fail.c	/^static void timer_cb(uv_timer_t* handle) {$/;"	f	file:
timer_cb	test-default-loop-close.c	/^static void timer_cb(uv_timer_t* timer) {$/;"	f	file:
timer_cb	test-fs-event.c	/^static void timer_cb(uv_timer_t* handle) {$/;"	f	file:
timer_cb	test-fs-poll.c	/^static void timer_cb(uv_timer_t* handle) {$/;"	f	file:
timer_cb	test-idle.c	/^static void timer_cb(uv_timer_t* handle) {$/;"	f	file:
timer_cb	test-loop-alive.c	/^static void timer_cb(uv_timer_t* handle) {$/;"	f	file:
timer_cb	test-loop-close.c	/^static void timer_cb(uv_timer_t* handle) {$/;"	f	file:
timer_cb	test-loop-configure.c	/^static void timer_cb(uv_timer_t* handle) {$/;"	f	file:
timer_cb	test-loop-handles.c	/^static void timer_cb(uv_timer_t* handle) {$/;"	f	file:
timer_cb	test-loop-stop.c	/^static void timer_cb(uv_timer_t* handle) {$/;"	f	file:
timer_cb	test-run-nowait.c	/^static void timer_cb(uv_timer_t* handle) {$/;"	f	file:
timer_cb	test-shutdown-eof.c	/^static void timer_cb(uv_timer_t* handle) {$/;"	f	file:
timer_cb	test-signal.c	/^static void timer_cb(uv_timer_t* handle) {$/;"	f	file:
timer_cb	test-spawn.c	/^static void timer_cb(uv_timer_t* handle) {$/;"	f	file:
timer_cb	test-tcp-connect-timeout.c	/^static void timer_cb(uv_timer_t* handle) {$/;"	f	file:
timer_cb	test-tcp-read-stop.c	/^static void timer_cb(uv_timer_t* handle) {$/;"	f	file:
timer_cb	test-tcp-shutdown-after-write.c	/^static void timer_cb(uv_timer_t* handle) {$/;"	f	file:
timer_cb	test-tcp-unexpected-read.c	/^static void timer_cb(uv_timer_t* handle) {$/;"	f	file:
timer_cb	test-tcp-write-queue-order.c	/^void timer_cb(uv_timer_t* handle) {$/;"	f
timer_cb	test-threadpool-cancel.c	/^static void timer_cb(uv_timer_t* handle) {$/;"	f	file:
timer_cb	test-timer-from-check.c	/^static void timer_cb(uv_timer_t* handle) {$/;"	f	file:
timer_cb	test-udp-send-unreachable.c	/^static void timer_cb(uv_timer_t* h) {$/;"	f	file:
timer_cb	test-walk-handles.c	/^static void timer_cb(uv_timer_t* handle) {$/;"	f	file:
timer_cb_called	benchmark-million-timers.c	/^static int timer_cb_called;$/;"	v	file:
timer_cb_called	test-callback-order.c	/^static int timer_cb_called;$/;"	v	file:
timer_cb_called	test-callback-stack.c	/^static int timer_cb_called = 0;$/;"	v	file:
timer_cb_called	test-close-order.c	/^static int timer_cb_called;$/;"	v	file:
timer_cb_called	test-default-loop-close.c	/^static int timer_cb_called;$/;"	v	file:
timer_cb_called	test-fs-event.c	/^static int timer_cb_called;$/;"	v	file:
timer_cb_called	test-fs-poll.c	/^static int timer_cb_called;$/;"	v	file:
timer_cb_called	test-idle.c	/^static int timer_cb_called = 0;$/;"	v	file:
timer_cb_called	test-threadpool-cancel.c	/^static unsigned timer_cb_called;$/;"	v	file:
timer_cb_called	test-timer-from-check.c	/^static int timer_cb_called;$/;"	v	file:
timer_cb_called	test-udp-send-unreachable.c	/^static int timer_cb_called;$/;"	v	file:
timer_cb_calls	test-connection-fail.c	/^static int timer_cb_calls;$/;"	v	file:
timer_cb_close_handle	test-fs-event.c	/^static void timer_cb_close_handle(uv_timer_t* timer) {$/;"	f	file:
timer_cb_file	test-fs-event.c	/^static void timer_cb_file(uv_timer_t* handle) {$/;"	f	file:
timer_cb_nop	test-fs-event.c	/^static void timer_cb_nop(uv_timer_t* handle) {$/;"	f	file:
timer_cb_touch	test-fs-event.c	/^static void timer_cb_touch(uv_timer_t* timer) {$/;"	f	file:
timer_cb_touch_called	test-fs-event.c	/^static int timer_cb_touch_called;$/;"	v	file:
timer_cb_watch_twice	test-fs-event.c	/^static void timer_cb_watch_twice(uv_timer_t* handle) {$/;"	f	file:
timer_close_cb	test-connection-fail.c	/^static void timer_close_cb(uv_handle_t* handle) {$/;"	f	file:
timer_close_cb	test-shutdown-eof.c	/^static void timer_close_cb(uv_handle_t* handle) {$/;"	f	file:
timer_close_cb_called	test-tcp-shutdown-after-write.c	/^static int timer_close_cb_called;$/;"	v	file:
timer_close_cb_calls	test-connection-fail.c	/^static int timer_close_cb_calls;$/;"	v	file:
timer_counter	test-spawn.c	/^static int timer_counter;$/;"	v	file:
timer_counter_cb	test-spawn.c	/^static void timer_counter_cb(uv_timer_t* handle) {$/;"	f	file:
timer_ctx	test-signal.c	/^struct timer_ctx {$/;"	s	file:
timer_handle	benchmark-loop-count.c	/^static uv_timer_t timer_handle;$/;"	v	file:
timer_handle	benchmark-pump.c	/^static uv_timer_t timer_handle;$/;"	v	file:
timer_handle	test-callback-order.c	/^static uv_timer_t timer_handle;$/;"	v	file:
timer_handle	test-fs-poll.c	/^static uv_timer_t timer_handle;$/;"	v	file:
timer_handle	test-idle.c	/^static uv_timer_t timer_handle;$/;"	v	file:
timer_handle	test-loop-alive.c	/^static uv_timer_t timer_handle;$/;"	v	file:
timer_handle	test-loop-close.c	/^static uv_timer_t timer_handle;$/;"	v	file:
timer_handle	test-loop-handles.c	/^static uv_timer_t timer_handle;$/;"	v	file:
timer_handle	test-loop-stop.c	/^static uv_timer_t timer_handle;$/;"	v	file:
timer_handle	test-poll.c	/^  uv_timer_t timer_handle;$/;"	m	struct:connection_context_s	file:
timer_handle	test-run-nowait.c	/^static uv_timer_t timer_handle;$/;"	v	file:
timer_handle	test-tcp-read-stop.c	/^static uv_timer_t timer_handle;$/;"	v	file:
timer_handle	test-tcp-unexpected-read.c	/^static uv_timer_t timer_handle;$/;"	v	file:
timer_handle	test-threadpool-cancel.c	/^  uv_timer_t timer_handle;$/;"	m	struct:cancel_info	file:
timer_handle	test-timer-from-check.c	/^static uv_timer_t timer_handle;$/;"	v	file:
timer_handle1	test-close-order.c	/^static uv_timer_t timer_handle1;$/;"	v	file:
timer_handle2	test-close-order.c	/^static uv_timer_t timer_handle2;$/;"	v	file:
timer_run_once_timer_cb	test-timer.c	/^static void timer_run_once_timer_cb(uv_timer_t* handle) {$/;"	f	file:
timer_run_once_timer_cb_called	test-timer.c	/^static unsigned int timer_run_once_timer_cb_called;$/;"	v	file:
tiny_timer	test-timer.c	/^static uv_timer_t tiny_timer;$/;"	v	file:
tiny_timer_cb	test-timer.c	/^static void tiny_timer_cb(uv_timer_t* handle) {$/;"	f	file:
tls_key	test-thread.c	/^static uv_key_t tls_key;$/;"	v	file:
tls_thread	test-thread.c	/^static void tls_thread(void* arg) {$/;"	f	file:
touch_file	test-fs-event.c	/^static void touch_file(const char* name) {$/;"	f	file:
touch_file	test-fs-poll.c	/^static void touch_file(const char* path) {$/;"	f	file:
tty	test-ipc-send-recv.c	/^  uv_tty_t tty;$/;"	m	union:handles	file:
type	benchmark-pump.c	/^static stream_type type;$/;"	v	file:
udp	test-getsockname.c	/^static uv_udp_t udp;$/;"	v	file:
udp	test-socket-buffer-size.c	/^static uv_udp_t udp;$/;"	v	file:
udp4_echo_start	echo-server.c	/^static int udp4_echo_start(int port) {$/;"	f	file:
udpServer	echo-server.c	/^static uv_udp_t udpServer;$/;"	v	file:
udpServer	test-getsockname.c	/^static uv_udp_t udpServer;$/;"	v	file:
udp_handle	benchmark-udp-pummel.c	/^  uv_udp_t udp_handle;$/;"	m	struct:receiver_state	file:
udp_handle	benchmark-udp-pummel.c	/^  uv_udp_t udp_handle;$/;"	m	struct:sender_state	file:
udp_listener	test-getsockname.c	/^static int udp_listener(void) {$/;"	f	file:
udp_options_test	test-udp-options.c	/^static int udp_options_test(const struct sockaddr* addr) {$/;"	f	file:
udp_recv	test-getsockname.c	/^static void udp_recv(uv_udp_t* handle,$/;"	f	file:
udp_send	test-getsockname.c	/^static void udp_send(uv_udp_send_t* req, int status) {$/;"	f	file:
udp_sender	test-getsockname.c	/^static void udp_sender(void) {$/;"	f	file:
unblock_threadpool	test-threadpool-cancel.c	/^static void unblock_threadpool(void) {$/;"	f	file:
unlink	test-fs.c	37;"	d	file:
unlink_cb	test-fs.c	/^static void unlink_cb(uv_fs_t* req) {$/;"	f	file:
unlink_cb_count	test-fs.c	/^static int unlink_cb_count;$/;"	v	file:
unlink_req	test-fs.c	/^static uv_fs_t unlink_req;$/;"	v	file:
use_broadcast	test-condvar.c	/^  int use_broadcast;$/;"	m	struct:__anon24	file:
utime_cb	test-fs.c	/^static void utime_cb(uv_fs_t* req) {$/;"	f	file:
utime_cb_count	test-fs.c	/^static int utime_cb_count;$/;"	v	file:
utime_check_t	test-fs.c	/^} utime_check_t;$/;"	t	typeref:struct:__anon5	file:
utime_req	test-fs.c	/^static uv_fs_t utime_req;$/;"	v	file:
uv_buf_t	benchmark-ping-pongs.c	/^  uv_buf_t uv_buf_t;$/;"	m	struct:buf_s	file:
uv_buf_t	benchmark-pump.c	/^  uv_buf_t uv_buf_t;$/;"	m	struct:buf_list_s	file:
uv_req	benchmark-pump.c	/^  union uv_any_req uv_req;$/;"	m	struct:req_list_s	typeref:union:req_list_s::uv_any_req	file:
uv_sleep	runner-unix.c	/^void uv_sleep(int msec) {$/;"	f
uv_sleep	runner-win.c	/^void uv_sleep(int msec) {$/;"	f
valid_writable_wakeups	test-poll.c	/^static int valid_writable_wakeups = 0;$/;"	v	file:
vec	runner-unix.c	/^  process_info_t* vec;$/;"	m	struct:__anon19	file:
wait_mutex	test-threadpool-cancel.c	/^static uv_mutex_t wait_mutex;$/;"	v	file:
walk_cb	test-walk-handles.c	/^static void walk_cb(uv_handle_t* handle, void* arg) {$/;"	f	file:
warmup	benchmark-fs-stat.c	/^static void warmup(const char* path) {$/;"	f	file:
work2_cb	test-threadpool-cancel.c	/^static void work2_cb(uv_work_t* req) {$/;"	f	file:
work_cb	test-loop-alive.c	/^static void work_cb(uv_work_t* req) {$/;"	f	file:
work_cb	test-threadpool-cancel.c	/^static void work_cb(uv_work_t* req) {$/;"	f	file:
work_cb	test-threadpool.c	/^static void work_cb(uv_work_t* req) {$/;"	f	file:
work_cb_called	test-threadpool-cancel.c	/^static unsigned work_cb_called;$/;"	v	file:
work_cb_count	test-threadpool.c	/^static int work_cb_count;$/;"	v	file:
work_req	test-loop-alive.c	/^static uv_work_t work_req;$/;"	v	file:
work_req	test-threadpool.c	/^static uv_work_t work_req;$/;"	v	file:
worker	benchmark-async.c	/^static void worker(void* arg) {$/;"	f	file:
worker	test-barrier.c	/^static void worker(void* arg) {$/;"	f	file:
worker	test-condvar.c	/^static void worker(void* arg) {$/;"	f	file:
worker	test-semaphore.c	/^static void worker(void* arg) {$/;"	f	file:
worker_async	benchmark-async.c	/^  uv_async_t worker_async;  \/* wake up worker *\/$/;"	m	struct:ctx	file:
worker_async_cb	benchmark-async.c	/^static void worker_async_cb(uv_async_t* handle) {$/;"	f	file:
worker_barrier_wait_rval	test-barrier.c	/^  int worker_barrier_wait_rval;$/;"	m	struct:__anon3	file:
worker_config	test-barrier.c	/^} worker_config;$/;"	t	typeref:struct:__anon3	file:
worker_config	test-condvar.c	/^} worker_config;$/;"	t	typeref:struct:__anon24	file:
worker_config	test-semaphore.c	/^} worker_config;$/;"	t	typeref:struct:__anon1	file:
worker_seen	benchmark-async.c	/^  unsigned int worker_seen;$/;"	m	struct:ctx	file:
worker_sent	benchmark-async.c	/^  unsigned int worker_sent;$/;"	m	struct:ctx	file:
write	test-fs.c	40;"	d	file:
write2_cb	test-ipc-send-recv.c	/^static void write2_cb(uv_write_t* req, int status) {$/;"	f	file:
write_buffer	benchmark-pump.c	/^static char write_buffer[WRITE_BUFFER_SIZE];$/;"	v	file:
write_callbacks	test-tcp-write-queue-order.c	/^static int write_callbacks;$/;"	v	file:
write_cancelled_callbacks	test-tcp-write-queue-order.c	/^static int write_cancelled_callbacks;$/;"	v	file:
write_cb	benchmark-pump.c	/^static void write_cb(uv_write_t* req, int status) {$/;"	f	file:
write_cb	benchmark-tcp-write-batch.c	/^static void write_cb(uv_write_t* req, int status) {$/;"	f	file:
write_cb	test-callback-stack.c	/^static void write_cb(uv_write_t* req, int status) {$/;"	f	file:
write_cb	test-fs.c	/^static void write_cb(uv_fs_t* req) {$/;"	f	file:
write_cb	test-ref.c	/^static void write_cb(uv_write_t* req, int status) {$/;"	f	file:
write_cb	test-spawn.c	/^static void write_cb(uv_write_t* req, int status) {$/;"	f	file:
write_cb	test-tcp-close-accept.c	/^static void write_cb(uv_write_t* req, int status) {$/;"	f	file:
write_cb	test-tcp-close.c	/^static void write_cb(uv_write_t* req, int status) {$/;"	f	file:
write_cb	test-tcp-connect-error-after-write.c	/^static void write_cb(uv_write_t* req, int status) {$/;"	f	file:
write_cb	test-tcp-open.c	/^static void write_cb(uv_write_t* req, int status) {$/;"	f	file:
write_cb	test-tcp-read-stop.c	/^static void write_cb(uv_write_t* req, int status) {$/;"	f	file:
write_cb	test-tcp-shutdown-after-write.c	/^static void write_cb(uv_write_t* req, int status) {$/;"	f	file:
write_cb	test-tcp-unexpected-read.c	/^static void write_cb(uv_write_t* req, int status) {$/;"	f	file:
write_cb	test-tcp-write-after-connect.c	/^static void write_cb(uv_write_t *req, int status) {$/;"	f	file:
write_cb	test-tcp-write-fail.c	/^static void write_cb(uv_write_t* req, int status) {$/;"	f	file:
write_cb	test-tcp-write-queue-order.c	/^void write_cb(uv_write_t* req, int status) {$/;"	f
write_cb	test-tcp-write-to-half-open-connection.c	/^static void write_cb(uv_write_t* req, int status) {$/;"	f	file:
write_cb	test-tcp-writealot.c	/^static void write_cb(uv_write_t* req, int status) {$/;"	f	file:
write_cb_called	benchmark-tcp-write-batch.c	/^static int write_cb_called = 0;$/;"	v	file:
write_cb_called	test-callback-stack.c	/^static int write_cb_called = 0;$/;"	v	file:
write_cb_called	test-ref.c	/^static int write_cb_called;$/;"	v	file:
write_cb_called	test-tcp-close-accept.c	/^static unsigned int write_cb_called;$/;"	v	file:
write_cb_called	test-tcp-close.c	/^static int write_cb_called;$/;"	v	file:
write_cb_called	test-tcp-connect-error-after-write.c	/^static int write_cb_called;$/;"	v	file:
write_cb_called	test-tcp-open.c	/^static int write_cb_called = 0;$/;"	v	file:
write_cb_called	test-tcp-shutdown-after-write.c	/^static int write_cb_called;$/;"	v	file:
write_cb_called	test-tcp-write-fail.c	/^static int write_cb_called = 0;$/;"	v	file:
write_cb_called	test-tcp-write-to-half-open-connection.c	/^static int write_cb_called;$/;"	v	file:
write_cb_called	test-tcp-writealot.c	/^static int write_cb_called = 0;$/;"	v	file:
write_cb_count	test-fs.c	/^static int write_cb_count;$/;"	v	file:
write_error_callbacks	test-tcp-write-queue-order.c	/^static int write_error_callbacks;$/;"	v	file:
write_req	benchmark-multi-accept.c	/^  uv_write_t write_req;$/;"	m	struct:ipc_peer_ctx	file:
write_req	benchmark-pound.c	/^  uv_write_t write_req;$/;"	m	struct:__anon14	file:
write_req	benchmark-pound.c	/^  uv_write_t write_req;$/;"	m	struct:__anon15	file:
write_req	benchmark-pound.c	/^  uv_write_t write_req;$/;"	m	struct:conn_rec_s	file:
write_req	benchmark-tcp-write-batch.c	/^} write_req;$/;"	t	typeref:struct:__anon21	file:
write_req	test-callback-stack.c	/^static uv_write_t write_req;$/;"	v	file:
write_req	test-fs.c	/^static uv_fs_t write_req;$/;"	v	file:
write_req	test-ipc-send-recv.c	/^  uv_write_t write_req;$/;"	m	struct:echo_ctx	file:
write_req	test-ipc-send-recv.c	/^  uv_write_t write_req;$/;"	m	struct:test_ctx	file:
write_req	test-ipc.c	/^static uv_write_t write_req;$/;"	v	file:
write_req	test-ref.c	/^static uv_write_t write_req;$/;"	v	file:
write_req	test-shutdown-eof.c	/^static uv_write_t write_req;$/;"	v	file:
write_req	test-tcp-open.c	/^static uv_write_t write_req;$/;"	v	file:
write_req	test-tcp-read-stop.c	/^static uv_write_t write_req;$/;"	v	file:
write_req	test-tcp-shutdown-after-write.c	/^static uv_write_t write_req;$/;"	v	file:
write_req	test-tcp-unexpected-read.c	/^static uv_write_t write_req;$/;"	v	file:
write_req	test-tcp-write-fail.c	/^static uv_write_t write_req;$/;"	v	file:
write_req	test-tcp-write-to-half-open-connection.c	/^static uv_write_t write_req;$/;"	v	file:
write_req_t	dns-server.c	/^} write_req_t;$/;"	t	typeref:struct:__anon7	file:
write_req_t	echo-server.c	/^} write_req_t;$/;"	t	typeref:struct:__anon2	file:
write_reqs	benchmark-tcp-write-batch.c	/^static write_req* write_reqs;$/;"	v	file:
write_reqs	test-tcp-close-accept.c	/^static uv_write_t write_reqs[ARRAY_SIZE(tcp_outgoing)];$/;"	v	file:
write_reqs	test-tcp-writealot.c	/^static uv_write_t write_reqs[WRITES];$/;"	v	file:
write_request	test-tcp-write-after-connect.c	/^uv_write_t write_request;$/;"	v
write_requests	test-tcp-write-queue-order.c	/^static uv_write_t write_requests[REQ_COUNT];$/;"	v	file:
write_sockets	benchmark-pump.c	/^static int write_sockets = 0;$/;"	v	file:
